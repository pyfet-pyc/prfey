
# file test/134294.pyc
# --- This code section failed: ---

 L.   1         0  LOAD_CONST               0
                2  LOAD_CONST               None
                4  IMPORT_NAME              abc
                6  STORE_NAME               abc

 L.   2         8  LOAD_CONST               0
               10  LOAD_CONST               None
               12  IMPORT_NAME              collections
               14  STORE_NAME               collections

 L.   3        16  LOAD_CONST               0
               18  LOAD_CONST               None
               20  IMPORT_NAME              contextlib
               22  STORE_NAME               contextlib

 L.   4        24  LOAD_CONST               0
               26  LOAD_CONST               None
               28  IMPORT_NAME              sys
               30  STORE_NAME               sys

 L.   5        32  LOAD_CONST               0
               34  LOAD_CONST               None
               36  IMPORT_NAME              typing
               38  STORE_NAME               typing

 L.   6        40  LOAD_CONST               0
               42  LOAD_CONST               None
               44  IMPORT_NAME_ATTR         collections.abc
               46  IMPORT_FROM              abc
               48  STORE_NAME               collections_abc
               50  POP_TOP          

 L.   7        52  LOAD_CONST               0
               54  LOAD_CONST               None
               56  IMPORT_NAME              operator
               58  STORE_NAME               operator

 L.  12        60  LOAD_CONST               0
               62  LOAD_CONST               ('Generic', 'Callable', 'TypeVar', 'Tuple')
               64  IMPORT_NAME              typing
               66  IMPORT_FROM              Generic
               68  STORE_NAME               Generic
               70  IMPORT_FROM              Callable
               72  STORE_NAME               Callable
               74  IMPORT_FROM              TypeVar
               76  STORE_NAME               TypeVar
               78  IMPORT_FROM              Tuple
               80  STORE_NAME               Tuple
               82  POP_TOP          

 L.  17        84  LOAD_NAME                sys
               86  LOAD_ATTR                version_info
               88  LOAD_CONST               None
               90  LOAD_CONST               3
               92  BUILD_SLICE_2         2 
               94  BINARY_SUBSCR    
               96  LOAD_CONST               (3, 7, 0)
               98  COMPARE_OP               >=
              100  STORE_NAME               PEP_560

 L.  19       102  LOAD_NAME                PEP_560
              104  POP_JUMP_IF_FALSE   116  'to 116'

 L.  20       106  LOAD_NAME                type
              108  DUP_TOP          
              110  STORE_NAME               GenericMeta
              112  STORE_NAME               TypingMeta
              114  JUMP_FORWARD        132  'to 132'
            116_0  COME_FROM           104  '104'

 L.  22       116  LOAD_CONST               0
              118  LOAD_CONST               ('GenericMeta', 'TypingMeta')
              120  IMPORT_NAME              typing
              122  IMPORT_FROM              GenericMeta
              124  STORE_NAME               GenericMeta
              126  IMPORT_FROM              TypingMeta
              128  STORE_NAME               TypingMeta
              130  POP_TOP          
            132_0  COME_FROM           114  '114'

 L.  23       132  LOAD_CONST               False
              134  STORE_NAME               OLD_GENERICS

 L.  24       136  SETUP_FINALLY       162  'to 162'

 L.  25       138  LOAD_CONST               0
              140  LOAD_CONST               ('_type_vars', '_next_in_mro', '_type_check')
              142  IMPORT_NAME              typing
              144  IMPORT_FROM              _type_vars
              146  STORE_NAME               _type_vars
              148  IMPORT_FROM              _next_in_mro
              150  STORE_NAME               _next_in_mro
              152  IMPORT_FROM              _type_check
              154  STORE_NAME               _type_check
              156  POP_TOP          
              158  POP_BLOCK        
              160  JUMP_FORWARD        184  'to 184'
            162_0  COME_FROM_FINALLY   136  '136'

 L.  26       162  DUP_TOP          
              164  LOAD_NAME                ImportError
              166  <121>               182  ''
              168  POP_TOP          
              170  POP_TOP          
              172  POP_TOP          

 L.  27       174  LOAD_CONST               True
              176  STORE_NAME               OLD_GENERICS
              178  POP_EXCEPT       
              180  JUMP_FORWARD        184  'to 184'
              182  <48>             
            184_0  COME_FROM           180  '180'
            184_1  COME_FROM           160  '160'

 L.  28       184  SETUP_FINALLY       206  'to 206'

 L.  29       186  LOAD_CONST               0
              188  LOAD_CONST               ('_subs_tree',)
              190  IMPORT_NAME              typing
              192  IMPORT_FROM              _subs_tree
              194  STORE_NAME               _subs_tree
              196  POP_TOP          

 L.  30       198  LOAD_CONST               True
              200  STORE_NAME               SUBS_TREE
              202  POP_BLOCK        
              204  JUMP_FORWARD        228  'to 228'
            206_0  COME_FROM_FINALLY   184  '184'

 L.  31       206  DUP_TOP          
              208  LOAD_NAME                ImportError
              210  <121>               226  ''
              212  POP_TOP          
              214  POP_TOP          
              216  POP_TOP          

 L.  32       218  LOAD_CONST               False
              220  STORE_NAME               SUBS_TREE
              222  POP_EXCEPT       
              224  JUMP_FORWARD        228  'to 228'
              226  <48>             
            228_0  COME_FROM           224  '224'
            228_1  COME_FROM           204  '204'

 L.  33       228  SETUP_FINALLY       246  'to 246'

 L.  34       230  LOAD_CONST               0
              232  LOAD_CONST               ('_tp_cache',)
              234  IMPORT_NAME              typing
              236  IMPORT_FROM              _tp_cache
              238  STORE_NAME               _tp_cache
              240  POP_TOP          
              242  POP_BLOCK        
              244  JUMP_FORWARD        274  'to 274'
            246_0  COME_FROM_FINALLY   228  '228'

 L.  35       246  DUP_TOP          
              248  LOAD_NAME                ImportError
          250_252  <121>               272  ''
              254  POP_TOP          
              256  POP_TOP          
              258  POP_TOP          

 L.  36       260  LOAD_CODE                <code_object _tp_cache>
              262  LOAD_STR                 '_tp_cache'
              264  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              266  STORE_NAME               _tp_cache
              268  POP_EXCEPT       
              270  JUMP_FORWARD        274  'to 274'
              272  <48>             
            274_0  COME_FROM           270  '270'
            274_1  COME_FROM           244  '244'

 L.  38       274  SETUP_FINALLY       296  'to 296'

 L.  39       276  LOAD_CONST               0
              278  LOAD_CONST               ('_TypingEllipsis', '_TypingEmpty')
              280  IMPORT_NAME              typing
              282  IMPORT_FROM              _TypingEllipsis
              284  STORE_NAME               _TypingEllipsis
              286  IMPORT_FROM              _TypingEmpty
              288  STORE_NAME               _TypingEmpty
              290  POP_TOP          
              292  POP_BLOCK        
              294  JUMP_FORWARD        344  'to 344'
            296_0  COME_FROM_FINALLY   274  '274'

 L.  40       296  DUP_TOP          
              298  LOAD_NAME                ImportError
          300_302  <121>               342  ''
              304  POP_TOP          
              306  POP_TOP          
              308  POP_TOP          

 L.  41       310  LOAD_BUILD_CLASS 
              312  LOAD_CODE                <code_object _TypingEllipsis>
              314  LOAD_STR                 '_TypingEllipsis'
              316  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              318  LOAD_STR                 '_TypingEllipsis'
              320  CALL_FUNCTION_2       2  ''
              322  STORE_NAME               _TypingEllipsis

 L.  44       324  LOAD_BUILD_CLASS 
              326  LOAD_CODE                <code_object _TypingEmpty>
              328  LOAD_STR                 '_TypingEmpty'
              330  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              332  LOAD_STR                 '_TypingEmpty'
              334  CALL_FUNCTION_2       2  ''
              336  STORE_NAME               _TypingEmpty
              338  POP_EXCEPT       
              340  JUMP_FORWARD        344  'to 344'
              342  <48>             
            344_0  COME_FROM           340  '340'
            344_1  COME_FROM           294  '294'

 L.  52       344  LOAD_CODE                <code_object _no_slots_copy>
              346  LOAD_STR                 '_no_slots_copy'
              348  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              350  STORE_NAME               _no_slots_copy

 L.  60       352  LOAD_CODE                <code_object _check_generic>
              354  LOAD_STR                 '_check_generic'
              356  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              358  STORE_NAME               _check_generic

 L.  70       360  LOAD_NAME                hasattr
              362  LOAD_NAME                typing
              364  LOAD_STR                 '_generic_new'
              366  CALL_FUNCTION_2       2  ''
          368_370  POP_JUMP_IF_FALSE   380  'to 380'

 L.  71       372  LOAD_NAME                typing
              374  LOAD_ATTR                _generic_new
              376  STORE_NAME               _generic_new
              378  JUMP_FORWARD        388  'to 388'
            380_0  COME_FROM           368  '368'

 L.  86       380  LOAD_CODE                <code_object _generic_new>
              382  LOAD_STR                 '_generic_new'
              384  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              386  STORE_NAME               _generic_new
            388_0  COME_FROM           378  '378'

 L.  90       388  LOAD_NAME                hasattr
              390  LOAD_NAME                typing
              392  LOAD_STR                 '_geqv'
              394  CALL_FUNCTION_2       2  ''
          396_398  POP_JUMP_IF_FALSE   418  'to 418'

 L.  91       400  LOAD_CONST               0
              402  LOAD_CONST               ('_geqv',)
              404  IMPORT_NAME              typing
              406  IMPORT_FROM              _geqv
              408  STORE_NAME               _geqv
              410  POP_TOP          

 L.  92       412  LOAD_CONST               True
              414  STORE_NAME               _geqv_defined
              416  JUMP_FORWARD        426  'to 426'
            418_0  COME_FROM           396  '396'

 L.  94       418  LOAD_CONST               None
              420  STORE_NAME               _geqv

 L.  95       422  LOAD_CONST               False
              424  STORE_NAME               _geqv_defined
            426_0  COME_FROM           416  '416'

 L.  97       426  LOAD_NAME                sys
              428  LOAD_ATTR                version_info
              430  LOAD_CONST               None
              432  LOAD_CONST               2
              434  BUILD_SLICE_2         2 
              436  BINARY_SUBSCR    
              438  LOAD_CONST               (3, 6)
              440  COMPARE_OP               >=
          442_444  POP_JUMP_IF_FALSE   462  'to 462'

 L.  98       446  LOAD_CONST               0
              448  LOAD_CONST               None
              450  IMPORT_NAME              _collections_abc
              452  STORE_NAME               _collections_abc

 L.  99       454  LOAD_NAME                _collections_abc
              456  LOAD_ATTR                _check_methods
              458  STORE_NAME               _check_methods_in_mro
              460  JUMP_FORWARD        470  'to 470'
            462_0  COME_FROM           442  '442'

 L. 101       462  LOAD_CODE                <code_object _check_methods_in_mro>
              464  LOAD_STR                 '_check_methods_in_mro'
              466  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              468  STORE_NAME               _check_methods_in_mro
            470_0  COME_FROM           460  '460'

 L. 115       470  BUILD_LIST_0          0 
              472  LOAD_CONST               ('ClassVar', 'Concatenate', 'Final', 'ParamSpec', 'Type', 'ContextManager', 'Counter', 'Deque', 'DefaultDict', 'OrderedDictTypedDict', 'SupportsIndex', 'final', 'IntVar', 'Literal', 'NewType', 'overload', 'Text', 'TypeAlias', 'TypeGuard', 'TYPE_CHECKING')
              474  CALL_FINALLY        477  'to 477'
              476  STORE_NAME               __all__

 L. 159       478  LOAD_NAME                PEP_560
          480_482  JUMP_IF_TRUE_OR_POP   486  'to 486'
              484  LOAD_NAME                SUBS_TREE
            486_0  COME_FROM           480  '480'
              486  STORE_NAME               HAVE_ANNOTATED

 L. 161       488  LOAD_NAME                PEP_560
          490_492  POP_JUMP_IF_FALSE   508  'to 508'

 L. 162       494  LOAD_NAME                __all__
              496  LOAD_METHOD              extend
              498  BUILD_LIST_0          0 
              500  LOAD_CONST               ('get_args', 'get_origin', 'get_type_hints')
              502  CALL_FINALLY        505  'to 505'
              504  CALL_METHOD_1         1  ''
              506  POP_TOP          
            508_0  COME_FROM           490  '490'

 L. 164       508  LOAD_NAME                HAVE_ANNOTATED
          510_512  POP_JUMP_IF_FALSE   524  'to 524'

 L. 165       514  LOAD_NAME                __all__
              516  LOAD_METHOD              append
              518  LOAD_STR                 'Annotated'
              520  CALL_METHOD_1         1  ''
              522  POP_TOP          
            524_0  COME_FROM           510  '510'

 L. 168       524  LOAD_NAME                sys
              526  LOAD_ATTR                version_info
              528  LOAD_CONST               None
              530  LOAD_CONST               3
              532  BUILD_SLICE_2         2 
              534  BINARY_SUBSCR    
              536  LOAD_CONST               (3, 5, 0)
              538  COMPARE_OP               !=
              540  STORE_NAME               HAVE_PROTOCOLS

 L. 170       542  LOAD_NAME                HAVE_PROTOCOLS
          544_546  POP_JUMP_IF_FALSE   562  'to 562'

 L. 171       548  LOAD_NAME                __all__
              550  LOAD_METHOD              extend
              552  BUILD_LIST_0          0 
              554  LOAD_CONST               ('Protocol', 'runtime', 'runtime_checkable')
              556  CALL_FINALLY        559  'to 559'
              558  CALL_METHOD_1         1  ''
              560  POP_TOP          
            562_0  COME_FROM           544  '544'

 L. 175       562  LOAD_NAME                hasattr
              564  LOAD_NAME                typing
              566  LOAD_STR                 'NoReturn'
              568  CALL_FUNCTION_2       2  ''
          570_572  POP_JUMP_IF_FALSE   582  'to 582'

 L. 176       574  LOAD_NAME                typing
              576  LOAD_ATTR                NoReturn
              578  STORE_NAME               NoReturn
              580  JUMP_FORWARD        670  'to 670'
            582_0  COME_FROM           570  '570'

 L. 177       582  LOAD_NAME                hasattr
              584  LOAD_NAME                typing
              586  LOAD_STR                 '_FinalTypingBase'
              588  CALL_FUNCTION_2       2  ''
          590_592  POP_JUMP_IF_FALSE   628  'to 628'

 L. 178       594  LOAD_BUILD_CLASS 
              596  LOAD_CODE                <code_object _NoReturn>
              598  LOAD_STR                 '_NoReturn'
              600  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              602  LOAD_STR                 '_NoReturn'
              604  LOAD_NAME                typing
              606  LOAD_ATTR                _FinalTypingBase
              608  LOAD_CONST               True
              610  LOAD_CONST               ('_root',)
              612  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              614  STORE_NAME               _NoReturn

 L. 198       616  LOAD_NAME                _NoReturn
              618  LOAD_CONST               True
              620  LOAD_CONST               ('_root',)
              622  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
              624  STORE_NAME               NoReturn
              626  JUMP_FORWARD        670  'to 670'
            628_0  COME_FROM           590  '590'

 L. 200       628  LOAD_BUILD_CLASS 
              630  LOAD_CODE                <code_object _NoReturnMeta>
              632  LOAD_STR                 '_NoReturnMeta'
              634  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              636  LOAD_STR                 '_NoReturnMeta'
              638  LOAD_NAME                typing
              640  LOAD_ATTR                TypingMeta
              642  CALL_FUNCTION_3       3  ''
              644  STORE_NAME               _NoReturnMeta

 L. 211       646  LOAD_BUILD_CLASS 
              648  LOAD_CODE                <code_object NoReturn>
              650  LOAD_STR                 'NoReturn'
              652  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              654  LOAD_STR                 'NoReturn'
              656  LOAD_NAME                typing
              658  LOAD_ATTR                Final
              660  LOAD_NAME                _NoReturnMeta
              662  LOAD_CONST               True
              664  LOAD_CONST               ('metaclass', '_root')
              666  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
              668  STORE_NAME               NoReturn
            670_0  COME_FROM           626  '626'
            670_1  COME_FROM           580  '580'

 L. 228       670  LOAD_NAME                typing
              672  LOAD_METHOD              TypeVar
              674  LOAD_STR                 'T'
              676  CALL_METHOD_1         1  ''
              678  STORE_NAME               T

 L. 229       680  LOAD_NAME                typing
              682  LOAD_METHOD              TypeVar
              684  LOAD_STR                 'KT'
              686  CALL_METHOD_1         1  ''
              688  STORE_NAME               KT

 L. 230       690  LOAD_NAME                typing
              692  LOAD_METHOD              TypeVar
              694  LOAD_STR                 'VT'
              696  CALL_METHOD_1         1  ''
              698  STORE_NAME               VT

 L. 231       700  LOAD_NAME                typing
              702  LOAD_ATTR                TypeVar
              704  LOAD_STR                 'T_co'
              706  LOAD_CONST               True
              708  LOAD_CONST               ('covariant',)
              710  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
              712  STORE_NAME               T_co

 L. 232       714  LOAD_NAME                typing
              716  LOAD_ATTR                TypeVar
              718  LOAD_STR                 'V_co'
              720  LOAD_CONST               True
              722  LOAD_CONST               ('covariant',)
              724  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
              726  STORE_NAME               V_co

 L. 233       728  LOAD_NAME                typing
              730  LOAD_ATTR                TypeVar
              732  LOAD_STR                 'VT_co'
              734  LOAD_CONST               True
              736  LOAD_CONST               ('covariant',)
              738  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
              740  STORE_NAME               VT_co

 L. 234       742  LOAD_NAME                typing
              744  LOAD_ATTR                TypeVar
              746  LOAD_STR                 'T_contra'
              748  LOAD_CONST               True
              750  LOAD_CONST               ('contravariant',)
              752  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
              754  STORE_NAME               T_contra

 L. 237       756  LOAD_NAME                hasattr
              758  LOAD_NAME                typing
              760  LOAD_STR                 'ClassVar'
              762  CALL_FUNCTION_2       2  ''
          764_766  POP_JUMP_IF_FALSE   776  'to 776'

 L. 238       768  LOAD_NAME                typing
              770  LOAD_ATTR                ClassVar
              772  STORE_NAME               ClassVar
              774  JUMP_FORWARD        864  'to 864'
            776_0  COME_FROM           764  '764'

 L. 239       776  LOAD_NAME                hasattr
              778  LOAD_NAME                typing
              780  LOAD_STR                 '_FinalTypingBase'
              782  CALL_FUNCTION_2       2  ''
          784_786  POP_JUMP_IF_FALSE   822  'to 822'

 L. 240       788  LOAD_BUILD_CLASS 
              790  LOAD_CODE                <code_object _ClassVar>
              792  LOAD_STR                 '_ClassVar'
              794  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              796  LOAD_STR                 '_ClassVar'
              798  LOAD_NAME                typing
              800  LOAD_ATTR                _FinalTypingBase
              802  LOAD_CONST               True
              804  LOAD_CONST               ('_root',)
              806  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              808  STORE_NAME               _ClassVar

 L. 293       810  LOAD_NAME                _ClassVar
              812  LOAD_CONST               True
              814  LOAD_CONST               ('_root',)
              816  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
              818  STORE_NAME               ClassVar
              820  JUMP_FORWARD        864  'to 864'
            822_0  COME_FROM           784  '784'

 L. 295       822  LOAD_BUILD_CLASS 
              824  LOAD_CODE                <code_object _ClassVarMeta>
              826  LOAD_STR                 '_ClassVarMeta'
              828  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              830  LOAD_STR                 '_ClassVarMeta'
              832  LOAD_NAME                typing
              834  LOAD_ATTR                TypingMeta
              836  CALL_FUNCTION_3       3  ''
              838  STORE_NAME               _ClassVarMeta

 L. 346       840  LOAD_BUILD_CLASS 
              842  LOAD_CODE                <code_object ClassVar>
              844  LOAD_STR                 'ClassVar'
              846  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              848  LOAD_STR                 'ClassVar'
              850  LOAD_NAME                typing
              852  LOAD_ATTR                Final
              854  LOAD_NAME                _ClassVarMeta
              856  LOAD_CONST               True
              858  LOAD_CONST               ('metaclass', '_root')
              860  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
              862  STORE_NAME               ClassVar
            864_0  COME_FROM           820  '820'
            864_1  COME_FROM           774  '774'

 L. 366       864  LOAD_NAME                hasattr
              866  LOAD_NAME                typing
              868  LOAD_STR                 'Final'
              870  CALL_FUNCTION_2       2  ''
          872_874  POP_JUMP_IF_FALSE   904  'to 904'
              876  LOAD_NAME                sys
              878  LOAD_ATTR                version_info
              880  LOAD_CONST               None
              882  LOAD_CONST               2
              884  BUILD_SLICE_2         2 
              886  BINARY_SUBSCR    
              888  LOAD_CONST               (3, 7)
              890  COMPARE_OP               >=
          892_894  POP_JUMP_IF_FALSE   904  'to 904'

 L. 367       896  LOAD_NAME                typing
              898  LOAD_ATTR                Final
              900  STORE_NAME               Final
              902  JUMP_FORWARD       1048  'to 1048'
            904_0  COME_FROM           892  '892'
            904_1  COME_FROM           872  '872'

 L. 368       904  LOAD_NAME                sys
              906  LOAD_ATTR                version_info
              908  LOAD_CONST               None
              910  LOAD_CONST               2
              912  BUILD_SLICE_2         2 
              914  BINARY_SUBSCR    
              916  LOAD_CONST               (3, 7)
              918  COMPARE_OP               >=
          920_922  POP_JUMP_IF_FALSE   960  'to 960'

 L. 369       924  LOAD_BUILD_CLASS 
              926  LOAD_CODE                <code_object _FinalForm>
              928  LOAD_STR                 '_FinalForm'
              930  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              932  LOAD_STR                 '_FinalForm'
              934  LOAD_NAME                typing
              936  LOAD_ATTR                _SpecialForm
              938  LOAD_CONST               True
              940  LOAD_CONST               ('_root',)
              942  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              944  STORE_NAME               _FinalForm

 L. 379       946  LOAD_NAME                _FinalForm
              948  LOAD_STR                 'Final'

 L. 380       950  LOAD_STR                 'A special typing construct to indicate that a name\n                       cannot be re-assigned or overridden in a subclass.\n                       For example:\n\n                           MAX_SIZE: Final = 9000\n                           MAX_SIZE += 1  # Error reported by type checker\n\n                           class Connection:\n                               TIMEOUT: Final[int] = 10\n                           class FastConnector(Connection):\n                               TIMEOUT = 1  # Error reported by type checker\n\n                       There is no runtime checking of these properties.'

 L. 379       952  LOAD_CONST               ('doc',)
              954  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
              956  STORE_NAME               Final
              958  JUMP_FORWARD       1048  'to 1048'
            960_0  COME_FROM           920  '920'

 L. 393       960  LOAD_NAME                hasattr
              962  LOAD_NAME                typing
              964  LOAD_STR                 '_FinalTypingBase'
              966  CALL_FUNCTION_2       2  ''
          968_970  POP_JUMP_IF_FALSE  1006  'to 1006'

 L. 394       972  LOAD_BUILD_CLASS 
              974  LOAD_CODE                <code_object _Final>
              976  LOAD_STR                 '_Final'
              978  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              980  LOAD_STR                 '_Final'
              982  LOAD_NAME                typing
              984  LOAD_ATTR                _FinalTypingBase
              986  LOAD_CONST               True
              988  LOAD_CONST               ('_root',)
              990  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              992  STORE_NAME               _Final

 L. 446       994  LOAD_NAME                _Final
              996  LOAD_CONST               True
              998  LOAD_CONST               ('_root',)
             1000  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
             1002  STORE_NAME               Final
             1004  JUMP_FORWARD       1048  'to 1048'
           1006_0  COME_FROM           968  '968'

 L. 448      1006  LOAD_BUILD_CLASS 
             1008  LOAD_CODE                <code_object _FinalMeta>
             1010  LOAD_STR                 '_FinalMeta'
             1012  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1014  LOAD_STR                 '_FinalMeta'
             1016  LOAD_NAME                typing
             1018  LOAD_ATTR                TypingMeta
             1020  CALL_FUNCTION_3       3  ''
             1022  STORE_NAME               _FinalMeta

 L. 499      1024  LOAD_BUILD_CLASS 
             1026  LOAD_CODE                <code_object Final>
             1028  LOAD_STR                 'Final'
             1030  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1032  LOAD_STR                 'Final'
             1034  LOAD_NAME                typing
             1036  LOAD_ATTR                Final
             1038  LOAD_NAME                _FinalMeta
             1040  LOAD_CONST               True
             1042  LOAD_CONST               ('metaclass', '_root')
             1044  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             1046  STORE_NAME               Final
           1048_0  COME_FROM          1004  '1004'
           1048_1  COME_FROM           958  '958'
           1048_2  COME_FROM           902  '902'

 L. 518      1048  LOAD_NAME                hasattr
             1050  LOAD_NAME                typing
             1052  LOAD_STR                 'final'
             1054  CALL_FUNCTION_2       2  ''
         1056_1058  POP_JUMP_IF_FALSE  1068  'to 1068'

 L. 519      1060  LOAD_NAME                typing
             1062  LOAD_ATTR                final
             1064  STORE_NAME               final
             1066  JUMP_FORWARD       1076  'to 1076'
           1068_0  COME_FROM          1056  '1056'

 L. 521      1068  LOAD_CODE                <code_object final>
             1070  LOAD_STR                 'final'
             1072  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1074  STORE_NAME               final
           1076_0  COME_FROM          1066  '1066'

 L. 544      1076  LOAD_CODE                <code_object IntVar>
             1078  LOAD_STR                 'IntVar'
             1080  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1082  STORE_NAME               IntVar

 L. 548      1084  LOAD_NAME                hasattr
             1086  LOAD_NAME                typing
             1088  LOAD_STR                 'Literal'
             1090  CALL_FUNCTION_2       2  ''
         1092_1094  POP_JUMP_IF_FALSE  1104  'to 1104'

 L. 549      1096  LOAD_NAME                typing
             1098  LOAD_ATTR                Literal
             1100  STORE_NAME               Literal
             1102  JUMP_FORWARD       1248  'to 1248'
           1104_0  COME_FROM          1092  '1092'

 L. 550      1104  LOAD_NAME                sys
             1106  LOAD_ATTR                version_info
             1108  LOAD_CONST               None
             1110  LOAD_CONST               2
             1112  BUILD_SLICE_2         2 
             1114  BINARY_SUBSCR    
             1116  LOAD_CONST               (3, 7)
             1118  COMPARE_OP               >=
         1120_1122  POP_JUMP_IF_FALSE  1160  'to 1160'

 L. 551      1124  LOAD_BUILD_CLASS 
             1126  LOAD_CODE                <code_object _LiteralForm>
             1128  LOAD_STR                 '_LiteralForm'
             1130  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1132  LOAD_STR                 '_LiteralForm'
             1134  LOAD_NAME                typing
             1136  LOAD_ATTR                _SpecialForm
             1138  LOAD_CONST               True
             1140  LOAD_CONST               ('_root',)
             1142  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             1144  STORE_NAME               _LiteralForm

 L. 559      1146  LOAD_NAME                _LiteralForm
             1148  LOAD_STR                 'Literal'

 L. 560      1150  LOAD_STR                 "A type that can be used to indicate to type checkers\n                           that the corresponding value has a value literally equivalent\n                           to the provided parameter. For example:\n\n                               var: Literal[4] = 4\n\n                           The type checker understands that 'var' is literally equal to\n                           the value 4 and no other value.\n\n                           Literal[...] cannot be subclassed. There is no runtime\n                           checking verifying that the parameter is actually a value\n                           instead of a type."

 L. 559      1152  LOAD_CONST               ('doc',)
             1154  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
             1156  STORE_NAME               Literal
             1158  JUMP_FORWARD       1248  'to 1248'
           1160_0  COME_FROM          1120  '1120'

 L. 572      1160  LOAD_NAME                hasattr
             1162  LOAD_NAME                typing
             1164  LOAD_STR                 '_FinalTypingBase'
             1166  CALL_FUNCTION_2       2  ''
         1168_1170  POP_JUMP_IF_FALSE  1206  'to 1206'

 L. 573      1172  LOAD_BUILD_CLASS 
             1174  LOAD_CODE                <code_object _Literal>
             1176  LOAD_STR                 '_Literal'
             1178  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1180  LOAD_STR                 '_Literal'
             1182  LOAD_NAME                typing
             1184  LOAD_ATTR                _FinalTypingBase
             1186  LOAD_CONST               True
             1188  LOAD_CONST               ('_root',)
             1190  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             1192  STORE_NAME               _Literal

 L. 620      1194  LOAD_NAME                _Literal
             1196  LOAD_CONST               True
             1198  LOAD_CONST               ('_root',)
             1200  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
             1202  STORE_NAME               Literal
             1204  JUMP_FORWARD       1248  'to 1248'
           1206_0  COME_FROM          1168  '1168'

 L. 622      1206  LOAD_BUILD_CLASS 
             1208  LOAD_CODE                <code_object _LiteralMeta>
             1210  LOAD_STR                 '_LiteralMeta'
             1212  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1214  LOAD_STR                 '_LiteralMeta'
             1216  LOAD_NAME                typing
             1218  LOAD_ATTR                TypingMeta
             1220  CALL_FUNCTION_3       3  ''
             1222  STORE_NAME               _LiteralMeta

 L. 667      1224  LOAD_BUILD_CLASS 
             1226  LOAD_CODE                <code_object Literal>
             1228  LOAD_STR                 'Literal'
             1230  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1232  LOAD_STR                 'Literal'
             1234  LOAD_NAME                typing
             1236  LOAD_ATTR                Final
             1238  LOAD_NAME                _LiteralMeta
             1240  LOAD_CONST               True
             1242  LOAD_CONST               ('metaclass', '_root')
             1244  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             1246  STORE_NAME               Literal
           1248_0  COME_FROM          1204  '1204'
           1248_1  COME_FROM          1158  '1158'
           1248_2  COME_FROM          1102  '1102'

 L. 684      1248  LOAD_CODE                <code_object _overload_dummy>
             1250  LOAD_STR                 '_overload_dummy'
             1252  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1254  STORE_NAME               _overload_dummy

 L. 693      1256  LOAD_CODE                <code_object overload>
             1258  LOAD_STR                 'overload'
             1260  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1262  STORE_NAME               overload

 L. 723      1264  LOAD_NAME                hasattr
             1266  LOAD_NAME                typing
             1268  LOAD_STR                 'Type'
             1270  CALL_FUNCTION_2       2  ''
         1272_1274  POP_JUMP_IF_FALSE  1284  'to 1284'

 L. 724      1276  LOAD_NAME                typing
             1278  LOAD_ATTR                Type
             1280  STORE_NAME               Type
             1282  JUMP_FORWARD       1326  'to 1326'
           1284_0  COME_FROM          1272  '1272'

 L. 727      1284  LOAD_NAME                typing
             1286  LOAD_ATTR                TypeVar
             1288  LOAD_STR                 'CT_co'
             1290  LOAD_CONST               True
             1292  LOAD_NAME                type
             1294  LOAD_CONST               ('covariant', 'bound')
             1296  CALL_FUNCTION_KW_3     3  '3 total positional and keyword args'
             1298  STORE_NAME               CT_co

 L. 729      1300  LOAD_BUILD_CLASS 
             1302  LOAD_CODE                <code_object Type>
             1304  LOAD_STR                 'Type'
             1306  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1308  LOAD_STR                 'Type'
             1310  LOAD_NAME                typing
             1312  LOAD_ATTR                Generic
             1314  LOAD_NAME                CT_co
             1316  BINARY_SUBSCR    
             1318  LOAD_NAME                type
             1320  LOAD_CONST               ('extra',)
             1322  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             1324  STORE_NAME               Type
           1326_0  COME_FROM          1282  '1282'

 L. 758      1326  LOAD_CODE                <code_object _define_guard>
             1328  LOAD_STR                 '_define_guard'
             1330  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1332  STORE_NAME               _define_guard

 L. 777      1334  LOAD_BUILD_CLASS 
             1336  LOAD_CODE                <code_object _ExtensionsGenericMeta>
             1338  LOAD_STR                 '_ExtensionsGenericMeta'
             1340  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1342  LOAD_STR                 '_ExtensionsGenericMeta'
             1344  LOAD_NAME                GenericMeta
             1346  CALL_FUNCTION_3       3  ''
             1348  STORE_NAME               _ExtensionsGenericMeta

 L. 805      1350  LOAD_NAME                _define_guard
             1352  LOAD_STR                 'Awaitable'
             1354  CALL_FUNCTION_1       1  ''
         1356_1358  POP_JUMP_IF_FALSE  1390  'to 1390'

 L. 806      1360  LOAD_BUILD_CLASS 
             1362  LOAD_CODE                <code_object Awaitable>
             1364  LOAD_STR                 'Awaitable'
             1366  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1368  LOAD_STR                 'Awaitable'
             1370  LOAD_NAME                typing
             1372  LOAD_ATTR                Generic
             1374  LOAD_NAME                T_co
             1376  BINARY_SUBSCR    
             1378  LOAD_NAME                _ExtensionsGenericMeta

 L. 807      1380  LOAD_NAME                collections_abc
             1382  LOAD_ATTR                Awaitable

 L. 806      1384  LOAD_CONST               ('metaclass', 'extra')
             1386  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             1388  STORE_NAME               Awaitable
           1390_0  COME_FROM          1356  '1356'

 L. 811      1390  LOAD_NAME                _define_guard
             1392  LOAD_STR                 'Coroutine'
             1394  CALL_FUNCTION_1       1  ''
         1396_1398  POP_JUMP_IF_FALSE  1442  'to 1442'

 L. 812      1400  LOAD_BUILD_CLASS 
             1402  LOAD_CODE                <code_object Coroutine>
             1404  LOAD_STR                 'Coroutine'
             1406  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1408  LOAD_STR                 'Coroutine'
             1410  LOAD_NAME                Awaitable
             1412  LOAD_NAME                V_co
             1414  BINARY_SUBSCR    
             1416  LOAD_NAME                typing
             1418  LOAD_ATTR                Generic
             1420  LOAD_NAME                T_co
             1422  LOAD_NAME                T_contra
             1424  LOAD_NAME                V_co
             1426  BUILD_TUPLE_3         3 
             1428  BINARY_SUBSCR    

 L. 813      1430  LOAD_NAME                _ExtensionsGenericMeta

 L. 814      1432  LOAD_NAME                collections_abc
             1434  LOAD_ATTR                Coroutine

 L. 812      1436  LOAD_CONST               ('metaclass', 'extra')
             1438  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             1440  STORE_NAME               Coroutine
           1442_0  COME_FROM          1396  '1396'

 L. 818      1442  LOAD_NAME                _define_guard
             1444  LOAD_STR                 'AsyncIterable'
             1446  CALL_FUNCTION_1       1  ''
         1448_1450  POP_JUMP_IF_FALSE  1482  'to 1482'

 L. 819      1452  LOAD_BUILD_CLASS 
             1454  LOAD_CODE                <code_object AsyncIterable>
             1456  LOAD_STR                 'AsyncIterable'
             1458  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1460  LOAD_STR                 'AsyncIterable'
             1462  LOAD_NAME                typing
             1464  LOAD_ATTR                Generic
             1466  LOAD_NAME                T_co
             1468  BINARY_SUBSCR    

 L. 820      1470  LOAD_NAME                _ExtensionsGenericMeta

 L. 821      1472  LOAD_NAME                collections_abc
             1474  LOAD_ATTR                AsyncIterable

 L. 819      1476  LOAD_CONST               ('metaclass', 'extra')
             1478  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             1480  STORE_NAME               AsyncIterable
           1482_0  COME_FROM          1448  '1448'

 L. 825      1482  LOAD_NAME                _define_guard
             1484  LOAD_STR                 'AsyncIterator'
             1486  CALL_FUNCTION_1       1  ''
         1488_1490  POP_JUMP_IF_FALSE  1520  'to 1520'

 L. 826      1492  LOAD_BUILD_CLASS 
             1494  LOAD_CODE                <code_object AsyncIterator>
             1496  LOAD_STR                 'AsyncIterator'
             1498  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1500  LOAD_STR                 'AsyncIterator'
             1502  LOAD_NAME                AsyncIterable
             1504  LOAD_NAME                T_co
             1506  BINARY_SUBSCR    

 L. 827      1508  LOAD_NAME                _ExtensionsGenericMeta

 L. 828      1510  LOAD_NAME                collections_abc
             1512  LOAD_ATTR                AsyncIterator

 L. 826      1514  LOAD_CONST               ('metaclass', 'extra')
             1516  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             1518  STORE_NAME               AsyncIterator
           1520_0  COME_FROM          1488  '1488'

 L. 832      1520  LOAD_NAME                hasattr
             1522  LOAD_NAME                typing
             1524  LOAD_STR                 'Deque'
             1526  CALL_FUNCTION_2       2  ''
         1528_1530  POP_JUMP_IF_FALSE  1540  'to 1540'

 L. 833      1532  LOAD_NAME                typing
             1534  LOAD_ATTR                Deque
             1536  STORE_NAME               Deque
             1538  JUMP_FORWARD       1616  'to 1616'
           1540_0  COME_FROM          1528  '1528'

 L. 834      1540  LOAD_NAME                _geqv_defined
         1542_1544  POP_JUMP_IF_FALSE  1582  'to 1582'

 L. 835      1546  LOAD_BUILD_CLASS 
             1548  LOAD_CODE                <code_object Deque>
             1550  LOAD_STR                 'Deque'
             1552  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1554  LOAD_STR                 'Deque'
             1556  LOAD_NAME                collections
             1558  LOAD_ATTR                deque
             1560  LOAD_NAME                typing
             1562  LOAD_ATTR                MutableSequence
             1564  LOAD_NAME                T
             1566  BINARY_SUBSCR    

 L. 836      1568  LOAD_NAME                _ExtensionsGenericMeta

 L. 837      1570  LOAD_NAME                collections
             1572  LOAD_ATTR                deque

 L. 835      1574  LOAD_CONST               ('metaclass', 'extra')
             1576  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             1578  STORE_NAME               Deque
             1580  JUMP_FORWARD       1616  'to 1616'
           1582_0  COME_FROM          1542  '1542'

 L. 845      1582  LOAD_BUILD_CLASS 
             1584  LOAD_CODE                <code_object Deque>
             1586  LOAD_STR                 'Deque'
             1588  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1590  LOAD_STR                 'Deque'
             1592  LOAD_NAME                collections
             1594  LOAD_ATTR                deque
             1596  LOAD_NAME                typing
             1598  LOAD_ATTR                MutableSequence
             1600  LOAD_NAME                T
             1602  BINARY_SUBSCR    

 L. 846      1604  LOAD_NAME                _ExtensionsGenericMeta

 L. 847      1606  LOAD_NAME                collections
             1608  LOAD_ATTR                deque

 L. 845      1610  LOAD_CONST               ('metaclass', 'extra')
             1612  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             1614  STORE_NAME               Deque
           1616_0  COME_FROM          1580  '1580'
           1616_1  COME_FROM          1538  '1538'

 L. 856      1616  LOAD_NAME                hasattr
             1618  LOAD_NAME                typing
             1620  LOAD_STR                 'ContextManager'
             1622  CALL_FUNCTION_2       2  ''
         1624_1626  POP_JUMP_IF_FALSE  1636  'to 1636'

 L. 857      1628  LOAD_NAME                typing
             1630  LOAD_ATTR                ContextManager
             1632  STORE_NAME               ContextManager
             1634  JUMP_FORWARD       1702  'to 1702'
           1636_0  COME_FROM          1624  '1624'

 L. 858      1636  LOAD_NAME                hasattr
             1638  LOAD_NAME                contextlib
             1640  LOAD_STR                 'AbstractContextManager'
             1642  CALL_FUNCTION_2       2  ''
         1644_1646  POP_JUMP_IF_FALSE  1680  'to 1680'

 L. 859      1648  LOAD_BUILD_CLASS 
             1650  LOAD_CODE                <code_object ContextManager>
             1652  LOAD_STR                 'ContextManager'
             1654  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1656  LOAD_STR                 'ContextManager'
             1658  LOAD_NAME                typing
             1660  LOAD_ATTR                Generic
             1662  LOAD_NAME                T_co
             1664  BINARY_SUBSCR    

 L. 860      1666  LOAD_NAME                _ExtensionsGenericMeta

 L. 861      1668  LOAD_NAME                contextlib
             1670  LOAD_ATTR                AbstractContextManager

 L. 859      1672  LOAD_CONST               ('metaclass', 'extra')
             1674  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             1676  STORE_NAME               ContextManager
             1678  JUMP_FORWARD       1702  'to 1702'
           1680_0  COME_FROM          1644  '1644'

 L. 864      1680  LOAD_BUILD_CLASS 
             1682  LOAD_CODE                <code_object ContextManager>
             1684  LOAD_STR                 'ContextManager'
             1686  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1688  LOAD_STR                 'ContextManager'
             1690  LOAD_NAME                typing
             1692  LOAD_ATTR                Generic
             1694  LOAD_NAME                T_co
             1696  BINARY_SUBSCR    
             1698  CALL_FUNCTION_3       3  ''
             1700  STORE_NAME               ContextManager
           1702_0  COME_FROM          1678  '1678'
           1702_1  COME_FROM          1634  '1634'

 L. 888      1702  LOAD_NAME                hasattr
             1704  LOAD_NAME                typing
             1706  LOAD_STR                 'AsyncContextManager'
             1708  CALL_FUNCTION_2       2  ''
         1710_1712  POP_JUMP_IF_FALSE  1732  'to 1732'

 L. 889      1714  LOAD_NAME                typing
             1716  LOAD_ATTR                AsyncContextManager
             1718  STORE_NAME               AsyncContextManager

 L. 890      1720  LOAD_NAME                __all__
             1722  LOAD_METHOD              append
             1724  LOAD_STR                 'AsyncContextManager'
             1726  CALL_METHOD_1         1  ''
             1728  POP_TOP          
             1730  JUMP_FORWARD       1814  'to 1814'
           1732_0  COME_FROM          1710  '1710'

 L. 891      1732  LOAD_NAME                hasattr
             1734  LOAD_NAME                contextlib
             1736  LOAD_STR                 'AbstractAsyncContextManager'
             1738  CALL_FUNCTION_2       2  ''
         1740_1742  POP_JUMP_IF_FALSE  1786  'to 1786'

 L. 892      1744  LOAD_BUILD_CLASS 
             1746  LOAD_CODE                <code_object AsyncContextManager>
             1748  LOAD_STR                 'AsyncContextManager'
             1750  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1752  LOAD_STR                 'AsyncContextManager'
             1754  LOAD_NAME                typing
             1756  LOAD_ATTR                Generic
             1758  LOAD_NAME                T_co
             1760  BINARY_SUBSCR    

 L. 893      1762  LOAD_NAME                _ExtensionsGenericMeta

 L. 894      1764  LOAD_NAME                contextlib
             1766  LOAD_ATTR                AbstractAsyncContextManager

 L. 892      1768  LOAD_CONST               ('metaclass', 'extra')
             1770  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             1772  STORE_NAME               AsyncContextManager

 L. 897      1774  LOAD_NAME                __all__
             1776  LOAD_METHOD              append
             1778  LOAD_STR                 'AsyncContextManager'
             1780  CALL_METHOD_1         1  ''
             1782  POP_TOP          
             1784  JUMP_FORWARD       1814  'to 1814'
           1786_0  COME_FROM          1740  '1740'

 L. 898      1786  LOAD_NAME                sys
             1788  LOAD_ATTR                version_info
             1790  LOAD_CONST               None
             1792  LOAD_CONST               2
             1794  BUILD_SLICE_2         2 
             1796  BINARY_SUBSCR    
             1798  LOAD_CONST               (3, 5)
             1800  COMPARE_OP               >=
         1802_1804  POP_JUMP_IF_FALSE  1814  'to 1814'

 L. 899      1806  LOAD_NAME                exec
             1808  LOAD_STR                 '\nclass AsyncContextManager(typing.Generic[T_co]):\n    __slots__ = ()\n\n    async def __aenter__(self):\n        return self\n\n    @abc.abstractmethod\n    async def __aexit__(self, exc_type, exc_value, traceback):\n        return None\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is AsyncContextManager:\n            return _check_methods_in_mro(C, "__aenter__", "__aexit__")\n        return NotImplemented\n\n__all__.append(\'AsyncContextManager\')\n'
             1810  CALL_FUNCTION_1       1  ''
             1812  POP_TOP          
           1814_0  COME_FROM          1802  '1802'
           1814_1  COME_FROM          1784  '1784'
           1814_2  COME_FROM          1730  '1730'

 L. 920      1814  LOAD_NAME                hasattr
             1816  LOAD_NAME                typing
             1818  LOAD_STR                 'DefaultDict'
             1820  CALL_FUNCTION_2       2  ''
         1822_1824  POP_JUMP_IF_FALSE  1834  'to 1834'

 L. 921      1826  LOAD_NAME                typing
             1828  LOAD_ATTR                DefaultDict
             1830  STORE_NAME               DefaultDict
             1832  JUMP_FORWARD       1918  'to 1918'
           1834_0  COME_FROM          1822  '1822'

 L. 922      1834  LOAD_NAME                _geqv_defined
         1836_1838  POP_JUMP_IF_FALSE  1880  'to 1880'

 L. 923      1840  LOAD_BUILD_CLASS 
             1842  LOAD_CODE                <code_object DefaultDict>
             1844  LOAD_STR                 'DefaultDict'
             1846  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1848  LOAD_STR                 'DefaultDict'
             1850  LOAD_NAME                collections
             1852  LOAD_ATTR                defaultdict
             1854  LOAD_NAME                typing
             1856  LOAD_ATTR                MutableMapping
             1858  LOAD_NAME                KT
             1860  LOAD_NAME                VT
             1862  BUILD_TUPLE_2         2 
             1864  BINARY_SUBSCR    

 L. 924      1866  LOAD_NAME                _ExtensionsGenericMeta

 L. 925      1868  LOAD_NAME                collections
             1870  LOAD_ATTR                defaultdict

 L. 923      1872  LOAD_CONST               ('metaclass', 'extra')
             1874  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             1876  STORE_NAME               DefaultDict
             1878  JUMP_FORWARD       1918  'to 1918'
           1880_0  COME_FROM          1836  '1836'

 L. 934      1880  LOAD_BUILD_CLASS 
             1882  LOAD_CODE                <code_object DefaultDict>
             1884  LOAD_STR                 'DefaultDict'
             1886  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             1888  LOAD_STR                 'DefaultDict'
             1890  LOAD_NAME                collections
             1892  LOAD_ATTR                defaultdict
             1894  LOAD_NAME                typing
             1896  LOAD_ATTR                MutableMapping
             1898  LOAD_NAME                KT
             1900  LOAD_NAME                VT
             1902  BUILD_TUPLE_2         2 
             1904  BINARY_SUBSCR    

 L. 935      1906  LOAD_NAME                _ExtensionsGenericMeta

 L. 936      1908  LOAD_NAME                collections
             1910  LOAD_ATTR                defaultdict

 L. 934      1912  LOAD_CONST               ('metaclass', 'extra')
             1914  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             1916  STORE_NAME               DefaultDict
           1918_0  COME_FROM          1878  '1878'
           1918_1  COME_FROM          1832  '1832'

 L. 946      1918  LOAD_NAME                hasattr
             1920  LOAD_NAME                typing
             1922  LOAD_STR                 'OrderedDict'
             1924  CALL_FUNCTION_2       2  ''
         1926_1928  POP_JUMP_IF_FALSE  1938  'to 1938'

 L. 947      1930  LOAD_NAME                typing
             1932  LOAD_ATTR                OrderedDict
             1934  STORE_NAME               OrderedDict
             1936  JUMP_FORWARD       2080  'to 2080'
           1938_0  COME_FROM          1926  '1926'

 L. 948      1938  LOAD_CONST               (3, 7, 0)
             1940  LOAD_NAME                sys
             1942  LOAD_ATTR                version_info
             1944  LOAD_CONST               None
             1946  LOAD_CONST               3
             1948  BUILD_SLICE_2         2 
             1950  BINARY_SUBSCR    
             1952  DUP_TOP          
             1954  ROT_THREE        
             1956  COMPARE_OP               <=
         1958_1960  POP_JUMP_IF_FALSE  1972  'to 1972'
             1962  LOAD_CONST               (3, 7, 2)
             1964  COMPARE_OP               <
         1966_1968  POP_JUMP_IF_FALSE  1996  'to 1996'
             1970  JUMP_FORWARD       1976  'to 1976'
           1972_0  COME_FROM          1958  '1958'
             1972  POP_TOP          
             1974  JUMP_FORWARD       1996  'to 1996'
           1976_0  COME_FROM          1970  '1970'

 L. 949      1976  LOAD_NAME                typing
             1978  LOAD_METHOD              _alias
             1980  LOAD_NAME                collections
             1982  LOAD_ATTR                OrderedDict
             1984  LOAD_NAME                KT
             1986  LOAD_NAME                VT
             1988  BUILD_TUPLE_2         2 
             1990  CALL_METHOD_2         2  ''
             1992  STORE_NAME               OrderedDict
             1994  JUMP_FORWARD       2080  'to 2080'
           1996_0  COME_FROM          1974  '1974'
           1996_1  COME_FROM          1966  '1966'

 L. 950      1996  LOAD_NAME                _geqv_defined
         1998_2000  POP_JUMP_IF_FALSE  2042  'to 2042'

 L. 951      2002  LOAD_BUILD_CLASS 
             2004  LOAD_CODE                <code_object OrderedDict>
             2006  LOAD_STR                 'OrderedDict'
             2008  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2010  LOAD_STR                 'OrderedDict'
             2012  LOAD_NAME                collections
             2014  LOAD_ATTR                OrderedDict
             2016  LOAD_NAME                typing
             2018  LOAD_ATTR                MutableMapping
             2020  LOAD_NAME                KT
             2022  LOAD_NAME                VT
             2024  BUILD_TUPLE_2         2 
             2026  BINARY_SUBSCR    

 L. 952      2028  LOAD_NAME                _ExtensionsGenericMeta

 L. 953      2030  LOAD_NAME                collections
             2032  LOAD_ATTR                OrderedDict

 L. 951      2034  LOAD_CONST               ('metaclass', 'extra')
             2036  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2038  STORE_NAME               OrderedDict
             2040  JUMP_FORWARD       2080  'to 2080'
           2042_0  COME_FROM          1998  '1998'

 L. 962      2042  LOAD_BUILD_CLASS 
             2044  LOAD_CODE                <code_object OrderedDict>
             2046  LOAD_STR                 'OrderedDict'
             2048  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2050  LOAD_STR                 'OrderedDict'
             2052  LOAD_NAME                collections
             2054  LOAD_ATTR                OrderedDict
             2056  LOAD_NAME                typing
             2058  LOAD_ATTR                MutableMapping
             2060  LOAD_NAME                KT
             2062  LOAD_NAME                VT
             2064  BUILD_TUPLE_2         2 
             2066  BINARY_SUBSCR    

 L. 963      2068  LOAD_NAME                _ExtensionsGenericMeta

 L. 964      2070  LOAD_NAME                collections
             2072  LOAD_ATTR                OrderedDict

 L. 962      2074  LOAD_CONST               ('metaclass', 'extra')
             2076  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2078  STORE_NAME               OrderedDict
           2080_0  COME_FROM          2040  '2040'
           2080_1  COME_FROM          1994  '1994'
           2080_2  COME_FROM          1936  '1936'

 L. 974      2080  LOAD_NAME                hasattr
             2082  LOAD_NAME                typing
             2084  LOAD_STR                 'Counter'
             2086  CALL_FUNCTION_2       2  ''
         2088_2090  POP_JUMP_IF_FALSE  2100  'to 2100'

 L. 975      2092  LOAD_NAME                typing
             2094  LOAD_ATTR                Counter
             2096  STORE_NAME               Counter
             2098  JUMP_FORWARD       2300  'to 2300'
           2100_0  COME_FROM          2088  '2088'

 L. 976      2100  LOAD_CONST               (3, 5, 0)
             2102  LOAD_NAME                sys
             2104  LOAD_ATTR                version_info
             2106  LOAD_CONST               None
             2108  LOAD_CONST               3
             2110  BUILD_SLICE_2         2 
             2112  BINARY_SUBSCR    
             2114  DUP_TOP          
             2116  ROT_THREE        
             2118  COMPARE_OP               <=
         2120_2122  POP_JUMP_IF_FALSE  2134  'to 2134'
             2124  LOAD_CONST               (3, 5, 1)
             2126  COMPARE_OP               <=
         2128_2130  POP_JUMP_IF_FALSE  2216  'to 2216'
             2132  JUMP_FORWARD       2138  'to 2138'
           2134_0  COME_FROM          2120  '2120'
             2134  POP_TOP          
             2136  JUMP_FORWARD       2216  'to 2216'
           2138_0  COME_FROM          2132  '2132'

 L. 977      2138  LOAD_NAME                _geqv_defined
         2140_2142  POP_JUMP_IF_TRUE   2148  'to 2148'
             2144  <74>             
             2146  RAISE_VARARGS_1       1  'exception instance'
           2148_0  COME_FROM          2140  '2140'

 L. 978      2148  LOAD_NAME                typing
             2150  LOAD_METHOD              TypeVar
             2152  LOAD_STR                 '_TInt'
             2154  CALL_METHOD_1         1  ''
             2156  STORE_NAME               _TInt

 L. 980      2158  LOAD_BUILD_CLASS 
             2160  LOAD_CODE                <code_object _CounterMeta>
             2162  LOAD_STR                 '_CounterMeta'
             2164  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2166  LOAD_STR                 '_CounterMeta'
             2168  LOAD_NAME                typing
             2170  LOAD_ATTR                GenericMeta
             2172  CALL_FUNCTION_3       3  ''
             2174  STORE_NAME               _CounterMeta

 L. 985      2176  LOAD_BUILD_CLASS 
             2178  LOAD_CODE                <code_object Counter>
             2180  LOAD_STR                 'Counter'
             2182  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2184  LOAD_STR                 'Counter'
             2186  LOAD_NAME                collections
             2188  LOAD_ATTR                Counter

 L. 986      2190  LOAD_NAME                typing
             2192  LOAD_ATTR                Dict
             2194  LOAD_NAME                T
             2196  LOAD_NAME                int
             2198  BUILD_TUPLE_2         2 
             2200  BINARY_SUBSCR    

 L. 987      2202  LOAD_NAME                _CounterMeta

 L. 988      2204  LOAD_NAME                collections
             2206  LOAD_ATTR                Counter

 L. 985      2208  LOAD_CONST               ('metaclass', 'extra')
             2210  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2212  STORE_NAME               Counter
             2214  JUMP_FORWARD       2300  'to 2300'
           2216_0  COME_FROM          2136  '2136'
           2216_1  COME_FROM          2128  '2128'

 L. 997      2216  LOAD_NAME                _geqv_defined
         2218_2220  POP_JUMP_IF_FALSE  2262  'to 2262'

 L. 998      2222  LOAD_BUILD_CLASS 
             2224  LOAD_CODE                <code_object Counter>
             2226  LOAD_STR                 'Counter'
             2228  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2230  LOAD_STR                 'Counter'
             2232  LOAD_NAME                collections
             2234  LOAD_ATTR                Counter

 L. 999      2236  LOAD_NAME                typing
             2238  LOAD_ATTR                Dict
             2240  LOAD_NAME                T
             2242  LOAD_NAME                int
             2244  BUILD_TUPLE_2         2 
             2246  BINARY_SUBSCR    

 L.1000      2248  LOAD_NAME                _ExtensionsGenericMeta
             2250  LOAD_NAME                collections
             2252  LOAD_ATTR                Counter

 L. 998      2254  LOAD_CONST               ('metaclass', 'extra')
             2256  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2258  STORE_NAME               Counter
             2260  JUMP_FORWARD       2300  'to 2300'
           2262_0  COME_FROM          2218  '2218'

 L.1010      2262  LOAD_BUILD_CLASS 
             2264  LOAD_CODE                <code_object Counter>
             2266  LOAD_STR                 'Counter'
             2268  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2270  LOAD_STR                 'Counter'
             2272  LOAD_NAME                collections
             2274  LOAD_ATTR                Counter

 L.1011      2276  LOAD_NAME                typing
             2278  LOAD_ATTR                Dict
             2280  LOAD_NAME                T
             2282  LOAD_NAME                int
             2284  BUILD_TUPLE_2         2 
             2286  BINARY_SUBSCR    

 L.1012      2288  LOAD_NAME                _ExtensionsGenericMeta
             2290  LOAD_NAME                collections
             2292  LOAD_ATTR                Counter

 L.1010      2294  LOAD_CONST               ('metaclass', 'extra')
             2296  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2298  STORE_NAME               Counter
           2300_0  COME_FROM          2260  '2260'
           2300_1  COME_FROM          2214  '2214'
           2300_2  COME_FROM          2098  '2098'

 L.1022      2300  LOAD_NAME                hasattr
             2302  LOAD_NAME                typing
             2304  LOAD_STR                 'ChainMap'
             2306  CALL_FUNCTION_2       2  ''
         2308_2310  POP_JUMP_IF_FALSE  2330  'to 2330'

 L.1023      2312  LOAD_NAME                typing
             2314  LOAD_ATTR                ChainMap
             2316  STORE_NAME               ChainMap

 L.1024      2318  LOAD_NAME                __all__
             2320  LOAD_METHOD              append
             2322  LOAD_STR                 'ChainMap'
             2324  CALL_METHOD_1         1  ''
             2326  POP_TOP          
             2328  JUMP_FORWARD       2436  'to 2436'
           2330_0  COME_FROM          2308  '2308'

 L.1025      2330  LOAD_NAME                hasattr
             2332  LOAD_NAME                collections
             2334  LOAD_STR                 'ChainMap'
             2336  CALL_FUNCTION_2       2  ''
         2338_2340  POP_JUMP_IF_FALSE  2436  'to 2436'

 L.1027      2342  LOAD_NAME                _geqv_defined
         2344_2346  POP_JUMP_IF_FALSE  2388  'to 2388'

 L.1028      2348  LOAD_BUILD_CLASS 
             2350  LOAD_CODE                <code_object ChainMap>
             2352  LOAD_STR                 'ChainMap'
             2354  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2356  LOAD_STR                 'ChainMap'
             2358  LOAD_NAME                collections
             2360  LOAD_ATTR                ChainMap
             2362  LOAD_NAME                typing
             2364  LOAD_ATTR                MutableMapping
             2366  LOAD_NAME                KT
             2368  LOAD_NAME                VT
             2370  BUILD_TUPLE_2         2 
             2372  BINARY_SUBSCR    

 L.1029      2374  LOAD_NAME                _ExtensionsGenericMeta

 L.1030      2376  LOAD_NAME                collections
             2378  LOAD_ATTR                ChainMap

 L.1028      2380  LOAD_CONST               ('metaclass', 'extra')
             2382  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2384  STORE_NAME               ChainMap
             2386  JUMP_FORWARD       2426  'to 2426'
           2388_0  COME_FROM          2344  '2344'

 L.1039      2388  LOAD_BUILD_CLASS 
             2390  LOAD_CODE                <code_object ChainMap>
             2392  LOAD_STR                 'ChainMap'
             2394  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2396  LOAD_STR                 'ChainMap'
             2398  LOAD_NAME                collections
             2400  LOAD_ATTR                ChainMap
             2402  LOAD_NAME                typing
             2404  LOAD_ATTR                MutableMapping
             2406  LOAD_NAME                KT
             2408  LOAD_NAME                VT
             2410  BUILD_TUPLE_2         2 
             2412  BINARY_SUBSCR    

 L.1040      2414  LOAD_NAME                _ExtensionsGenericMeta

 L.1041      2416  LOAD_NAME                collections
             2418  LOAD_ATTR                ChainMap

 L.1039      2420  LOAD_CONST               ('metaclass', 'extra')
             2422  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2424  STORE_NAME               ChainMap
           2426_0  COME_FROM          2386  '2386'

 L.1050      2426  LOAD_NAME                __all__
             2428  LOAD_METHOD              append
             2430  LOAD_STR                 'ChainMap'
             2432  CALL_METHOD_1         1  ''
             2434  POP_TOP          
           2436_0  COME_FROM          2338  '2338'
           2436_1  COME_FROM          2328  '2328'

 L.1053      2436  LOAD_NAME                _define_guard
             2438  LOAD_STR                 'AsyncGenerator'
             2440  CALL_FUNCTION_1       1  ''
         2442_2444  POP_JUMP_IF_FALSE  2486  'to 2486'

 L.1054      2446  LOAD_BUILD_CLASS 
             2448  LOAD_CODE                <code_object AsyncGenerator>
             2450  LOAD_STR                 'AsyncGenerator'
             2452  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2454  LOAD_STR                 'AsyncGenerator'
             2456  LOAD_NAME                AsyncIterator
             2458  LOAD_NAME                T_co
             2460  BINARY_SUBSCR    
             2462  LOAD_NAME                typing
             2464  LOAD_ATTR                Generic
             2466  LOAD_NAME                T_co
             2468  LOAD_NAME                T_contra
             2470  BUILD_TUPLE_2         2 
             2472  BINARY_SUBSCR    

 L.1055      2474  LOAD_NAME                _ExtensionsGenericMeta

 L.1056      2476  LOAD_NAME                collections_abc
             2478  LOAD_ATTR                AsyncGenerator

 L.1054      2480  LOAD_CONST               ('metaclass', 'extra')
             2482  CALL_FUNCTION_KW_6     6  '6 total positional and keyword args'
             2484  STORE_NAME               AsyncGenerator
           2486_0  COME_FROM          2442  '2442'

 L.1060      2486  LOAD_NAME                hasattr
             2488  LOAD_NAME                typing
             2490  LOAD_STR                 'NewType'
             2492  CALL_FUNCTION_2       2  ''
         2494_2496  POP_JUMP_IF_FALSE  2506  'to 2506'

 L.1061      2498  LOAD_NAME                typing
             2500  LOAD_ATTR                NewType
             2502  STORE_NAME               NewType
             2504  JUMP_FORWARD       2514  'to 2514'
           2506_0  COME_FROM          2494  '2494'

 L.1063      2506  LOAD_CODE                <code_object NewType>
             2508  LOAD_STR                 'NewType'
             2510  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2512  STORE_NAME               NewType
           2514_0  COME_FROM          2504  '2504'

 L.1090      2514  LOAD_NAME                hasattr
             2516  LOAD_NAME                typing
             2518  LOAD_STR                 'Text'
             2520  CALL_FUNCTION_2       2  ''
         2522_2524  POP_JUMP_IF_FALSE  2534  'to 2534'

 L.1091      2526  LOAD_NAME                typing
             2528  LOAD_ATTR                Text
             2530  STORE_NAME               Text
             2532  JUMP_FORWARD       2538  'to 2538'
           2534_0  COME_FROM          2522  '2522'

 L.1093      2534  LOAD_NAME                str
             2536  STORE_NAME               Text
           2538_0  COME_FROM          2532  '2532'

 L.1096      2538  LOAD_NAME                hasattr
             2540  LOAD_NAME                typing
             2542  LOAD_STR                 'TYPE_CHECKING'
             2544  CALL_FUNCTION_2       2  ''
         2546_2548  POP_JUMP_IF_FALSE  2558  'to 2558'

 L.1097      2550  LOAD_NAME                typing
             2552  LOAD_ATTR                TYPE_CHECKING
             2554  STORE_NAME               TYPE_CHECKING
             2556  JUMP_FORWARD       2562  'to 2562'
           2558_0  COME_FROM          2546  '2546'

 L.1100      2558  LOAD_CONST               False
             2560  STORE_NAME               TYPE_CHECKING
           2562_0  COME_FROM          2556  '2556'

 L.1103      2562  LOAD_CODE                <code_object _gorg>
             2564  LOAD_STR                 '_gorg'
             2566  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2568  STORE_NAME               _gorg

 L.1113      2570  LOAD_NAME                OLD_GENERICS
         2572_2574  POP_JUMP_IF_FALSE  2584  'to 2584'

 L.1114      2576  LOAD_CODE                <code_object _next_in_mro>
             2578  LOAD_STR                 '_next_in_mro'
             2580  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2582  STORE_NAME               _next_in_mro
           2584_0  COME_FROM          2572  '2572'

 L.1123      2584  BUILD_LIST_0          0 
             2586  LOAD_CONST               ('Callable', 'Awaitable', 'Iterable', 'Iterator', 'AsyncIterable', 'AsyncIterator', 'Hashable', 'Sized', 'Container', 'Collection', 'Reversible', 'ContextManager', 'AsyncContextManager')
             2588  CALL_FINALLY       2591  'to 2591'
             2590  STORE_NAME               _PROTO_WHITELIST

 L.1129      2592  LOAD_CODE                <code_object _get_protocol_attrs>
             2594  LOAD_STR                 '_get_protocol_attrs'
             2596  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2598  STORE_NAME               _get_protocol_attrs

 L.1148      2600  LOAD_CODE                <code_object _is_callable_members_only>
             2602  LOAD_STR                 '_is_callable_members_only'
             2604  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2606  STORE_NAME               _is_callable_members_only

 L.1152      2608  LOAD_NAME                hasattr
             2610  LOAD_NAME                typing
             2612  LOAD_STR                 'Protocol'
             2614  CALL_FUNCTION_2       2  ''
         2616_2618  POP_JUMP_IF_FALSE  2628  'to 2628'

 L.1153      2620  LOAD_NAME                typing
             2622  LOAD_ATTR                Protocol
             2624  STORE_NAME               Protocol
             2626  JUMP_FORWARD       2792  'to 2792'
           2628_0  COME_FROM          2616  '2616'

 L.1154      2628  LOAD_NAME                HAVE_PROTOCOLS
         2630_2632  POP_JUMP_IF_FALSE  2722  'to 2722'
             2634  LOAD_NAME                PEP_560
         2636_2638  POP_JUMP_IF_TRUE   2722  'to 2722'

 L.1156      2640  LOAD_CODE                <code_object _no_init>
             2642  LOAD_STR                 '_no_init'
             2644  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2646  STORE_NAME               _no_init

 L.1160      2648  LOAD_BUILD_CLASS 
             2650  LOAD_CODE                <code_object _ProtocolMeta>
             2652  LOAD_STR                 '_ProtocolMeta'
             2654  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2656  LOAD_STR                 '_ProtocolMeta'
             2658  LOAD_NAME                GenericMeta
             2660  CALL_FUNCTION_3       3  ''
             2662  STORE_NAME               _ProtocolMeta

 L.1357      2664  LOAD_BUILD_CLASS 
             2666  LOAD_CODE                <code_object Protocol>
             2668  LOAD_STR                 'Protocol'
             2670  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2672  LOAD_STR                 'Protocol'
             2674  LOAD_NAME                _ProtocolMeta
             2676  LOAD_CONST               ('metaclass',)
             2678  CALL_FUNCTION_KW_3     3  '3 total positional and keyword args'
             2680  STORE_NAME               Protocol

 L.1396      2682  LOAD_NAME                Protocol
             2684  LOAD_ATTR                __doc__
             2686  LOAD_CONST               None
             2688  <117>                 1  ''
         2690_2692  POP_JUMP_IF_FALSE  2792  'to 2792'

 L.1397      2694  LOAD_NAME                Protocol
             2696  LOAD_ATTR                __doc__
             2698  LOAD_ATTR                format

 L.1398      2700  LOAD_NAME                OLD_GENERICS

 L.1397  2702_2704  POP_JUMP_IF_FALSE  2710  'to 2710'
             2706  LOAD_STR                 'Protocol, Generic[T]'
             2708  JUMP_FORWARD       2712  'to 2712'
           2710_0  COME_FROM          2702  '2702'

 L.1398      2710  LOAD_STR                 'Protocol[T]'
           2712_0  COME_FROM          2708  '2708'

 L.1397      2712  LOAD_CONST               ('bases',)
             2714  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
             2716  LOAD_NAME                Protocol
             2718  STORE_ATTR               __doc__
             2720  JUMP_FORWARD       2792  'to 2792'
           2722_0  COME_FROM          2636  '2636'
           2722_1  COME_FROM          2630  '2630'

 L.1401      2722  LOAD_NAME                PEP_560
         2724_2726  POP_JUMP_IF_FALSE  2792  'to 2792'

 L.1402      2728  LOAD_CONST               0
             2730  LOAD_CONST               ('_type_check', '_GenericAlias', '_collect_type_vars')
             2732  IMPORT_NAME              typing
             2734  IMPORT_FROM              _type_check
             2736  STORE_NAME               _type_check
             2738  IMPORT_FROM              _GenericAlias
             2740  STORE_NAME               _GenericAlias
             2742  IMPORT_FROM              _collect_type_vars
             2744  STORE_NAME               _collect_type_vars
             2746  POP_TOP          

 L.1404      2748  LOAD_CODE                <code_object _no_init>
             2750  LOAD_STR                 '_no_init'
             2752  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2754  STORE_NAME               _no_init

 L.1408      2756  LOAD_BUILD_CLASS 
             2758  LOAD_CODE                <code_object _ProtocolMeta>
             2760  LOAD_STR                 '_ProtocolMeta'
             2762  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2764  LOAD_STR                 '_ProtocolMeta'
             2766  LOAD_NAME                abc
             2768  LOAD_ATTR                ABCMeta
             2770  CALL_FUNCTION_3       3  ''
             2772  STORE_NAME               _ProtocolMeta

 L.1426      2774  LOAD_BUILD_CLASS 
             2776  LOAD_CODE                <code_object Protocol>
             2778  LOAD_STR                 'Protocol'
             2780  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2782  LOAD_STR                 'Protocol'
             2784  LOAD_NAME                _ProtocolMeta
             2786  LOAD_CONST               ('metaclass',)
             2788  CALL_FUNCTION_KW_3     3  '3 total positional and keyword args'
             2790  STORE_NAME               Protocol
           2792_0  COME_FROM          2724  '2724'
           2792_1  COME_FROM          2720  '2720'
           2792_2  COME_FROM          2690  '2690'
           2792_3  COME_FROM          2626  '2626'

 L.1587      2792  LOAD_NAME                hasattr
             2794  LOAD_NAME                typing
             2796  LOAD_STR                 'runtime_checkable'
             2798  CALL_FUNCTION_2       2  ''
         2800_2802  POP_JUMP_IF_FALSE  2812  'to 2812'

 L.1588      2804  LOAD_NAME                typing
             2806  LOAD_ATTR                runtime_checkable
             2808  STORE_NAME               runtime_checkable
             2810  JUMP_FORWARD       2826  'to 2826'
           2812_0  COME_FROM          2800  '2800'

 L.1589      2812  LOAD_NAME                HAVE_PROTOCOLS
         2814_2816  POP_JUMP_IF_FALSE  2826  'to 2826'

 L.1590      2818  LOAD_CODE                <code_object runtime_checkable>
             2820  LOAD_STR                 'runtime_checkable'
             2822  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2824  STORE_NAME               runtime_checkable
           2826_0  COME_FROM          2814  '2814'
           2826_1  COME_FROM          2810  '2810'

 L.1605      2826  LOAD_NAME                HAVE_PROTOCOLS
         2828_2830  POP_JUMP_IF_FALSE  2836  'to 2836'

 L.1607      2832  LOAD_NAME                runtime_checkable
             2834  STORE_NAME               runtime
           2836_0  COME_FROM          2828  '2828'

 L.1610      2836  LOAD_NAME                hasattr
             2838  LOAD_NAME                typing
             2840  LOAD_STR                 'SupportsIndex'
             2842  CALL_FUNCTION_2       2  ''
         2844_2846  POP_JUMP_IF_FALSE  2856  'to 2856'

 L.1611      2848  LOAD_NAME                typing
             2850  LOAD_ATTR                SupportsIndex
             2852  STORE_NAME               SupportsIndex
             2854  JUMP_FORWARD       2882  'to 2882'
           2856_0  COME_FROM          2844  '2844'

 L.1612      2856  LOAD_NAME                HAVE_PROTOCOLS
         2858_2860  POP_JUMP_IF_FALSE  2882  'to 2882'

 L.1613      2862  LOAD_NAME                runtime_checkable

 L.1614      2864  LOAD_BUILD_CLASS 
             2866  LOAD_CODE                <code_object SupportsIndex>
             2868  LOAD_STR                 'SupportsIndex'
             2870  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2872  LOAD_STR                 'SupportsIndex'
             2874  LOAD_NAME                Protocol
             2876  CALL_FUNCTION_3       3  ''
             2878  CALL_FUNCTION_1       1  ''
             2880  STORE_NAME               SupportsIndex
           2882_0  COME_FROM          2858  '2858'
           2882_1  COME_FROM          2854  '2854'

 L.1622      2882  LOAD_NAME                sys
             2884  LOAD_ATTR                version_info
             2886  LOAD_CONST               (3, 9, 2)
             2888  COMPARE_OP               >=
         2890_2892  POP_JUMP_IF_FALSE  2902  'to 2902'

 L.1627      2894  LOAD_NAME                typing
             2896  LOAD_ATTR                TypedDict
             2898  STORE_NAME               TypedDict
             2900  JUMP_FORWARD       2986  'to 2986'
           2902_0  COME_FROM          2890  '2890'

 L.1629      2902  LOAD_CODE                <code_object _check_fails>
             2904  LOAD_STR                 '_check_fails'
             2906  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2908  STORE_NAME               _check_fails

 L.1640      2910  LOAD_CODE                <code_object _dict_new>
             2912  LOAD_STR                 '_dict_new'
             2914  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2916  STORE_NAME               _dict_new

 L.1646      2918  LOAD_STR                 '($cls, _typename, _fields=None, /, **kwargs)'
             2920  LOAD_NAME                _dict_new
             2922  STORE_ATTR               __text_signature__

 L.1648      2924  LOAD_CONST               True
             2926  LOAD_CONST               ('total',)
             2928  BUILD_CONST_KEY_MAP_1     1 
             2930  LOAD_CODE                <code_object _typeddict_new>
             2932  LOAD_STR                 '_typeddict_new'
             2934  MAKE_FUNCTION_2          'keyword-only'
             2936  STORE_NAME               _typeddict_new

 L.1692      2938  LOAD_STR                 '($cls, _typename, _fields=None, /, *, total=True, **kwargs)'
             2940  LOAD_NAME                _typeddict_new
             2942  STORE_ATTR               __text_signature__

 L.1695      2944  LOAD_BUILD_CLASS 
             2946  LOAD_CODE                <code_object _TypedDictMeta>
             2948  LOAD_STR                 '_TypedDictMeta'
             2950  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             2952  LOAD_STR                 '_TypedDictMeta'
             2954  LOAD_NAME                type
             2956  CALL_FUNCTION_3       3  ''
             2958  STORE_NAME               _TypedDictMeta

 L.1741      2960  LOAD_NAME                _TypedDictMeta
             2962  LOAD_STR                 'TypedDict'
             2964  LOAD_NAME                dict
             2966  BUILD_TUPLE_1         1 
             2968  BUILD_MAP_0           0 
             2970  CALL_FUNCTION_3       3  ''
             2972  STORE_NAME               TypedDict

 L.1742      2974  LOAD_NAME                __name__
             2976  LOAD_NAME                TypedDict
             2978  STORE_ATTR               __module__

 L.1744      2980  LOAD_STR                 "A simple typed name space. At runtime it is equivalent to a plain dict.\n\n        TypedDict creates a dictionary type that expects all of its\n        instances to have a certain set of keys, with each key\n        associated with a value of a consistent type. This expectation\n        is not checked at runtime but is only enforced by type checkers.\n        Usage::\n\n            class Point2D(TypedDict):\n                x: int\n                y: int\n                label: str\n\n            a: Point2D = {'x': 1, 'y': 2, 'label': 'good'}  # OK\n            b: Point2D = {'z': 3, 'label': 'bad'}           # Fails type check\n\n            assert Point2D(x=1, y=2, label='first') == dict(x=1, y=2, label='first')\n\n        The type info can be accessed via the Point2D.__annotations__ dict, and\n        the Point2D.__required_keys__ and Point2D.__optional_keys__ frozensets.\n        TypedDict supports two additional equivalent forms::\n\n            Point2D = TypedDict('Point2D', x=int, y=int, label=str)\n            Point2D = TypedDict('Point2D', {'x': int, 'y': int, 'label': str})\n\n        The class syntax is only supported in Python 3.6+, while two other\n        syntax forms work for Python 2.7 and 3.2+\n        "

 L.1743      2982  LOAD_NAME                TypedDict
             2984  STORE_ATTR               __doc__
           2986_0  COME_FROM          2900  '2900'

 L.1775      2986  LOAD_NAME                hasattr
             2988  LOAD_NAME                typing
             2990  LOAD_STR                 'Annotated'
             2992  CALL_FUNCTION_2       2  ''
         2994_2996  POP_JUMP_IF_FALSE  3018  'to 3018'

 L.1776      2998  LOAD_NAME                typing
             3000  LOAD_ATTR                Annotated
             3002  STORE_NAME               Annotated

 L.1777      3004  LOAD_NAME                typing
             3006  LOAD_ATTR                get_type_hints
             3008  STORE_NAME               get_type_hints

 L.1780      3010  LOAD_NAME                typing
             3012  LOAD_ATTR                _AnnotatedAlias
             3014  STORE_NAME               _AnnotatedAlias
             3016  JUMP_FORWARD       3130  'to 3130'
           3018_0  COME_FROM          2994  '2994'

 L.1781      3018  LOAD_NAME                PEP_560
         3020_3022  POP_JUMP_IF_FALSE  3080  'to 3080'

 L.1782      3024  LOAD_BUILD_CLASS 
             3026  LOAD_CODE                <code_object _AnnotatedAlias>
             3028  LOAD_STR                 '_AnnotatedAlias'
             3030  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3032  LOAD_STR                 '_AnnotatedAlias'
             3034  LOAD_NAME                typing
             3036  LOAD_ATTR                _GenericAlias
             3038  LOAD_CONST               True
             3040  LOAD_CONST               ('_root',)
             3042  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3044  STORE_NAME               _AnnotatedAlias

 L.1823      3046  LOAD_BUILD_CLASS 
             3048  LOAD_CODE                <code_object Annotated>
             3050  LOAD_STR                 'Annotated'
             3052  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3054  LOAD_STR                 'Annotated'
             3056  CALL_FUNCTION_2       2  ''
             3058  STORE_NAME               Annotated

 L.1877      3060  LOAD_CODE                <code_object _strip_annotations>
             3062  LOAD_STR                 '_strip_annotations'
             3064  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3066  STORE_NAME               _strip_annotations

 L.1891      3068  LOAD_CONST               (None, None, False)
             3070  LOAD_CODE                <code_object get_type_hints>
             3072  LOAD_STR                 'get_type_hints'
             3074  MAKE_FUNCTION_1          'default'
             3076  STORE_NAME               get_type_hints
             3078  JUMP_FORWARD       3130  'to 3130'
           3080_0  COME_FROM          3020  '3020'

 L.1927      3080  LOAD_NAME                HAVE_ANNOTATED
         3082_3084  POP_JUMP_IF_FALSE  3130  'to 3130'

 L.1929      3086  LOAD_CODE                <code_object _is_dunder>
             3088  LOAD_STR                 '_is_dunder'
             3090  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3092  STORE_NAME               _is_dunder

 L.1937      3094  LOAD_BUILD_CLASS 
             3096  LOAD_CODE                <code_object AnnotatedMeta>
             3098  LOAD_STR                 'AnnotatedMeta'
             3100  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3102  LOAD_STR                 'AnnotatedMeta'
             3104  LOAD_NAME                typing
             3106  LOAD_ATTR                GenericMeta
             3108  CALL_FUNCTION_3       3  ''
             3110  STORE_NAME               AnnotatedMeta

 L.2035      3112  LOAD_BUILD_CLASS 
             3114  LOAD_CODE                <code_object Annotated>
             3116  LOAD_STR                 'Annotated'
             3118  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3120  LOAD_STR                 'Annotated'
             3122  LOAD_NAME                AnnotatedMeta
             3124  LOAD_CONST               ('metaclass',)
             3126  CALL_FUNCTION_KW_3     3  '3 total positional and keyword args'
             3128  STORE_NAME               Annotated
           3130_0  COME_FROM          3082  '3082'
           3130_1  COME_FROM          3078  '3078'
           3130_2  COME_FROM          3016  '3016'

 L.2071      3130  LOAD_NAME                sys
             3132  LOAD_ATTR                version_info
             3134  LOAD_CONST               None
             3136  LOAD_CONST               2
             3138  BUILD_SLICE_2         2 
             3140  BINARY_SUBSCR    
             3142  LOAD_CONST               (3, 10)
             3144  COMPARE_OP               >=
         3146_3148  POP_JUMP_IF_FALSE  3164  'to 3164'

 L.2072      3150  LOAD_NAME                typing
             3152  LOAD_ATTR                get_origin
             3154  STORE_NAME               get_origin

 L.2073      3156  LOAD_NAME                typing
             3158  LOAD_ATTR                get_args
             3160  STORE_NAME               get_args
             3162  JUMP_FORWARD       3282  'to 3282'
           3164_0  COME_FROM          3146  '3146'

 L.2074      3164  LOAD_NAME                PEP_560
         3166_3168  POP_JUMP_IF_FALSE  3282  'to 3282'

 L.2075      3170  LOAD_CONST               0
             3172  LOAD_CONST               ('_GenericAlias',)
             3174  IMPORT_NAME              typing
             3176  IMPORT_FROM              _GenericAlias
             3178  STORE_NAME               _GenericAlias
             3180  POP_TOP          

 L.2076      3182  SETUP_FINALLY      3200  'to 3200'

 L.2078      3184  LOAD_CONST               0
             3186  LOAD_CONST               ('_BaseGenericAlias',)
             3188  IMPORT_NAME              typing
             3190  IMPORT_FROM              _BaseGenericAlias
             3192  STORE_NAME               _BaseGenericAlias
             3194  POP_TOP          
             3196  POP_BLOCK        
             3198  JUMP_FORWARD       3224  'to 3224'
           3200_0  COME_FROM_FINALLY  3182  '3182'

 L.2079      3200  DUP_TOP          
             3202  LOAD_NAME                ImportError
         3204_3206  <121>              3222  ''
             3208  POP_TOP          
             3210  POP_TOP          
             3212  POP_TOP          

 L.2080      3214  LOAD_NAME                _GenericAlias
             3216  STORE_NAME               _BaseGenericAlias
             3218  POP_EXCEPT       
             3220  JUMP_FORWARD       3224  'to 3224'
             3222  <48>             
           3224_0  COME_FROM          3220  '3220'
           3224_1  COME_FROM          3198  '3198'

 L.2081      3224  SETUP_FINALLY      3242  'to 3242'

 L.2083      3226  LOAD_CONST               0
             3228  LOAD_CONST               ('GenericAlias',)
             3230  IMPORT_NAME              typing
             3232  IMPORT_FROM              GenericAlias
             3234  STORE_NAME               GenericAlias
             3236  POP_TOP          
             3238  POP_BLOCK        
             3240  JUMP_FORWARD       3266  'to 3266'
           3242_0  COME_FROM_FINALLY  3224  '3224'

 L.2084      3242  DUP_TOP          
             3244  LOAD_NAME                ImportError
         3246_3248  <121>              3264  ''
             3250  POP_TOP          
             3252  POP_TOP          
             3254  POP_TOP          

 L.2085      3256  LOAD_NAME                _GenericAlias
             3258  STORE_NAME               GenericAlias
             3260  POP_EXCEPT       
             3262  JUMP_FORWARD       3266  'to 3266'
             3264  <48>             
           3266_0  COME_FROM          3262  '3262'
           3266_1  COME_FROM          3240  '3240'

 L.2087      3266  LOAD_CODE                <code_object get_origin>
             3268  LOAD_STR                 'get_origin'
             3270  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3272  STORE_NAME               get_origin

 L.2111      3274  LOAD_CODE                <code_object get_args>
             3276  LOAD_STR                 'get_args'
             3278  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3280  STORE_NAME               get_args
           3282_0  COME_FROM          3166  '3166'
           3282_1  COME_FROM          3162  '3162'

 L.2134      3282  LOAD_NAME                hasattr
             3284  LOAD_NAME                typing
             3286  LOAD_STR                 'TypeAlias'
             3288  CALL_FUNCTION_2       2  ''
         3290_3292  POP_JUMP_IF_FALSE  3302  'to 3302'

 L.2135      3294  LOAD_NAME                typing
             3296  LOAD_ATTR                TypeAlias
             3298  STORE_NAME               TypeAlias
             3300  JUMP_FORWARD       3518  'to 3518'
           3302_0  COME_FROM          3290  '3290'

 L.2136      3302  LOAD_NAME                sys
             3304  LOAD_ATTR                version_info
             3306  LOAD_CONST               None
             3308  LOAD_CONST               2
             3310  BUILD_SLICE_2         2 
             3312  BINARY_SUBSCR    
             3314  LOAD_CONST               (3, 9)
             3316  COMPARE_OP               >=
         3318_3320  POP_JUMP_IF_FALSE  3358  'to 3358'

 L.2137      3322  LOAD_BUILD_CLASS 
             3324  LOAD_CODE                <code_object _TypeAliasForm>
             3326  LOAD_STR                 '_TypeAliasForm'
             3328  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3330  LOAD_STR                 '_TypeAliasForm'
             3332  LOAD_NAME                typing
             3334  LOAD_ATTR                _SpecialForm
             3336  LOAD_CONST               True
             3338  LOAD_CONST               ('_root',)
             3340  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3342  STORE_NAME               _TypeAliasForm

 L.2141      3344  LOAD_NAME                _TypeAliasForm

 L.2142      3346  LOAD_CODE                <code_object TypeAlias>
             3348  LOAD_STR                 'TypeAlias'
             3350  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3352  CALL_FUNCTION_1       1  ''
             3354  STORE_NAME               TypeAlias
             3356  JUMP_FORWARD       3518  'to 3518'
           3358_0  COME_FROM          3318  '3318'

 L.2155      3358  LOAD_NAME                sys
             3360  LOAD_ATTR                version_info
             3362  LOAD_CONST               None
             3364  LOAD_CONST               2
             3366  BUILD_SLICE_2         2 
             3368  BINARY_SUBSCR    
             3370  LOAD_CONST               (3, 7)
             3372  COMPARE_OP               >=
         3374_3376  POP_JUMP_IF_FALSE  3414  'to 3414'

 L.2156      3378  LOAD_BUILD_CLASS 
             3380  LOAD_CODE                <code_object _TypeAliasForm>
             3382  LOAD_STR                 '_TypeAliasForm'
             3384  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3386  LOAD_STR                 '_TypeAliasForm'
             3388  LOAD_NAME                typing
             3390  LOAD_ATTR                _SpecialForm
             3392  LOAD_CONST               True
             3394  LOAD_CONST               ('_root',)
             3396  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3398  STORE_NAME               _TypeAliasForm

 L.2160      3400  LOAD_NAME                _TypeAliasForm
             3402  LOAD_STR                 'TypeAlias'

 L.2161      3404  LOAD_STR                 "Special marker indicating that an assignment should\n                               be recognized as a proper type alias definition by type\n                               checkers.\n\n                               For example::\n\n                                   Predicate: TypeAlias = Callable[..., bool]\n\n                               It's invalid when used anywhere except as in the example\n                               above."

 L.2160      3406  LOAD_CONST               ('doc',)
             3408  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
             3410  STORE_NAME               TypeAlias
             3412  JUMP_FORWARD       3518  'to 3518'
           3414_0  COME_FROM          3374  '3374'

 L.2172      3414  LOAD_NAME                hasattr
             3416  LOAD_NAME                typing
             3418  LOAD_STR                 '_FinalTypingBase'
             3420  CALL_FUNCTION_2       2  ''
         3422_3424  POP_JUMP_IF_FALSE  3480  'to 3480'

 L.2173      3426  LOAD_BUILD_CLASS 
             3428  LOAD_CODE                <code_object _TypeAliasMeta>
             3430  LOAD_STR                 '_TypeAliasMeta'
             3432  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3434  LOAD_STR                 '_TypeAliasMeta'
             3436  LOAD_NAME                typing
             3438  LOAD_ATTR                TypingMeta
             3440  CALL_FUNCTION_3       3  ''
             3442  STORE_NAME               _TypeAliasMeta

 L.2179      3444  LOAD_BUILD_CLASS 
             3446  LOAD_CODE                <code_object _TypeAliasBase>
             3448  LOAD_STR                 '_TypeAliasBase'
             3450  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3452  LOAD_STR                 '_TypeAliasBase'
             3454  LOAD_NAME                typing
             3456  LOAD_ATTR                _FinalTypingBase
             3458  LOAD_NAME                _TypeAliasMeta
             3460  LOAD_CONST               True
             3462  LOAD_CONST               ('metaclass', '_root')
             3464  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             3466  STORE_NAME               _TypeAliasBase

 L.2201      3468  LOAD_NAME                _TypeAliasBase
             3470  LOAD_CONST               True
             3472  LOAD_CONST               ('_root',)
             3474  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
             3476  STORE_NAME               TypeAlias
             3478  JUMP_FORWARD       3518  'to 3518'
           3480_0  COME_FROM          3422  '3422'

 L.2203      3480  LOAD_BUILD_CLASS 
             3482  LOAD_CODE                <code_object _TypeAliasMeta>
             3484  LOAD_STR                 '_TypeAliasMeta'
             3486  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3488  LOAD_STR                 '_TypeAliasMeta'
             3490  LOAD_NAME                typing
             3492  LOAD_ATTR                TypingMeta
             3494  CALL_FUNCTION_3       3  ''
             3496  STORE_NAME               _TypeAliasMeta

 L.2215      3498  LOAD_BUILD_CLASS 
             3500  LOAD_CODE                <code_object TypeAlias>
             3502  LOAD_STR                 'TypeAlias'
             3504  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3506  LOAD_STR                 'TypeAlias'
             3508  LOAD_NAME                _TypeAliasMeta
             3510  LOAD_CONST               True
             3512  LOAD_CONST               ('metaclass', '_root')
             3514  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3516  STORE_NAME               TypeAlias
           3518_0  COME_FROM          3478  '3478'
           3518_1  COME_FROM          3412  '3412'
           3518_2  COME_FROM          3356  '3356'
           3518_3  COME_FROM          3300  '3300'

 L.2230      3518  LOAD_NAME                hasattr
             3520  LOAD_NAME                typing
             3522  LOAD_STR                 'ParamSpecArgs'
             3524  CALL_FUNCTION_2       2  ''
         3526_3528  POP_JUMP_IF_FALSE  3544  'to 3544'

 L.2231      3530  LOAD_NAME                typing
             3532  LOAD_ATTR                ParamSpecArgs
             3534  STORE_NAME               ParamSpecArgs

 L.2232      3536  LOAD_NAME                typing
             3538  LOAD_ATTR                ParamSpecKwargs
             3540  STORE_NAME               ParamSpecKwargs
             3542  JUMP_FORWARD       3590  'to 3590'
           3544_0  COME_FROM          3526  '3526'

 L.2234      3544  LOAD_BUILD_CLASS 
             3546  LOAD_CODE                <code_object _Immutable>
             3548  LOAD_STR                 '_Immutable'
             3550  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3552  LOAD_STR                 '_Immutable'
             3554  CALL_FUNCTION_2       2  ''
             3556  STORE_NAME               _Immutable

 L.2244      3558  LOAD_BUILD_CLASS 
             3560  LOAD_CODE                <code_object ParamSpecArgs>
             3562  LOAD_STR                 'ParamSpecArgs'
             3564  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3566  LOAD_STR                 'ParamSpecArgs'
             3568  LOAD_NAME                _Immutable
             3570  CALL_FUNCTION_3       3  ''
             3572  STORE_NAME               ParamSpecArgs

 L.2262      3574  LOAD_BUILD_CLASS 
             3576  LOAD_CODE                <code_object ParamSpecKwargs>
             3578  LOAD_STR                 'ParamSpecKwargs'
             3580  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3582  LOAD_STR                 'ParamSpecKwargs'
             3584  LOAD_NAME                _Immutable
             3586  CALL_FUNCTION_3       3  ''
             3588  STORE_NAME               ParamSpecKwargs
           3590_0  COME_FROM          3542  '3542'

 L.2280      3590  LOAD_NAME                hasattr
             3592  LOAD_NAME                typing
             3594  LOAD_STR                 'ParamSpec'
             3596  CALL_FUNCTION_2       2  ''
         3598_3600  POP_JUMP_IF_FALSE  3610  'to 3610'

 L.2281      3602  LOAD_NAME                typing
             3604  LOAD_ATTR                ParamSpec
             3606  STORE_NAME               ParamSpec
             3608  JUMP_FORWARD       3626  'to 3626'
           3610_0  COME_FROM          3598  '3598'

 L.2285      3610  LOAD_BUILD_CLASS 
             3612  LOAD_CODE                <code_object ParamSpec>
             3614  LOAD_STR                 'ParamSpec'
             3616  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3618  LOAD_STR                 'ParamSpec'
             3620  LOAD_NAME                list
             3622  CALL_FUNCTION_3       3  ''
             3624  STORE_NAME               ParamSpec
           3626_0  COME_FROM          3608  '3608'

 L.2387      3626  LOAD_BUILD_CLASS 
             3628  LOAD_CODE                <code_object _ConcatenateGenericAlias>
             3630  LOAD_STR                 '_ConcatenateGenericAlias'
             3632  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3634  LOAD_STR                 '_ConcatenateGenericAlias'
             3636  LOAD_NAME                list
             3638  CALL_FUNCTION_3       3  ''
             3640  STORE_NAME               _ConcatenateGenericAlias

 L.2402      3642  LOAD_NAME                _tp_cache

 L.2403      3644  LOAD_CODE                <code_object _concatenate_getitem>
             3646  LOAD_STR                 '_concatenate_getitem'
             3648  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3650  CALL_FUNCTION_1       1  ''
             3652  STORE_NAME               _concatenate_getitem

 L.2416      3654  LOAD_NAME                hasattr
             3656  LOAD_NAME                typing
             3658  LOAD_STR                 'Concatenate'
             3660  CALL_FUNCTION_2       2  ''
         3662_3664  POP_JUMP_IF_FALSE  3680  'to 3680'

 L.2417      3666  LOAD_NAME                typing
             3668  LOAD_ATTR                Concatenate
             3670  STORE_NAME               Concatenate

 L.2418      3672  LOAD_NAME                typing
             3674  LOAD_ATTR                _ConcatenateGenericAlias
             3676  STORE_NAME               _ConcatenateGenericAlias
             3678  JUMP_FORWARD       3874  'to 3874'
           3680_0  COME_FROM          3662  '3662'

 L.2419      3680  LOAD_NAME                sys
             3682  LOAD_ATTR                version_info
             3684  LOAD_CONST               None
             3686  LOAD_CONST               2
             3688  BUILD_SLICE_2         2 
             3690  BINARY_SUBSCR    
             3692  LOAD_CONST               (3, 9)
             3694  COMPARE_OP               >=
         3696_3698  POP_JUMP_IF_FALSE  3714  'to 3714'

 L.2420      3700  LOAD_NAME                _TypeAliasForm

 L.2421      3702  LOAD_CODE                <code_object Concatenate>
             3704  LOAD_STR                 'Concatenate'
             3706  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3708  CALL_FUNCTION_1       1  ''
             3710  STORE_NAME               Concatenate
             3712  JUMP_FORWARD       3874  'to 3874'
           3714_0  COME_FROM          3696  '3696'

 L.2434      3714  LOAD_NAME                sys
             3716  LOAD_ATTR                version_info
             3718  LOAD_CONST               None
             3720  LOAD_CONST               2
             3722  BUILD_SLICE_2         2 
             3724  BINARY_SUBSCR    
             3726  LOAD_CONST               (3, 7)
             3728  COMPARE_OP               >=
         3730_3732  POP_JUMP_IF_FALSE  3770  'to 3770'

 L.2435      3734  LOAD_BUILD_CLASS 
             3736  LOAD_CODE                <code_object _ConcatenateForm>
             3738  LOAD_STR                 '_ConcatenateForm'
             3740  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3742  LOAD_STR                 '_ConcatenateForm'
             3744  LOAD_NAME                typing
             3746  LOAD_ATTR                _SpecialForm
             3748  LOAD_CONST               True
             3750  LOAD_CONST               ('_root',)
             3752  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3754  STORE_NAME               _ConcatenateForm

 L.2442      3756  LOAD_NAME                _ConcatenateForm
             3758  LOAD_STR                 'Concatenate'

 L.2443      3760  LOAD_STR                 'Used in conjunction with ``ParamSpec`` and ``Callable`` to represent a\n        higher order function which adds, removes or transforms parameters of a\n        callable.\n\n        For example::\n\n           Callable[Concatenate[int, P], int]\n\n        See PEP 612 for detailed information.\n        '

 L.2442      3762  LOAD_CONST               ('doc',)
             3764  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
             3766  STORE_NAME               Concatenate
             3768  JUMP_FORWARD       3874  'to 3874'
           3770_0  COME_FROM          3730  '3730'

 L.2454      3770  LOAD_NAME                hasattr
             3772  LOAD_NAME                typing
             3774  LOAD_STR                 '_FinalTypingBase'
             3776  CALL_FUNCTION_2       2  ''
         3778_3780  POP_JUMP_IF_FALSE  3836  'to 3836'

 L.2455      3782  LOAD_BUILD_CLASS 
             3784  LOAD_CODE                <code_object _ConcatenateAliasMeta>
             3786  LOAD_STR                 '_ConcatenateAliasMeta'
             3788  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3790  LOAD_STR                 '_ConcatenateAliasMeta'
             3792  LOAD_NAME                typing
             3794  LOAD_ATTR                TypingMeta
             3796  CALL_FUNCTION_3       3  ''
             3798  STORE_NAME               _ConcatenateAliasMeta

 L.2461      3800  LOAD_BUILD_CLASS 
             3802  LOAD_CODE                <code_object _ConcatenateAliasBase>
             3804  LOAD_STR                 '_ConcatenateAliasBase'
             3806  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3808  LOAD_STR                 '_ConcatenateAliasBase'
             3810  LOAD_NAME                typing
             3812  LOAD_ATTR                _FinalTypingBase

 L.2462      3814  LOAD_NAME                _ConcatenateAliasMeta

 L.2463      3816  LOAD_CONST               True

 L.2461      3818  LOAD_CONST               ('metaclass', '_root')
             3820  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             3822  STORE_NAME               _ConcatenateAliasBase

 L.2488      3824  LOAD_NAME                _ConcatenateAliasBase
             3826  LOAD_CONST               True
             3828  LOAD_CONST               ('_root',)
             3830  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
             3832  STORE_NAME               Concatenate
             3834  JUMP_FORWARD       3874  'to 3874'
           3836_0  COME_FROM          3778  '3778'

 L.2491      3836  LOAD_BUILD_CLASS 
             3838  LOAD_CODE                <code_object _ConcatenateAliasMeta>
             3840  LOAD_STR                 '_ConcatenateAliasMeta'
             3842  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3844  LOAD_STR                 '_ConcatenateAliasMeta'
             3846  LOAD_NAME                typing
             3848  LOAD_ATTR                TypingMeta
             3850  CALL_FUNCTION_3       3  ''
             3852  STORE_NAME               _ConcatenateAliasMeta

 L.2506      3854  LOAD_BUILD_CLASS 
             3856  LOAD_CODE                <code_object Concatenate>
             3858  LOAD_STR                 'Concatenate'
             3860  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3862  LOAD_STR                 'Concatenate'
             3864  LOAD_NAME                _ConcatenateAliasMeta
             3866  LOAD_CONST               True
             3868  LOAD_CONST               ('metaclass', '_root')
             3870  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3872  STORE_NAME               Concatenate
           3874_0  COME_FROM          3834  '3834'
           3874_1  COME_FROM          3768  '3768'
           3874_2  COME_FROM          3712  '3712'
           3874_3  COME_FROM          3678  '3678'

 L.2519      3874  LOAD_NAME                hasattr
             3876  LOAD_NAME                typing
             3878  LOAD_STR                 'TypeGuard'
             3880  CALL_FUNCTION_2       2  ''
         3882_3884  POP_JUMP_IF_FALSE  3894  'to 3894'

 L.2520      3886  LOAD_NAME                typing
             3888  LOAD_ATTR                TypeGuard
             3890  STORE_NAME               TypeGuard
             3892  JUMP_FORWARD       4094  'to 4094'
           3894_0  COME_FROM          3882  '3882'

 L.2521      3894  LOAD_NAME                sys
             3896  LOAD_ATTR                version_info
             3898  LOAD_CONST               None
             3900  LOAD_CONST               2
             3902  BUILD_SLICE_2         2 
             3904  BINARY_SUBSCR    
             3906  LOAD_CONST               (3, 9)
             3908  COMPARE_OP               >=
         3910_3912  POP_JUMP_IF_FALSE  3950  'to 3950'

 L.2522      3914  LOAD_BUILD_CLASS 
             3916  LOAD_CODE                <code_object _TypeGuardForm>
             3918  LOAD_STR                 '_TypeGuardForm'
             3920  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3922  LOAD_STR                 '_TypeGuardForm'
             3924  LOAD_NAME                typing
             3926  LOAD_ATTR                _SpecialForm
             3928  LOAD_CONST               True
             3930  LOAD_CONST               ('_root',)
             3932  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3934  STORE_NAME               _TypeGuardForm

 L.2526      3936  LOAD_NAME                _TypeGuardForm

 L.2527      3938  LOAD_CODE                <code_object TypeGuard>
             3940  LOAD_STR                 'TypeGuard'
             3942  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3944  CALL_FUNCTION_1       1  ''
             3946  STORE_NAME               TypeGuard
             3948  JUMP_FORWARD       4094  'to 4094'
           3950_0  COME_FROM          3910  '3910'

 L.2573      3950  LOAD_NAME                sys
             3952  LOAD_ATTR                version_info
             3954  LOAD_CONST               None
             3956  LOAD_CONST               2
             3958  BUILD_SLICE_2         2 
             3960  BINARY_SUBSCR    
             3962  LOAD_CONST               (3, 7)
             3964  COMPARE_OP               >=
         3966_3968  POP_JUMP_IF_FALSE  4006  'to 4006'

 L.2574      3970  LOAD_BUILD_CLASS 
             3972  LOAD_CODE                <code_object _TypeGuardForm>
             3974  LOAD_STR                 '_TypeGuardForm'
             3976  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             3978  LOAD_STR                 '_TypeGuardForm'
             3980  LOAD_NAME                typing
             3982  LOAD_ATTR                _SpecialForm
             3984  LOAD_CONST               True
             3986  LOAD_CONST               ('_root',)
             3988  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             3990  STORE_NAME               _TypeGuardForm

 L.2584      3992  LOAD_NAME                _TypeGuardForm

 L.2585      3994  LOAD_STR                 'TypeGuard'

 L.2586      3996  LOAD_STR                 'Special typing form used to annotate the return type of a user-defined\n        type guard function.  ``TypeGuard`` only accepts a single type argument.\n        At runtime, functions marked this way should return a boolean.\n\n        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static\n        type checkers to determine a more precise type of an expression within a\n        program\'s code flow.  Usually type narrowing is done by analyzing\n        conditional code flow and applying the narrowing to a block of code.  The\n        conditional expression here is sometimes referred to as a "type guard".\n\n        Sometimes it would be convenient to use a user-defined boolean function\n        as a type guard.  Such a function should use ``TypeGuard[...]`` as its\n        return type to alert static type checkers to this intention.\n\n        Using  ``-> TypeGuard`` tells the static type checker that for a given\n        function:\n\n        1. The return value is a boolean.\n        2. If the return value is ``True``, the type of its argument\n        is the type inside ``TypeGuard``.\n\n        For example::\n\n            def is_str(val: Union[str, float]):\n                # "isinstance" type guard\n                if isinstance(val, str):\n                    # Type of ``val`` is narrowed to ``str``\n                    ...\n                else:\n                    # Else, type of ``val`` is narrowed to ``float``.\n                    ...\n\n        Strict type narrowing is not enforced -- ``TypeB`` need not be a narrower\n        form of ``TypeA`` (it can even be a wider form) and this may lead to\n        type-unsafe results.  The main reason is to allow for things like\n        narrowing ``List[object]`` to ``List[str]`` even though the latter is not\n        a subtype of the former, since ``List`` is invariant.  The responsibility of\n        writing type-safe type guards is left to the user.\n\n        ``TypeGuard`` also works with type variables.  For more information, see\n        PEP 647 (User-Defined Type Guards).\n        '

 L.2584      3998  LOAD_CONST               ('doc',)
             4000  CALL_FUNCTION_KW_2     2  '2 total positional and keyword args'
             4002  STORE_NAME               TypeGuard
             4004  JUMP_FORWARD       4094  'to 4094'
           4006_0  COME_FROM          3966  '3966'

 L.2628      4006  LOAD_NAME                hasattr
             4008  LOAD_NAME                typing
             4010  LOAD_STR                 '_FinalTypingBase'
             4012  CALL_FUNCTION_2       2  ''
         4014_4016  POP_JUMP_IF_FALSE  4052  'to 4052'

 L.2629      4018  LOAD_BUILD_CLASS 
             4020  LOAD_CODE                <code_object _TypeGuard>
             4022  LOAD_STR                 '_TypeGuard'
             4024  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             4026  LOAD_STR                 '_TypeGuard'
             4028  LOAD_NAME                typing
             4030  LOAD_ATTR                _FinalTypingBase
             4032  LOAD_CONST               True
             4034  LOAD_CONST               ('_root',)
             4036  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
             4038  STORE_NAME               _TypeGuard

 L.2709      4040  LOAD_NAME                _TypeGuard
             4042  LOAD_CONST               True
             4044  LOAD_CONST               ('_root',)
             4046  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
             4048  STORE_NAME               TypeGuard
             4050  JUMP_FORWARD       4094  'to 4094'
           4052_0  COME_FROM          4014  '4014'

 L.2711      4052  LOAD_BUILD_CLASS 
             4054  LOAD_CODE                <code_object _TypeGuardMeta>
             4056  LOAD_STR                 '_TypeGuardMeta'
             4058  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             4060  LOAD_STR                 '_TypeGuardMeta'
             4062  LOAD_NAME                typing
             4064  LOAD_ATTR                TypingMeta
             4066  CALL_FUNCTION_3       3  ''
             4068  STORE_NAME               _TypeGuardMeta

 L.2762      4070  LOAD_BUILD_CLASS 
             4072  LOAD_CODE                <code_object TypeGuard>
             4074  LOAD_STR                 'TypeGuard'
             4076  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
             4078  LOAD_STR                 'TypeGuard'
             4080  LOAD_NAME                typing
             4082  LOAD_ATTR                Final
             4084  LOAD_NAME                _TypeGuardMeta
             4086  LOAD_CONST               True
             4088  LOAD_CONST               ('metaclass', '_root')
             4090  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
             4092  STORE_NAME               TypeGuard
           4094_0  COME_FROM          4050  '4050'
           4094_1  COME_FROM          4004  '4004'
           4094_2  COME_FROM          3948  '3948'
           4094_3  COME_FROM          3892  '3892'

Parse error at or near `<121>' instruction at offset 166

Instruction context:
   
 L.  26       162  DUP_TOP          
                 164  LOAD_NAME                ImportError
->               166  <121>               182  ''
                 168  POP_TOP          
                 170  POP_TOP          
                 172  POP_TOP          

test/134294.pyc -- 
# decompile failed
