
# file test/101066.pyc
# --- This code section failed: ---

 L.   2         0  LOAD_STR                 'Common pathname manipulations, WindowsNT/95 version.\n\nInstead of importing this module directly, import os and refer to this\nmodule as os.path.\n'
                2  STORE_NAME               __doc__

 L.  11         4  LOAD_STR                 '.'
                6  STORE_NAME               curdir

 L.  12         8  LOAD_STR                 '..'
               10  STORE_NAME               pardir

 L.  13        12  LOAD_STR                 '.'
               14  STORE_NAME               extsep

 L.  14        16  LOAD_STR                 '\\'
               18  STORE_NAME               sep

 L.  15        20  LOAD_STR                 ';'
               22  STORE_NAME               pathsep

 L.  16        24  LOAD_STR                 '/'
               26  STORE_NAME               altsep

 L.  17        28  LOAD_STR                 '.;C:\\bin'
               30  STORE_NAME               defpath

 L.  18        32  LOAD_STR                 'nul'
               34  STORE_NAME               devnull

 L.  20        36  LOAD_CONST               0
               38  LOAD_CONST               None
               40  IMPORT_NAME              os
               42  STORE_NAME               os

 L.  21        44  LOAD_CONST               0
               46  LOAD_CONST               None
               48  IMPORT_NAME              sys
               50  STORE_NAME               sys

 L.  22        52  LOAD_CONST               0
               54  LOAD_CONST               None
               56  IMPORT_NAME              stat
               58  STORE_NAME               stat

 L.  23        60  LOAD_CONST               0
               62  LOAD_CONST               None
               64  IMPORT_NAME              genericpath
               66  STORE_NAME               genericpath

 L.  24        68  LOAD_CONST               0
               70  LOAD_CONST               ('*',)
               72  IMPORT_NAME              genericpath
               74  IMPORT_STAR      

 L.  26        76  BUILD_LIST_0          0 
               78  LOAD_CONST               ('normcase', 'isabs', 'join', 'splitdrive', 'split', 'splitext', 'basename', 'dirname', 'commonprefix', 'getsize', 'getmtime', 'getatime', 'getctime', 'islink', 'exists', 'lexists', 'isdir', 'isfile', 'ismount', 'expanduser', 'expandvars', 'normpath', 'abspath', 'curdir', 'pardir', 'sep', 'pathsep', 'defpath', 'altsep', 'extsep', 'devnull', 'realpath', 'supports_unicode_filenames', 'relpath', 'samefile', 'sameopenfile', 'samestat', 'commonpath')
               80  CALL_FINALLY         83  'to 83'
               82  STORE_NAME               __all__

 L.  34        84  LOAD_CODE                <code_object _get_bothseps>
               86  LOAD_STR                 '_get_bothseps'
               88  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
               90  STORE_NAME               _get_bothseps

 L.  44        92  LOAD_CODE                <code_object normcase>
               94  LOAD_STR                 'normcase'
               96  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
               98  STORE_NAME               normcase

 L.  61       100  LOAD_CODE                <code_object isabs>
              102  LOAD_STR                 'isabs'
              104  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              106  STORE_NAME               isabs

 L.  77       108  LOAD_CODE                <code_object join>
              110  LOAD_STR                 'join'
              112  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              114  STORE_NAME               join

 L. 124       116  LOAD_CODE                <code_object splitdrive>
              118  LOAD_STR                 'splitdrive'
              120  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              122  STORE_NAME               splitdrive

 L. 180       124  LOAD_CODE                <code_object split>
              126  LOAD_STR                 'split'
              128  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              130  STORE_NAME               split

 L. 203       132  LOAD_CODE                <code_object splitext>
              134  LOAD_STR                 'splitext'
              136  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              138  STORE_NAME               splitext

 L. 209       140  LOAD_NAME                genericpath
              142  LOAD_ATTR                _splitext
              144  LOAD_ATTR                __doc__
              146  LOAD_NAME                splitext
              148  STORE_ATTR               __doc__

 L. 214       150  LOAD_CODE                <code_object basename>
              152  LOAD_STR                 'basename'
              154  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              156  STORE_NAME               basename

 L. 221       158  LOAD_CODE                <code_object dirname>
              160  LOAD_STR                 'dirname'
              162  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              164  STORE_NAME               dirname

 L. 228       166  LOAD_CODE                <code_object islink>
              168  LOAD_STR                 'islink'
              170  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              172  STORE_NAME               islink

 L. 240       174  LOAD_CODE                <code_object lexists>
              176  LOAD_STR                 'lexists'
              178  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              180  STORE_NAME               lexists

 L. 258       182  SETUP_FINALLY       200  'to 200'

 L. 259       184  LOAD_CONST               0
              186  LOAD_CONST               ('_getvolumepathname',)
              188  IMPORT_NAME              nt
              190  IMPORT_FROM              _getvolumepathname
              192  STORE_NAME               _getvolumepathname
              194  POP_TOP          
              196  POP_BLOCK        
              198  JUMP_FORWARD        222  'to 222'
            200_0  COME_FROM_FINALLY   182  '182'

 L. 260       200  DUP_TOP          
              202  LOAD_NAME                ImportError
              204  <121>               220  ''
              206  POP_TOP          
              208  POP_TOP          
              210  POP_TOP          

 L. 261       212  LOAD_CONST               None
              214  STORE_NAME               _getvolumepathname
              216  POP_EXCEPT       
              218  JUMP_FORWARD        222  'to 222'
              220  <48>             
            222_0  COME_FROM           218  '218'
            222_1  COME_FROM           198  '198'

 L. 262       222  LOAD_CODE                <code_object ismount>
              224  LOAD_STR                 'ismount'
              226  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              228  STORE_NAME               ismount

 L. 289       230  LOAD_CODE                <code_object expanduser>
              232  LOAD_STR                 'expanduser'
              234  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              236  STORE_NAME               expanduser

 L. 337       238  LOAD_CODE                <code_object expandvars>
              240  LOAD_STR                 'expandvars'
              242  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              244  STORE_NAME               expandvars

 L. 450       246  LOAD_CODE                <code_object normpath>
              248  LOAD_STR                 'normpath'
              250  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              252  STORE_NAME               normpath

 L. 500       254  LOAD_CODE                <code_object _abspath_fallback>
              256  LOAD_STR                 '_abspath_fallback'
              258  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              260  STORE_NAME               _abspath_fallback

 L. 517       262  SETUP_FINALLY       280  'to 280'

 L. 518       264  LOAD_CONST               0
              266  LOAD_CONST               ('_getfullpathname',)
              268  IMPORT_NAME              nt
              270  IMPORT_FROM              _getfullpathname
              272  STORE_NAME               _getfullpathname
              274  POP_TOP          
              276  POP_BLOCK        
              278  JUMP_FORWARD        304  'to 304'
            280_0  COME_FROM_FINALLY   262  '262'

 L. 520       280  DUP_TOP          
              282  LOAD_NAME                ImportError
          284_286  <121>               302  ''
              288  POP_TOP          
              290  POP_TOP          
              292  POP_TOP          

 L. 521       294  LOAD_NAME                _abspath_fallback
              296  STORE_NAME               abspath
              298  POP_EXCEPT       
              300  JUMP_FORWARD        312  'to 312'
              302  <48>             
            304_0  COME_FROM           278  '278'

 L. 524       304  LOAD_CODE                <code_object abspath>
              306  LOAD_STR                 'abspath'
              308  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              310  STORE_NAME               abspath
            312_0  COME_FROM           300  '300'

 L. 531       312  SETUP_FINALLY       334  'to 334'

 L. 532       314  LOAD_CONST               0
              316  LOAD_CONST               ('_getfinalpathname', 'readlink')
              318  IMPORT_NAME              nt
              320  IMPORT_FROM              _getfinalpathname
              322  STORE_NAME               _getfinalpathname
              324  IMPORT_FROM              readlink
              326  STORE_NAME               _nt_readlink
              328  POP_TOP          
              330  POP_BLOCK        
              332  JUMP_FORWARD        358  'to 358'
            334_0  COME_FROM_FINALLY   312  '312'

 L. 533       334  DUP_TOP          
              336  LOAD_NAME                ImportError
          338_340  <121>               356  ''
              342  POP_TOP          
              344  POP_TOP          
              346  POP_TOP          

 L. 535       348  LOAD_NAME                abspath
              350  STORE_NAME               realpath
              352  POP_EXCEPT       
              354  JUMP_FORWARD        382  'to 382'
              356  <48>             
            358_0  COME_FROM           332  '332'

 L. 537       358  LOAD_CODE                <code_object _readlink_deep>
              360  LOAD_STR                 '_readlink_deep'
              362  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              364  STORE_NAME               _readlink_deep

 L. 579       366  LOAD_CODE                <code_object _getfinalpathname_nonstrict>
              368  LOAD_STR                 '_getfinalpathname_nonstrict'
              370  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              372  STORE_NAME               _getfinalpathname_nonstrict

 L. 625       374  LOAD_CODE                <code_object realpath>
              376  LOAD_STR                 'realpath'
              378  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              380  STORE_NAME               realpath
            382_0  COME_FROM           354  '354'

 L. 675       382  LOAD_NAME                hasattr
              384  LOAD_NAME                sys
              386  LOAD_STR                 'getwindowsversion'
              388  CALL_FUNCTION_2       2  ''
          390_392  JUMP_IF_FALSE_OR_POP   408  'to 408'

 L. 676       394  LOAD_NAME                sys
              396  LOAD_METHOD              getwindowsversion
              398  CALL_METHOD_0         0  ''
              400  LOAD_CONST               3
              402  BINARY_SUBSCR    
              404  LOAD_CONST               2
              406  COMPARE_OP               >=
            408_0  COME_FROM           390  '390'

 L. 675       408  STORE_NAME               supports_unicode_filenames

 L. 678       410  LOAD_CONST               (None,)
              412  LOAD_CODE                <code_object relpath>
              414  LOAD_STR                 'relpath'
              416  MAKE_FUNCTION_1          'default'
              418  STORE_NAME               relpath

 L. 734       420  LOAD_CODE                <code_object commonpath>
              422  LOAD_STR                 'commonpath'
              424  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              426  STORE_NAME               commonpath

 L. 786       428  SETUP_FINALLY       446  'to 446'

 L. 791       430  LOAD_CONST               0
              432  LOAD_CONST               ('_isdir',)
              434  IMPORT_NAME              nt
              436  IMPORT_FROM              _isdir
              438  STORE_NAME               isdir
              440  POP_TOP          
              442  POP_BLOCK        
              444  JUMP_FORWARD        466  'to 466'
            446_0  COME_FROM_FINALLY   428  '428'

 L. 792       446  DUP_TOP          
              448  LOAD_NAME                ImportError
          450_452  <121>               464  ''
              454  POP_TOP          
              456  POP_TOP          
              458  POP_TOP          

 L. 794       460  POP_EXCEPT       
              462  JUMP_FORWARD        466  'to 466'
              464  <48>             
            466_0  COME_FROM           462  '462'
            466_1  COME_FROM           444  '444'

Parse error at or near `CALL_FINALLY' instruction at offset 80

Instruction context:
   
 L.  26        76  BUILD_LIST_0          0 
                  78  LOAD_CONST               ('normcase', 'isabs', 'join', 'splitdrive', 'split', 'splitext', 'basename', 'dirname', 'commonprefix', 'getsize', 'getmtime', 'getatime', 'getctime', 'islink', 'exists', 'lexists', 'isdir', 'isfile', 'ismount', 'expanduser', 'expandvars', 'normpath', 'abspath', 'curdir', 'pardir', 'sep', 'pathsep', 'defpath', 'altsep', 'extsep', 'devnull', 'realpath', 'supports_unicode_filenames', 'relpath', 'samefile', 'sameopenfile', 'samestat', 'commonpath')
->                80  CALL_FINALLY         83  'to 83'
                  82  STORE_NAME               __all__

test/101066.pyc -- 
# decompile failed
