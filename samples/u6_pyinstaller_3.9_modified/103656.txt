
# file test/103656.pyc
# --- This code section failed: ---

 L.   1         0  LOAD_STR                 '\n    ast\n    ~~~\n\n    The `ast` module helps Python applications to process trees of the Python\n    abstract syntax grammar.  The abstract syntax itself might change with\n    each Python release; this module helps to find out programmatically what\n    the current grammar looks like and allows modifications of it.\n\n    An abstract syntax tree can be generated by passing `ast.PyCF_ONLY_AST` as\n    a flag to the `compile()` builtin function or by using the `parse()`\n    function from this module.  The result will be a tree of objects whose\n    classes all inherit from `ast.AST`.\n\n    A modified abstract syntax tree can be compiled into a Python code object\n    using the built-in `compile()` function.\n\n    Additionally various helper functions are provided that make working with\n    the trees simpler.  The main intention of the helper functions and this\n    module in general is to provide an easy to use interface for libraries\n    that work tightly with the python syntax (template engines for example).\n\n\n    :copyright: Copyright 2008 by Armin Ronacher.\n    :license: Python License.\n'
                2  STORE_NAME               __doc__

 L.  27         4  LOAD_CONST               0
                6  LOAD_CONST               None
                8  IMPORT_NAME              sys
               10  STORE_NAME               sys

 L.  28        12  LOAD_CONST               0
               14  LOAD_CONST               ('*',)
               16  IMPORT_NAME              _ast
               18  IMPORT_STAR      

 L.  29        20  LOAD_CONST               0
               22  LOAD_CONST               ('contextmanager', 'nullcontext')
               24  IMPORT_NAME              contextlib
               26  IMPORT_FROM              contextmanager
               28  STORE_NAME               contextmanager
               30  IMPORT_FROM              nullcontext
               32  STORE_NAME               nullcontext
               34  POP_TOP          

 L.  30        36  LOAD_CONST               0
               38  LOAD_CONST               ('IntEnum', 'auto')
               40  IMPORT_NAME              enum
               42  IMPORT_FROM              IntEnum
               44  STORE_NAME               IntEnum
               46  IMPORT_FROM              auto
               48  STORE_NAME               auto
               50  POP_TOP          

 L.  33        52  LOAD_CONST               ('<unknown>', 'exec')

 L.  34        54  LOAD_CONST               False
               56  LOAD_CONST               None

 L.  33        58  LOAD_CONST               ('type_comments', 'feature_version')
               60  BUILD_CONST_KEY_MAP_2     2 
               62  LOAD_CODE                <code_object parse>
               64  LOAD_STR                 'parse'
               66  MAKE_FUNCTION_3          'default, keyword-only'
               68  STORE_NAME               parse

 L.  54        70  LOAD_CODE                <code_object literal_eval>
               72  LOAD_STR                 'literal_eval'
               74  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
               76  STORE_NAME               literal_eval

 L. 108        78  LOAD_CONST               (True, False)
               80  LOAD_CONST               None
               82  LOAD_CONST               ('indent',)
               84  BUILD_CONST_KEY_MAP_1     1 
               86  LOAD_CODE                <code_object dump>
               88  LOAD_STR                 'dump'
               90  MAKE_FUNCTION_3          'default, keyword-only'
               92  STORE_NAME               dump

 L. 175        94  LOAD_CODE                <code_object copy_location>
               96  LOAD_STR                 'copy_location'
               98  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              100  STORE_NAME               copy_location

 L. 192       102  LOAD_CODE                <code_object fix_missing_locations>
              104  LOAD_STR                 'fix_missing_locations'
              106  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              108  STORE_NAME               fix_missing_locations

 L. 227       110  LOAD_CONST               (1,)
              112  LOAD_CODE                <code_object increment_lineno>
              114  LOAD_STR                 'increment_lineno'
              116  MAKE_FUNCTION_1          'default'
              118  STORE_NAME               increment_lineno

 L. 244       120  LOAD_CODE                <code_object iter_fields>
              122  LOAD_STR                 'iter_fields'
              124  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              126  STORE_NAME               iter_fields

 L. 256       128  LOAD_CODE                <code_object iter_child_nodes>
              130  LOAD_STR                 'iter_child_nodes'
              132  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              134  STORE_NAME               iter_child_nodes

 L. 270       136  LOAD_CONST               (True,)
              138  LOAD_CODE                <code_object get_docstring>
              140  LOAD_STR                 'get_docstring'
              142  MAKE_FUNCTION_1          'default'
              144  STORE_NAME               get_docstring

 L. 296       146  LOAD_CODE                <code_object _splitlines_no_ff>
              148  LOAD_STR                 '_splitlines_no_ff'
              150  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              152  STORE_NAME               _splitlines_no_ff

 L. 321       154  LOAD_CODE                <code_object _pad_whitespace>
              156  LOAD_STR                 '_pad_whitespace'
              158  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              160  STORE_NAME               _pad_whitespace

 L. 332       162  LOAD_CONST               False
              164  LOAD_CONST               ('padded',)
              166  BUILD_CONST_KEY_MAP_1     1 
              168  LOAD_CODE                <code_object get_source_segment>
              170  LOAD_STR                 'get_source_segment'
              172  MAKE_FUNCTION_2          'keyword-only'
              174  STORE_NAME               get_source_segment

 L. 369       176  LOAD_CODE                <code_object walk>
              178  LOAD_STR                 'walk'
              180  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              182  STORE_NAME               walk

 L. 383       184  LOAD_BUILD_CLASS 
              186  LOAD_CODE                <code_object NodeVisitor>
              188  LOAD_STR                 'NodeVisitor'
              190  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              192  LOAD_STR                 'NodeVisitor'
              194  LOAD_NAME                object
              196  CALL_FUNCTION_3       3  ''
              198  STORE_NAME               NodeVisitor

 L. 441       200  LOAD_BUILD_CLASS 
              202  LOAD_CODE                <code_object NodeTransformer>
              204  LOAD_STR                 'NodeTransformer'
              206  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              208  LOAD_STR                 'NodeTransformer'
              210  LOAD_NAME                NodeVisitor
              212  CALL_FUNCTION_3       3  ''
              214  STORE_NAME               NodeTransformer

 L. 501       216  LOAD_NAME                hasattr
              218  LOAD_NAME                Constant
              220  LOAD_STR                 'n'
              222  CALL_FUNCTION_2       2  ''
          224_226  POP_JUMP_IF_TRUE    268  'to 268'

 L. 505       228  LOAD_CODE                <code_object _getter>
              230  LOAD_STR                 '_getter'
              232  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              234  STORE_NAME               _getter

 L. 509       236  LOAD_CODE                <code_object _setter>
              238  LOAD_STR                 '_setter'
              240  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              242  STORE_NAME               _setter

 L. 512       244  LOAD_NAME                property
              246  LOAD_NAME                _getter
              248  LOAD_NAME                _setter
              250  CALL_FUNCTION_2       2  ''
              252  LOAD_NAME                Constant
              254  STORE_ATTR               n

 L. 513       256  LOAD_NAME                property
              258  LOAD_NAME                _getter
              260  LOAD_NAME                _setter
              262  CALL_FUNCTION_2       2  ''
              264  LOAD_NAME                Constant
              266  STORE_ATTR               s
            268_0  COME_FROM           224  '224'

 L. 515       268  LOAD_BUILD_CLASS 
              270  LOAD_CODE                <code_object _ABC>
              272  LOAD_STR                 '_ABC'
              274  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              276  LOAD_STR                 '_ABC'
              278  LOAD_NAME                type
              280  CALL_FUNCTION_3       3  ''
              282  STORE_NAME               _ABC

 L. 535       284  LOAD_CODE                <code_object _new>
              286  LOAD_STR                 '_new'
              288  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              290  STORE_NAME               _new

 L. 547       292  LOAD_BUILD_CLASS 
              294  LOAD_CODE                <code_object Num>
              296  LOAD_STR                 'Num'
              298  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              300  LOAD_STR                 'Num'
              302  LOAD_NAME                Constant
              304  LOAD_NAME                _ABC
              306  LOAD_CONST               ('metaclass',)
              308  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              310  STORE_NAME               Num

 L. 551       312  LOAD_BUILD_CLASS 
              314  LOAD_CODE                <code_object Str>
              316  LOAD_STR                 'Str'
              318  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              320  LOAD_STR                 'Str'
              322  LOAD_NAME                Constant
              324  LOAD_NAME                _ABC
              326  LOAD_CONST               ('metaclass',)
              328  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              330  STORE_NAME               Str

 L. 555       332  LOAD_BUILD_CLASS 
              334  LOAD_CODE                <code_object Bytes>
              336  LOAD_STR                 'Bytes'
              338  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              340  LOAD_STR                 'Bytes'
              342  LOAD_NAME                Constant
              344  LOAD_NAME                _ABC
              346  LOAD_CONST               ('metaclass',)
              348  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              350  STORE_NAME               Bytes

 L. 559       352  LOAD_BUILD_CLASS 
              354  LOAD_CODE                <code_object NameConstant>
              356  LOAD_STR                 'NameConstant'
              358  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              360  LOAD_STR                 'NameConstant'
              362  LOAD_NAME                Constant
              364  LOAD_NAME                _ABC
              366  LOAD_CONST               ('metaclass',)
              368  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              370  STORE_NAME               NameConstant

 L. 562       372  LOAD_BUILD_CLASS 
              374  LOAD_CODE                <code_object Ellipsis>
              376  LOAD_STR                 'Ellipsis'
              378  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              380  LOAD_STR                 'Ellipsis'
              382  LOAD_NAME                Constant
              384  LOAD_NAME                _ABC
              386  LOAD_CONST               ('metaclass',)
              388  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              390  STORE_NAME               Ellipsis

 L. 571       392  LOAD_NAME                Num
              394  LOAD_NAME                int
              396  LOAD_NAME                float
              398  LOAD_NAME                complex
              400  BUILD_TUPLE_3         3 

 L. 572       402  LOAD_NAME                Str
              404  LOAD_NAME                str
              406  BUILD_TUPLE_1         1 

 L. 573       408  LOAD_NAME                Bytes
              410  LOAD_NAME                bytes
              412  BUILD_TUPLE_1         1 

 L. 574       414  LOAD_NAME                NameConstant
              416  LOAD_NAME                type
              418  LOAD_CONST               None
              420  CALL_FUNCTION_1       1  ''
              422  LOAD_NAME                bool
              424  BUILD_TUPLE_2         2 

 L. 575       426  LOAD_NAME                Ellipsis
              428  LOAD_NAME                type
              430  LOAD_CONST               Ellipsis
              432  CALL_FUNCTION_1       1  ''
              434  BUILD_TUPLE_1         1 

 L. 570       436  BUILD_MAP_5           5 
              438  STORE_NAME               _const_types

 L. 578       440  LOAD_NAME                Num
              442  LOAD_NAME                bool
              444  BUILD_TUPLE_1         1 

 L. 577       446  BUILD_MAP_1           1 
              448  STORE_NAME               _const_types_not

 L. 582       450  LOAD_NAME                bool
              452  LOAD_STR                 'NameConstant'

 L. 583       454  LOAD_NAME                type
              456  LOAD_CONST               None
              458  CALL_FUNCTION_1       1  ''
              460  LOAD_STR                 'NameConstant'

 L. 584       462  LOAD_NAME                int
              464  LOAD_STR                 'Num'

 L. 585       466  LOAD_NAME                float
              468  LOAD_STR                 'Num'

 L. 586       470  LOAD_NAME                complex
              472  LOAD_STR                 'Num'

 L. 587       474  LOAD_NAME                str
              476  LOAD_STR                 'Str'

 L. 588       478  LOAD_NAME                bytes
              480  LOAD_STR                 'Bytes'

 L. 589       482  LOAD_NAME                type
              484  LOAD_CONST               Ellipsis
              486  CALL_FUNCTION_1       1  ''
              488  LOAD_STR                 'Ellipsis'

 L. 581       490  BUILD_MAP_8           8 
              492  STORE_NAME               _const_node_type_names

 L. 592       494  LOAD_BUILD_CLASS 
              496  LOAD_CODE                <code_object slice>
              498  LOAD_STR                 'slice'
              500  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              502  LOAD_STR                 'slice'
              504  LOAD_NAME                AST
              506  CALL_FUNCTION_3       3  ''
              508  STORE_NAME               slice

 L. 595       510  LOAD_BUILD_CLASS 
              512  LOAD_CODE                <code_object Index>
              514  LOAD_STR                 'Index'
              516  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              518  LOAD_STR                 'Index'
              520  LOAD_NAME                slice
              522  CALL_FUNCTION_3       3  ''
              524  STORE_NAME               Index

 L. 600       526  LOAD_BUILD_CLASS 
              528  LOAD_CODE                <code_object ExtSlice>
              530  LOAD_STR                 'ExtSlice'
              532  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              534  LOAD_STR                 'ExtSlice'
              536  LOAD_NAME                slice
              538  CALL_FUNCTION_3       3  ''
              540  STORE_NAME               ExtSlice

 L. 606       542  LOAD_NAME                hasattr
              544  LOAD_NAME                Tuple
              546  LOAD_STR                 'dims'
              548  CALL_FUNCTION_2       2  ''
          550_552  POP_JUMP_IF_TRUE    582  'to 582'

 L. 610       554  LOAD_CODE                <code_object _dims_getter>
              556  LOAD_STR                 '_dims_getter'
              558  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              560  STORE_NAME               _dims_getter

 L. 614       562  LOAD_CODE                <code_object _dims_setter>
              564  LOAD_STR                 '_dims_setter'
              566  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              568  STORE_NAME               _dims_setter

 L. 617       570  LOAD_NAME                property
              572  LOAD_NAME                _dims_getter
              574  LOAD_NAME                _dims_setter
              576  CALL_FUNCTION_2       2  ''
              578  LOAD_NAME                Tuple
              580  STORE_ATTR               dims
            582_0  COME_FROM           550  '550'

 L. 619       582  LOAD_BUILD_CLASS 
              584  LOAD_CODE                <code_object Suite>
              586  LOAD_STR                 'Suite'
              588  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              590  LOAD_STR                 'Suite'
              592  LOAD_NAME                mod
              594  CALL_FUNCTION_3       3  ''
              596  STORE_NAME               Suite

 L. 622       598  LOAD_BUILD_CLASS 
              600  LOAD_CODE                <code_object AugLoad>
              602  LOAD_STR                 'AugLoad'
              604  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              606  LOAD_STR                 'AugLoad'
              608  LOAD_NAME                expr_context
              610  CALL_FUNCTION_3       3  ''
              612  STORE_NAME               AugLoad

 L. 625       614  LOAD_BUILD_CLASS 
              616  LOAD_CODE                <code_object AugStore>
              618  LOAD_STR                 'AugStore'
              620  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              622  LOAD_STR                 'AugStore'
              624  LOAD_NAME                expr_context
              626  CALL_FUNCTION_3       3  ''
              628  STORE_NAME               AugStore

 L. 628       630  LOAD_BUILD_CLASS 
              632  LOAD_CODE                <code_object Param>
              634  LOAD_STR                 'Param'
              636  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              638  LOAD_STR                 'Param'
              640  LOAD_NAME                expr_context
              642  CALL_FUNCTION_3       3  ''
              644  STORE_NAME               Param

 L. 634       646  LOAD_STR                 '1e'
              648  LOAD_NAME                repr
              650  LOAD_NAME                sys
              652  LOAD_ATTR                float_info
              654  LOAD_ATTR                max_10_exp
              656  LOAD_CONST               1
              658  BINARY_ADD       
              660  CALL_FUNCTION_1       1  ''
              662  BINARY_ADD       
              664  STORE_NAME               _INFSTR

 L. 636       666  LOAD_BUILD_CLASS 
              668  LOAD_CODE                <code_object _Precedence>
              670  LOAD_STR                 '_Precedence'
              672  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              674  LOAD_STR                 '_Precedence'
              676  LOAD_NAME                IntEnum
              678  CALL_FUNCTION_3       3  ''
              680  STORE_NAME               _Precedence

 L. 666       682  LOAD_CONST               ("'", '"')
              684  STORE_NAME               _SINGLE_QUOTES

 L. 667       686  LOAD_CONST               ('"""', "'''")
              688  STORE_NAME               _MULTI_QUOTES

 L. 668       690  BUILD_LIST_0          0 
              692  LOAD_NAME                _SINGLE_QUOTES
              694  CALL_FINALLY        697  'to 697'
              696  LOAD_NAME                _MULTI_QUOTES
              698  CALL_FINALLY        701  'to 701'
              700  WITH_CLEANUP_FINISH
              702  STORE_NAME               _ALL_QUOTES

 L. 670       704  LOAD_BUILD_CLASS 
              706  LOAD_CODE                <code_object _Unparser>
              708  LOAD_STR                 '_Unparser'
              710  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              712  LOAD_STR                 '_Unparser'
              714  LOAD_NAME                NodeVisitor
              716  CALL_FUNCTION_3       3  ''
              718  STORE_NAME               _Unparser

 L.1570       720  LOAD_CODE                <code_object unparse>
              722  LOAD_STR                 'unparse'
              724  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              726  STORE_NAME               unparse

 L.1575       728  LOAD_CODE                <code_object main>
              730  LOAD_STR                 'main'
              732  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
              734  STORE_NAME               main

 L.1599       736  LOAD_NAME                __name__
              738  LOAD_STR                 '__main__'
              740  COMPARE_OP               ==
          742_744  POP_JUMP_IF_FALSE   752  'to 752'

 L.1600       746  LOAD_NAME                main
              748  CALL_FUNCTION_0       0  ''
              750  POP_TOP          
            752_0  COME_FROM           742  '742'

Parse error at or near `CALL_FINALLY' instruction at offset 694

Instruction context:
   
 L. 668       690  BUILD_LIST_0          0 
                 692  LOAD_NAME                _SINGLE_QUOTES
->               694  CALL_FINALLY        697  'to 697'
                 696  LOAD_NAME                _MULTI_QUOTES
                 698  CALL_FINALLY        701  'to 701'
                 700  WITH_CLEANUP_FINISH
                 702  STORE_NAME               _ALL_QUOTES

test/103656.pyc -- 
# decompile failed
