# uncompyle6 version 3.7.4
# Python bytecode 3.8 (3413)
# Decompiled from: Python 3.8.11 (default, Jun 29 2021, 19:54:56) 
# [GCC 8.3.0]
# Embedded file name: ast.py
"""
    ast
    ~~~

    The `ast` module helps Python applications to process trees of the Python
    abstract syntax grammar.  The abstract syntax itself might change with
    each Python release; this module helps to find out programmatically what
    the current grammar looks like and allows modifications of it.

    An abstract syntax tree can be generated by passing `ast.PyCF_ONLY_AST` as
    a flag to the `compile()` builtin function or by using the `parse()`
    function from this module.  The result will be a tree of objects whose
    classes all inherit from `ast.AST`.

    A modified abstract syntax tree can be compiled into a Python code object
    using the built-in `compile()` function.

    Additionally various helper functions are provided that make working with
    the trees simpler.  The main intention of the helper functions and this
    module in general is to provide an easy to use interface for libraries
    that work tightly with the python syntax (template engines for example).

    :copyright: Copyright 2008 by Armin Ronacher.
    :license: Python License.
"""
import sys
from _ast import *
from contextlib import contextmanager, nullcontext
from enum import IntEnum, auto

def parse--- This code section failed: ---

 L.  40         0  LOAD_GLOBAL              PyCF_ONLY_AST
                2  STORE_FAST               'flags'

 L.  41         4  LOAD_FAST                'type_comments'
                6  POP_JUMP_IF_FALSE    16  'to 16'

 L.  42         8  LOAD_FAST                'flags'
               10  LOAD_GLOBAL              PyCF_TYPE_COMMENTS
               12  INPLACE_OR       
               14  STORE_FAST               'flags'
             16_0  COME_FROM             6  '6'

 L.  43        16  LOAD_GLOBAL              isinstance
               18  LOAD_FAST                'feature_version'
               20  LOAD_GLOBAL              tuple
               22  CALL_FUNCTION_2       2  ''
               24  POP_JUMP_IF_FALSE    52  'to 52'

 L.  44        26  LOAD_FAST                'feature_version'
               28  UNPACK_SEQUENCE_2     2 
               30  STORE_FAST               'major'
               32  STORE_FAST               'minor'

 L.  45        34  LOAD_FAST                'major'
               36  LOAD_CONST               3
               38  COMPARE_OP               ==
               40  POP_JUMP_IF_TRUE     46  'to 46'
               42  <74>             
               44  RAISE_VARARGS_1       1  'exception instance'
             46_0  COME_FROM            40  '40'

 L.  46        46  LOAD_FAST                'minor'
               48  STORE_FAST               'feature_version'
               50  JUMP_FORWARD         64  'to 64'
             52_0  COME_FROM            24  '24'

 L.  47        52  LOAD_FAST                'feature_version'
               54  LOAD_CONST               None
               56  <117>                 0  ''
               58  POP_JUMP_IF_FALSE    64  'to 64'

 L.  48        60  LOAD_CONST               -1
               62  STORE_FAST               'feature_version'
             64_0  COME_FROM            58  '58'
             64_1  COME_FROM            50  '50'

 L.  50        64  LOAD_GLOBAL              compile
               66  LOAD_FAST                'source'
               68  LOAD_FAST                'filename'
               70  LOAD_FAST                'mode'
               72  LOAD_FAST                'flags'

 L.  51        74  LOAD_FAST                'feature_version'

 L.  50        76  LOAD_CONST               ('_feature_version',)
               78  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
               80  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<74>' instruction at offset 42


def literal_eval(node_or_string):
    """
    Safely evaluate an expression node or a string containing a Python
    expression.  The string or node provided may only consist of the following
    Python literal structures: strings, bytes, numbers, tuples, lists, dicts,
    sets, booleans, and None.
    """
    if isinstance(node_or_string, str):
        node_or_string = parse(node_or_string, mode='eval')
    if isinstance(node_or_string, Expression):
        node_or_string = node_or_string.body

    def _raise_malformed_node(node):
        raise ValueError(f"malformed node or string: {node!r}")

    def _convert_num--- This code section failed: ---

 L.  68         0  LOAD_GLOBAL              isinstance
                2  LOAD_FAST                'node'
                4  LOAD_GLOBAL              Constant
                6  CALL_FUNCTION_2       2  ''
                8  POP_JUMP_IF_FALSE    30  'to 30'
               10  LOAD_GLOBAL              type
               12  LOAD_FAST                'node'
               14  LOAD_ATTR                value
               16  CALL_FUNCTION_1       1  ''
               18  LOAD_GLOBAL              int
               20  LOAD_GLOBAL              float
               22  LOAD_GLOBAL              complex
               24  BUILD_TUPLE_3         3 
               26  <118>                 1  ''
               28  POP_JUMP_IF_FALSE    38  'to 38'
             30_0  COME_FROM             8  '8'

 L.  69        30  LOAD_DEREF               '_raise_malformed_node'
               32  LOAD_FAST                'node'
               34  CALL_FUNCTION_1       1  ''
               36  POP_TOP          
             38_0  COME_FROM            28  '28'

 L.  70        38  LOAD_FAST                'node'
               40  LOAD_ATTR                value
               42  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `None' instruction at offset -1

    def _convert_signed_num(node):
        if isinstance(node, UnaryOp):
            if isinstance(node.op, (UAdd, USub)):
                operand = _convert_num(node.operand)
                if isinstance(node.op, UAdd):
                    return +operand
                return -operand
        return _convert_num(node)

    def _convert(node):
        if isinstance(node, Constant):
            return node.value
            if isinstance(node, Tuple):
                return tuple(map(_convert, node.elts))
            if isinstance(node, List):
                return list(map(_convert, node.elts))
            if isinstance(node, Set):
                return set(map(_convert, node.elts))
            if isinstance(node, Call):
                if isinstance(node.func, Name):
                    if node.func.id == 'set':
                        if node.args == node.keywords == []:
                            return set()
            if isinstance(node, Dict):
                if len(node.keys) != len(node.values):
                    _raise_malformed_node(node)
                return dict(zip(map(_convert, node.keys), map(_convert, node.values)))
        elif isinstance(node, BinOp):
            if isinstance(node.op, (Add, Sub)):
                left = _convert_signed_num(node.left)
                right = _convert_num(node.right)
                if isinstance(left, (int, float)):
                    if isinstance(right, complex):
                        if isinstance(node.op, Add):
                            return left + right
                        return left - right
        return _convert_signed_num(node)

    return _convert(node_or_string)


def dump--- This code section failed: ---

 L. 120         0  LOAD_CONST               (0,)
                2  LOAD_CLOSURE             '_format'
                4  LOAD_CLOSURE             'annotate_fields'
                6  LOAD_CLOSURE             'include_attributes'
                8  LOAD_CLOSURE             'indent'
               10  BUILD_TUPLE_4         4 
               12  LOAD_CODE                <code_object _format>
               14  LOAD_STR                 'dump.<locals>._format'
               16  MAKE_FUNCTION_9          'default, closure'
               18  STORE_DEREF              '_format'

 L. 168        20  LOAD_GLOBAL              isinstance
               22  LOAD_FAST                'node'
               24  LOAD_GLOBAL              AST
               26  CALL_FUNCTION_2       2  ''
               28  POP_JUMP_IF_TRUE     46  'to 46'

 L. 169        30  LOAD_GLOBAL              TypeError
               32  LOAD_STR                 'expected AST, got %r'
               34  LOAD_FAST                'node'
               36  LOAD_ATTR                __class__
               38  LOAD_ATTR                __name__
               40  BINARY_MODULO    
               42  CALL_FUNCTION_1       1  ''
               44  RAISE_VARARGS_1       1  'exception instance'
             46_0  COME_FROM            28  '28'

 L. 170        46  LOAD_DEREF               'indent'
               48  LOAD_CONST               None
               50  <117>                 1  ''
               52  POP_JUMP_IF_FALSE    72  'to 72'
               54  LOAD_GLOBAL              isinstance
               56  LOAD_DEREF               'indent'
               58  LOAD_GLOBAL              str
               60  CALL_FUNCTION_2       2  ''
               62  POP_JUMP_IF_TRUE     72  'to 72'

 L. 171        64  LOAD_STR                 ' '
               66  LOAD_DEREF               'indent'
               68  BINARY_MULTIPLY  
               70  STORE_DEREF              'indent'
             72_0  COME_FROM            62  '62'
             72_1  COME_FROM            52  '52'

 L. 172        72  LOAD_DEREF               '_format'
               74  LOAD_FAST                'node'
               76  CALL_FUNCTION_1       1  ''
               78  LOAD_CONST               0
               80  BINARY_SUBSCR    
               82  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<117>' instruction at offset 50


def copy_location--- This code section failed: ---

 L. 180         0  LOAD_CONST               ('lineno', 'col_offset', 'end_lineno', 'end_col_offset')
                2  GET_ITER         
              4_0  COME_FROM            66  '66'
              4_1  COME_FROM            56  '56'
              4_2  COME_FROM            26  '26'
              4_3  COME_FROM            16  '16'
                4  FOR_ITER             82  'to 82'
                6  STORE_FAST               'attr'

 L. 181         8  LOAD_FAST                'attr'
               10  LOAD_FAST                'old_node'
               12  LOAD_ATTR                _attributes
               14  <118>                 0  ''
               16  POP_JUMP_IF_FALSE     4  'to 4'
               18  LOAD_FAST                'attr'
               20  LOAD_FAST                'new_node'
               22  LOAD_ATTR                _attributes
               24  <118>                 0  ''
               26  POP_JUMP_IF_FALSE     4  'to 4'

 L. 182        28  LOAD_GLOBAL              getattr
               30  LOAD_FAST                'old_node'
               32  LOAD_FAST                'attr'
               34  LOAD_CONST               None
               36  CALL_FUNCTION_3       3  ''
               38  STORE_FAST               'value'

 L. 185        40  LOAD_FAST                'value'
               42  LOAD_CONST               None
               44  <117>                 1  ''
               46  POP_JUMP_IF_TRUE     68  'to 68'

 L. 186        48  LOAD_GLOBAL              hasattr
               50  LOAD_FAST                'old_node'
               52  LOAD_FAST                'attr'
               54  CALL_FUNCTION_2       2  ''

 L. 185        56  POP_JUMP_IF_FALSE     4  'to 4'

 L. 186        58  LOAD_FAST                'attr'
               60  LOAD_METHOD              startswith
               62  LOAD_STR                 'end_'
               64  CALL_METHOD_1         1  ''

 L. 185        66  POP_JUMP_IF_FALSE     4  'to 4'
             68_0  COME_FROM            46  '46'

 L. 188        68  LOAD_GLOBAL              setattr
               70  LOAD_FAST                'new_node'
               72  LOAD_FAST                'attr'
               74  LOAD_FAST                'value'
               76  CALL_FUNCTION_3       3  ''
               78  POP_TOP          
               80  JUMP_BACK             4  'to 4'

 L. 189        82  LOAD_FAST                'new_node'
               84  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<118>' instruction at offset 14


def fix_missing_locations(node):
    """
    When you compile a node tree with compile(), the compiler expects lineno and
    col_offset attributes for every node that supports them.  This is rather
    tedious to fill in for generated nodes, so this helper adds these attributes
    recursively where not already set, by setting them to the values of the
    parent node.  It works recursively starting at *node*.
    """

    def _fix--- This code section failed: ---

 L. 201         0  LOAD_STR                 'lineno'
                2  LOAD_FAST                'node'
                4  LOAD_ATTR                _attributes
                6  <118>                 0  ''
                8  POP_JUMP_IF_FALSE    34  'to 34'

 L. 202        10  LOAD_GLOBAL              hasattr
               12  LOAD_FAST                'node'
               14  LOAD_STR                 'lineno'
               16  CALL_FUNCTION_2       2  ''
               18  POP_JUMP_IF_TRUE     28  'to 28'

 L. 203        20  LOAD_FAST                'lineno'
               22  LOAD_FAST                'node'
               24  STORE_ATTR               lineno
               26  JUMP_FORWARD         34  'to 34'
             28_0  COME_FROM            18  '18'

 L. 205        28  LOAD_FAST                'node'
               30  LOAD_ATTR                lineno
               32  STORE_FAST               'lineno'
             34_0  COME_FROM            26  '26'
             34_1  COME_FROM             8  '8'

 L. 206        34  LOAD_STR                 'end_lineno'
               36  LOAD_FAST                'node'
               38  LOAD_ATTR                _attributes
               40  <118>                 0  ''
               42  POP_JUMP_IF_FALSE    74  'to 74'

 L. 207        44  LOAD_GLOBAL              getattr
               46  LOAD_FAST                'node'
               48  LOAD_STR                 'end_lineno'
               50  LOAD_CONST               None
               52  CALL_FUNCTION_3       3  ''
               54  LOAD_CONST               None
               56  <117>                 0  ''
               58  POP_JUMP_IF_FALSE    68  'to 68'

 L. 208        60  LOAD_FAST                'end_lineno'
               62  LOAD_FAST                'node'
               64  STORE_ATTR               end_lineno
               66  JUMP_FORWARD         74  'to 74'
             68_0  COME_FROM            58  '58'

 L. 210        68  LOAD_FAST                'node'
               70  LOAD_ATTR                end_lineno
               72  STORE_FAST               'end_lineno'
             74_0  COME_FROM            66  '66'
             74_1  COME_FROM            42  '42'

 L. 211        74  LOAD_STR                 'col_offset'
               76  LOAD_FAST                'node'
               78  LOAD_ATTR                _attributes
               80  <118>                 0  ''
               82  POP_JUMP_IF_FALSE   108  'to 108'

 L. 212        84  LOAD_GLOBAL              hasattr
               86  LOAD_FAST                'node'
               88  LOAD_STR                 'col_offset'
               90  CALL_FUNCTION_2       2  ''
               92  POP_JUMP_IF_TRUE    102  'to 102'

 L. 213        94  LOAD_FAST                'col_offset'
               96  LOAD_FAST                'node'
               98  STORE_ATTR               col_offset
              100  JUMP_FORWARD        108  'to 108'
            102_0  COME_FROM            92  '92'

 L. 215       102  LOAD_FAST                'node'
              104  LOAD_ATTR                col_offset
              106  STORE_FAST               'col_offset'
            108_0  COME_FROM           100  '100'
            108_1  COME_FROM            82  '82'

 L. 216       108  LOAD_STR                 'end_col_offset'
              110  LOAD_FAST                'node'
              112  LOAD_ATTR                _attributes
              114  <118>                 0  ''
              116  POP_JUMP_IF_FALSE   148  'to 148'

 L. 217       118  LOAD_GLOBAL              getattr
              120  LOAD_FAST                'node'
              122  LOAD_STR                 'end_col_offset'
              124  LOAD_CONST               None
              126  CALL_FUNCTION_3       3  ''
              128  LOAD_CONST               None
              130  <117>                 0  ''
              132  POP_JUMP_IF_FALSE   142  'to 142'

 L. 218       134  LOAD_FAST                'end_col_offset'
              136  LOAD_FAST                'node'
              138  STORE_ATTR               end_col_offset
              140  JUMP_FORWARD        148  'to 148'
            142_0  COME_FROM           132  '132'

 L. 220       142  LOAD_FAST                'node'
              144  LOAD_ATTR                end_col_offset
              146  STORE_FAST               'end_col_offset'
            148_0  COME_FROM           140  '140'
            148_1  COME_FROM           116  '116'

 L. 221       148  LOAD_GLOBAL              iter_child_nodes
              150  LOAD_FAST                'node'
              152  CALL_FUNCTION_1       1  ''
              154  GET_ITER         
              156  FOR_ITER            178  'to 178'
              158  STORE_FAST               'child'

 L. 222       160  LOAD_DEREF               '_fix'
              162  LOAD_FAST                'child'
              164  LOAD_FAST                'lineno'
              166  LOAD_FAST                'col_offset'
              168  LOAD_FAST                'end_lineno'
              170  LOAD_FAST                'end_col_offset'
              172  CALL_FUNCTION_5       5  ''
              174  POP_TOP          
              176  JUMP_BACK           156  'to 156'

Parse error at or near `None' instruction at offset -1

    _fix(node, 1, 0, 1, 0)
    return node


def increment_lineno--- This code section failed: ---

 L. 233         0  LOAD_GLOBAL              walk
                2  LOAD_FAST                'node'
                4  CALL_FUNCTION_1       1  ''
                6  GET_ITER         
              8_0  COME_FROM            68  '68'
              8_1  COME_FROM            48  '48'
                8  FOR_ITER             82  'to 82'
               10  STORE_FAST               'child'

 L. 234        12  LOAD_STR                 'lineno'
               14  LOAD_FAST                'child'
               16  LOAD_ATTR                _attributes
               18  <118>                 0  ''
               20  POP_JUMP_IF_FALSE    40  'to 40'

 L. 235        22  LOAD_GLOBAL              getattr
               24  LOAD_FAST                'child'
               26  LOAD_STR                 'lineno'
               28  LOAD_CONST               0
               30  CALL_FUNCTION_3       3  ''
               32  LOAD_FAST                'n'
               34  BINARY_ADD       
               36  LOAD_FAST                'child'
               38  STORE_ATTR               lineno
             40_0  COME_FROM            20  '20'

 L. 237        40  LOAD_STR                 'end_lineno'
               42  LOAD_FAST                'child'
               44  LOAD_ATTR                _attributes
               46  <118>                 0  ''

 L. 236        48  POP_JUMP_IF_FALSE     8  'to 8'

 L. 238        50  LOAD_GLOBAL              getattr
               52  LOAD_FAST                'child'
               54  LOAD_STR                 'end_lineno'
               56  LOAD_CONST               0
               58  CALL_FUNCTION_3       3  ''
               60  DUP_TOP          
               62  STORE_FAST               'end_lineno'
               64  LOAD_CONST               None
               66  <117>                 1  ''

 L. 236        68  POP_JUMP_IF_FALSE     8  'to 8'

 L. 240        70  LOAD_FAST                'end_lineno'
               72  LOAD_FAST                'n'
               74  BINARY_ADD       
               76  LOAD_FAST                'child'
               78  STORE_ATTR               end_lineno
               80  JUMP_BACK             8  'to 8'

 L. 241        82  LOAD_FAST                'node'
               84  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<118>' instruction at offset 18


def iter_fields--- This code section failed: ---

 L. 249         0  LOAD_FAST                'node'
                2  LOAD_ATTR                _fields
                4  GET_ITER         
                6  FOR_ITER             52  'to 52'
                8  STORE_FAST               'field'

 L. 250        10  SETUP_FINALLY        32  'to 32'

 L. 251        12  LOAD_FAST                'field'
               14  LOAD_GLOBAL              getattr
               16  LOAD_FAST                'node'
               18  LOAD_FAST                'field'
               20  CALL_FUNCTION_2       2  ''
               22  BUILD_TUPLE_2         2 
               24  YIELD_VALUE      
               26  POP_TOP          
               28  POP_BLOCK        
               30  JUMP_BACK             6  'to 6'
             32_0  COME_FROM_FINALLY    10  '10'

 L. 252        32  DUP_TOP          
               34  LOAD_GLOBAL              AttributeError
               36  <121>                48  ''
               38  POP_TOP          
               40  POP_TOP          
               42  POP_TOP          

 L. 253        44  POP_EXCEPT       
               46  JUMP_BACK             6  'to 6'
               48  <48>             
               50  JUMP_BACK             6  'to 6'

Parse error at or near `<121>' instruction at offset 36


def iter_child_nodes(node):
    """
    Yield all direct child nodes of *node*, that is, all fields that are nodes
    and all items of fields that are lists of nodes.
    """
    for name, field in iter_fields(node):
        if isinstance(field, AST):
            (yield field)
        elif isinstance(field, list):
            for item in field:
                if isinstance(item, AST):
                    (yield item)


def get_docstring(node, clean=True):
    """
    Return the docstring for the given node or None if no docstring can
    be found.  If the node provided does not have docstrings a TypeError
    will be raised.

    If *clean* is `True`, all tabs are expanded to spaces and any whitespace
    that can be uniformly removed from the second line onwards is removed.
    """
    if not isinstance(node, (AsyncFunctionDef, FunctionDef, ClassDef, Module)):
        raise TypeError("%r can't have docstrings" % node.__class__.__name__)
    elif node.body:
        if not isinstance(node.body[0], Expr):
            return
        node = node.body[0].value
        if isinstance(node, Str):
            text = node.s
    elif isinstance(node, Constant) and isinstance(node.value, str):
        text = node.value
    else:
        return
    if clean:
        import inspect
        text = inspect.cleandoctext
    return text


def _splitlines_no_ff--- This code section failed: ---

 L. 301         0  LOAD_CONST               0
                2  STORE_FAST               'idx'

 L. 302         4  BUILD_LIST_0          0 
                6  STORE_FAST               'lines'

 L. 303         8  LOAD_STR                 ''
               10  STORE_FAST               'next_line'
             12_0  COME_FROM           102  '102'

 L. 304        12  LOAD_FAST                'idx'
               14  LOAD_GLOBAL              len
               16  LOAD_FAST                'source'
               18  CALL_FUNCTION_1       1  ''
               20  COMPARE_OP               <
               22  POP_JUMP_IF_FALSE   120  'to 120'

 L. 305        24  LOAD_FAST                'source'
               26  LOAD_FAST                'idx'
               28  BINARY_SUBSCR    
               30  STORE_FAST               'c'

 L. 306        32  LOAD_FAST                'next_line'
               34  LOAD_FAST                'c'
               36  INPLACE_ADD      
               38  STORE_FAST               'next_line'

 L. 307        40  LOAD_FAST                'idx'
               42  LOAD_CONST               1
               44  INPLACE_ADD      
               46  STORE_FAST               'idx'

 L. 309        48  LOAD_FAST                'c'
               50  LOAD_STR                 '\r'
               52  COMPARE_OP               ==
               54  POP_JUMP_IF_FALSE    96  'to 96'
               56  LOAD_FAST                'idx'
               58  LOAD_GLOBAL              len
               60  LOAD_FAST                'source'
               62  CALL_FUNCTION_1       1  ''
               64  COMPARE_OP               <
               66  POP_JUMP_IF_FALSE    96  'to 96'
               68  LOAD_FAST                'source'
               70  LOAD_FAST                'idx'
               72  BINARY_SUBSCR    
               74  LOAD_STR                 '\n'
               76  COMPARE_OP               ==
               78  POP_JUMP_IF_FALSE    96  'to 96'

 L. 310        80  LOAD_FAST                'next_line'
               82  LOAD_STR                 '\n'
               84  INPLACE_ADD      
               86  STORE_FAST               'next_line'

 L. 311        88  LOAD_FAST                'idx'
               90  LOAD_CONST               1
               92  INPLACE_ADD      
               94  STORE_FAST               'idx'
             96_0  COME_FROM            78  '78'
             96_1  COME_FROM            66  '66'
             96_2  COME_FROM            54  '54'

 L. 312        96  LOAD_FAST                'c'
               98  LOAD_STR                 '\r\n'
              100  <118>                 0  ''
              102  POP_JUMP_IF_FALSE    12  'to 12'

 L. 313       104  LOAD_FAST                'lines'
              106  LOAD_METHOD              append
              108  LOAD_FAST                'next_line'
              110  CALL_METHOD_1         1  ''
              112  POP_TOP          

 L. 314       114  LOAD_STR                 ''
              116  STORE_FAST               'next_line'
              118  JUMP_BACK            12  'to 12'
            120_0  COME_FROM            22  '22'

 L. 316       120  LOAD_FAST                'next_line'
              122  POP_JUMP_IF_FALSE   134  'to 134'

 L. 317       124  LOAD_FAST                'lines'
              126  LOAD_METHOD              append
              128  LOAD_FAST                'next_line'
              130  CALL_METHOD_1         1  ''
              132  POP_TOP          
            134_0  COME_FROM           122  '122'

 L. 318       134  LOAD_FAST                'lines'
              136  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<118>' instruction at offset 100


def _pad_whitespace--- This code section failed: ---

 L. 323         0  LOAD_STR                 ''
                2  STORE_FAST               'result'

 L. 324         4  LOAD_FAST                'source'
                6  GET_ITER         
                8  FOR_ITER             40  'to 40'
               10  STORE_FAST               'c'

 L. 325        12  LOAD_FAST                'c'
               14  LOAD_STR                 '\x0c\t'
               16  <118>                 0  ''
               18  POP_JUMP_IF_FALSE    30  'to 30'

 L. 326        20  LOAD_FAST                'result'
               22  LOAD_FAST                'c'
               24  INPLACE_ADD      
               26  STORE_FAST               'result'
               28  JUMP_BACK             8  'to 8'
             30_0  COME_FROM            18  '18'

 L. 328        30  LOAD_FAST                'result'
               32  LOAD_STR                 ' '
               34  INPLACE_ADD      
               36  STORE_FAST               'result'
               38  JUMP_BACK             8  'to 8'

 L. 329        40  LOAD_FAST                'result'
               42  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<118>' instruction at offset 16


def get_source_segment--- This code section failed: ---

 L. 341         0  SETUP_FINALLY        64  'to 64'

 L. 342         2  LOAD_FAST                'node'
                4  LOAD_ATTR                end_lineno
                6  LOAD_CONST               None
                8  <117>                 0  ''
               10  POP_JUMP_IF_TRUE     22  'to 22'
               12  LOAD_FAST                'node'
               14  LOAD_ATTR                end_col_offset
               16  LOAD_CONST               None
               18  <117>                 0  ''
               20  POP_JUMP_IF_FALSE    28  'to 28'
             22_0  COME_FROM            10  '10'

 L. 343        22  POP_BLOCK        
               24  LOAD_CONST               None
               26  RETURN_VALUE     
             28_0  COME_FROM            20  '20'

 L. 344        28  LOAD_FAST                'node'
               30  LOAD_ATTR                lineno
               32  LOAD_CONST               1
               34  BINARY_SUBTRACT  
               36  STORE_FAST               'lineno'

 L. 345        38  LOAD_FAST                'node'
               40  LOAD_ATTR                end_lineno
               42  LOAD_CONST               1
               44  BINARY_SUBTRACT  
               46  STORE_FAST               'end_lineno'

 L. 346        48  LOAD_FAST                'node'
               50  LOAD_ATTR                col_offset
               52  STORE_FAST               'col_offset'

 L. 347        54  LOAD_FAST                'node'
               56  LOAD_ATTR                end_col_offset
               58  STORE_FAST               'end_col_offset'
               60  POP_BLOCK        
               62  JUMP_FORWARD         84  'to 84'
             64_0  COME_FROM_FINALLY     0  '0'

 L. 348        64  DUP_TOP          
               66  LOAD_GLOBAL              AttributeError
               68  <121>                82  ''
               70  POP_TOP          
               72  POP_TOP          
               74  POP_TOP          

 L. 349        76  POP_EXCEPT       
               78  LOAD_CONST               None
               80  RETURN_VALUE     
               82  <48>             
             84_0  COME_FROM            62  '62'

 L. 351        84  LOAD_GLOBAL              _splitlines_no_ff
               86  LOAD_FAST                'source'
               88  CALL_FUNCTION_1       1  ''
               90  STORE_FAST               'lines'

 L. 352        92  LOAD_FAST                'end_lineno'
               94  LOAD_FAST                'lineno'
               96  COMPARE_OP               ==
               98  POP_JUMP_IF_FALSE   124  'to 124'

 L. 353       100  LOAD_FAST                'lines'
              102  LOAD_FAST                'lineno'
              104  BINARY_SUBSCR    
              106  LOAD_METHOD              encode
              108  CALL_METHOD_0         0  ''
              110  LOAD_FAST                'col_offset'
              112  LOAD_FAST                'end_col_offset'
              114  BUILD_SLICE_2         2 
              116  BINARY_SUBSCR    
              118  LOAD_METHOD              decode
              120  CALL_METHOD_0         0  ''
              122  RETURN_VALUE     
            124_0  COME_FROM            98  '98'

 L. 355       124  LOAD_FAST                'padded'
              126  POP_JUMP_IF_FALSE   158  'to 158'

 L. 356       128  LOAD_GLOBAL              _pad_whitespace
              130  LOAD_FAST                'lines'
              132  LOAD_FAST                'lineno'
              134  BINARY_SUBSCR    
              136  LOAD_METHOD              encode
              138  CALL_METHOD_0         0  ''
              140  LOAD_CONST               None
              142  LOAD_FAST                'col_offset'
              144  BUILD_SLICE_2         2 
              146  BINARY_SUBSCR    
              148  LOAD_METHOD              decode
              150  CALL_METHOD_0         0  ''
              152  CALL_FUNCTION_1       1  ''
              154  STORE_FAST               'padding'
              156  JUMP_FORWARD        162  'to 162'
            158_0  COME_FROM           126  '126'

 L. 358       158  LOAD_STR                 ''
              160  STORE_FAST               'padding'
            162_0  COME_FROM           156  '156'

 L. 360       162  LOAD_FAST                'padding'
              164  LOAD_FAST                'lines'
              166  LOAD_FAST                'lineno'
              168  BINARY_SUBSCR    
              170  LOAD_METHOD              encode
              172  CALL_METHOD_0         0  ''
              174  LOAD_FAST                'col_offset'
              176  LOAD_CONST               None
              178  BUILD_SLICE_2         2 
              180  BINARY_SUBSCR    
              182  LOAD_METHOD              decode
              184  CALL_METHOD_0         0  ''
              186  BINARY_ADD       
              188  STORE_FAST               'first'

 L. 361       190  LOAD_FAST                'lines'
              192  LOAD_FAST                'end_lineno'
              194  BINARY_SUBSCR    
              196  LOAD_METHOD              encode
              198  CALL_METHOD_0         0  ''
              200  LOAD_CONST               None
              202  LOAD_FAST                'end_col_offset'
              204  BUILD_SLICE_2         2 
              206  BINARY_SUBSCR    
              208  LOAD_METHOD              decode
              210  CALL_METHOD_0         0  ''
              212  STORE_FAST               'last'

 L. 362       214  LOAD_FAST                'lines'
              216  LOAD_FAST                'lineno'
              218  LOAD_CONST               1
              220  BINARY_ADD       
              222  LOAD_FAST                'end_lineno'
              224  BUILD_SLICE_2         2 
              226  BINARY_SUBSCR    
              228  STORE_FAST               'lines'

 L. 364       230  LOAD_FAST                'lines'
              232  LOAD_METHOD              insert
              234  LOAD_CONST               0
              236  LOAD_FAST                'first'
              238  CALL_METHOD_2         2  ''
              240  POP_TOP          

 L. 365       242  LOAD_FAST                'lines'
              244  LOAD_METHOD              append
              246  LOAD_FAST                'last'
              248  CALL_METHOD_1         1  ''
              250  POP_TOP          

 L. 366       252  LOAD_STR                 ''
              254  LOAD_METHOD              join
              256  LOAD_FAST                'lines'
              258  CALL_METHOD_1         1  ''
              260  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<117>' instruction at offset 8


def walk(node):
    """
    Recursively yield all descendant nodes in the tree starting at *node*
    (including *node* itself), in no specified order.  This is useful if you
    only want to modify nodes in place and don't care about the context.
    """
    from collections import deque
    todo = deque([node])
    while todo:
        node = todo.popleft
        todo.extenditer_child_nodes(node)
        (yield node)


class NodeVisitor(object):
    __doc__ = "\n    A node visitor base class that walks the abstract syntax tree and calls a\n    visitor function for every node found.  This function may return a value\n    which is forwarded by the `visit` method.\n\n    This class is meant to be subclassed, with the subclass adding visitor\n    methods.\n\n    Per default the visitor functions for the nodes are ``'visit_'`` +\n    class name of the node.  So a `TryFinally` node visit function would\n    be `visit_TryFinally`.  This behavior can be changed by overriding\n    the `visit` method.  If no visitor function exists for a node\n    (return value `None`) the `generic_visit` visitor is used instead.\n\n    Don't use the `NodeVisitor` if you want to apply changes to nodes during\n    traversing.  For this a special visitor exists (`NodeTransformer`) that\n    allows modifications.\n    "

    def visit(self, node):
        """Visit a node."""
        method = 'visit_' + node.__class__.__name__
        visitor = getattr(self, method, self.generic_visit)
        return visitor(node)

    def generic_visit(self, node):
        """Called if no explicit visitor function exists for a node."""
        for field, value in iter_fields(node):
            if isinstance(value, list):
                for item in value:
                    if isinstance(item, AST):
                        self.visititem

            elif isinstance(value, AST):
                self.visitvalue

    def visit_Constant--- This code section failed: ---

 L. 420         0  LOAD_FAST                'node'
                2  LOAD_ATTR                value
                4  STORE_FAST               'value'

 L. 421         6  LOAD_GLOBAL              _const_node_type_names
                8  LOAD_METHOD              get
               10  LOAD_GLOBAL              type
               12  LOAD_FAST                'value'
               14  CALL_FUNCTION_1       1  ''
               16  CALL_METHOD_1         1  ''
               18  STORE_FAST               'type_name'

 L. 422        20  LOAD_FAST                'type_name'
               22  LOAD_CONST               None
               24  <117>                 0  ''
               26  POP_JUMP_IF_FALSE    64  'to 64'

 L. 423        28  LOAD_GLOBAL              _const_node_type_names
               30  LOAD_METHOD              items
               32  CALL_METHOD_0         0  ''
               34  GET_ITER         
             36_0  COME_FROM            52  '52'
               36  FOR_ITER             64  'to 64'
               38  UNPACK_SEQUENCE_2     2 
               40  STORE_FAST               'cls'
               42  STORE_FAST               'name'

 L. 424        44  LOAD_GLOBAL              isinstance
               46  LOAD_FAST                'value'
               48  LOAD_FAST                'cls'
               50  CALL_FUNCTION_2       2  ''
               52  POP_JUMP_IF_FALSE    36  'to 36'

 L. 425        54  LOAD_FAST                'name'
               56  STORE_FAST               'type_name'

 L. 426        58  POP_TOP          
               60  BREAK_LOOP           64  'to 64'
               62  JUMP_BACK            36  'to 36'
             64_0  COME_FROM            26  '26'

 L. 427        64  LOAD_FAST                'type_name'
               66  LOAD_CONST               None
               68  <117>                 1  ''
               70  POP_JUMP_IF_FALSE   150  'to 150'

 L. 428        72  LOAD_STR                 'visit_'
               74  LOAD_FAST                'type_name'
               76  BINARY_ADD       
               78  STORE_FAST               'method'

 L. 429        80  SETUP_FINALLY        96  'to 96'

 L. 430        82  LOAD_GLOBAL              getattr
               84  LOAD_FAST                'self'
               86  LOAD_FAST                'method'
               88  CALL_FUNCTION_2       2  ''
               90  STORE_FAST               'visitor'
               92  POP_BLOCK        
               94  JUMP_FORWARD        114  'to 114'
             96_0  COME_FROM_FINALLY    80  '80'

 L. 431        96  DUP_TOP          
               98  LOAD_GLOBAL              AttributeError
              100  <121>               112  ''
              102  POP_TOP          
              104  POP_TOP          
              106  POP_TOP          

 L. 432       108  POP_EXCEPT       
              110  JUMP_FORWARD        150  'to 150'
              112  <48>             
            114_0  COME_FROM            94  '94'

 L. 434       114  LOAD_CONST               0
              116  LOAD_CONST               None
              118  IMPORT_NAME              warnings
              120  STORE_FAST               'warnings'

 L. 435       122  LOAD_FAST                'warnings'
              124  LOAD_METHOD              warn
              126  LOAD_FAST                'method'
              128  FORMAT_VALUE          0  ''
              130  LOAD_STR                 ' is deprecated; add visit_Constant'
              132  BUILD_STRING_2        2 

 L. 436       134  LOAD_GLOBAL              DeprecationWarning
              136  LOAD_CONST               2

 L. 435       138  CALL_METHOD_3         3  ''
              140  POP_TOP          

 L. 437       142  LOAD_FAST                'visitor'
              144  LOAD_FAST                'node'
              146  CALL_FUNCTION_1       1  ''
              148  RETURN_VALUE     
            150_0  COME_FROM           110  '110'
            150_1  COME_FROM            70  '70'

 L. 438       150  LOAD_FAST                'self'
              152  LOAD_METHOD              generic_visit
              154  LOAD_FAST                'node'
              156  CALL_METHOD_1         1  ''
              158  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<117>' instruction at offset 24


class NodeTransformer(NodeVisitor):
    __doc__ = "\n    A :class:`NodeVisitor` subclass that walks the abstract syntax tree and\n    allows modification of nodes.\n\n    The `NodeTransformer` will walk the AST and use the return value of the\n    visitor methods to replace or remove the old node.  If the return value of\n    the visitor method is ``None``, the node will be removed from its location,\n    otherwise it is replaced with the return value.  The return value may be the\n    original node in which case no replacement takes place.\n\n    Here is an example transformer that rewrites all occurrences of name lookups\n    (``foo``) to ``data['foo']``::\n\n       class RewriteName(NodeTransformer):\n\n           def visit_Name(self, node):\n               return Subscript(\n                   value=Name(id='data', ctx=Load()),\n                   slice=Constant(value=node.id),\n                   ctx=node.ctx\n               )\n\n    Keep in mind that if the node you're operating on has child nodes you must\n    either transform the child nodes yourself or call the :meth:`generic_visit`\n    method for the node first.\n\n    For nodes that were part of a collection of statements (that applies to all\n    statement nodes), the visitor may also return a list of nodes rather than\n    just a single node.\n\n    Usually you use the transformer like this::\n\n       node = YourTransformer().visit(node)\n    "

    def generic_visit--- This code section failed: ---

 L. 478         0  LOAD_GLOBAL              iter_fields
                2  LOAD_FAST                'node'
                4  CALL_FUNCTION_1       1  ''
                6  GET_ITER         
              8_0  COME_FROM           126  '126'
                8  FOR_ITER            172  'to 172'
               10  UNPACK_SEQUENCE_2     2 
               12  STORE_FAST               'field'
               14  STORE_FAST               'old_value'

 L. 479        16  LOAD_GLOBAL              isinstance
               18  LOAD_FAST                'old_value'
               20  LOAD_GLOBAL              list
               22  CALL_FUNCTION_2       2  ''
               24  POP_JUMP_IF_FALSE   118  'to 118'

 L. 480        26  BUILD_LIST_0          0 
               28  STORE_FAST               'new_values'

 L. 481        30  LOAD_FAST                'old_value'
               32  GET_ITER         
               34  FOR_ITER            104  'to 104'
               36  STORE_FAST               'value'

 L. 482        38  LOAD_GLOBAL              isinstance
               40  LOAD_FAST                'value'
               42  LOAD_GLOBAL              AST
               44  CALL_FUNCTION_2       2  ''
               46  POP_JUMP_IF_FALSE    92  'to 92'

 L. 483        48  LOAD_FAST                'self'
               50  LOAD_METHOD              visit
               52  LOAD_FAST                'value'
               54  CALL_METHOD_1         1  ''
               56  STORE_FAST               'value'

 L. 484        58  LOAD_FAST                'value'
               60  LOAD_CONST               None
               62  <117>                 0  ''
               64  POP_JUMP_IF_FALSE    70  'to 70'

 L. 485        66  JUMP_BACK            34  'to 34'
               68  JUMP_FORWARD         92  'to 92'
             70_0  COME_FROM            64  '64'

 L. 486        70  LOAD_GLOBAL              isinstance
               72  LOAD_FAST                'value'
               74  LOAD_GLOBAL              AST
               76  CALL_FUNCTION_2       2  ''
               78  POP_JUMP_IF_TRUE     92  'to 92'

 L. 487        80  LOAD_FAST                'new_values'
               82  LOAD_METHOD              extend
               84  LOAD_FAST                'value'
               86  CALL_METHOD_1         1  ''
               88  POP_TOP          

 L. 488        90  JUMP_BACK            34  'to 34'
             92_0  COME_FROM            78  '78'
             92_1  COME_FROM            68  '68'
             92_2  COME_FROM            46  '46'

 L. 489        92  LOAD_FAST                'new_values'
               94  LOAD_METHOD              append
               96  LOAD_FAST                'value'
               98  CALL_METHOD_1         1  ''
              100  POP_TOP          
              102  JUMP_BACK            34  'to 34'

 L. 490       104  LOAD_FAST                'new_values'
              106  LOAD_FAST                'old_value'
              108  LOAD_CONST               None
              110  LOAD_CONST               None
              112  BUILD_SLICE_2         2 
              114  STORE_SUBSCR     
              116  JUMP_BACK             8  'to 8'
            118_0  COME_FROM            24  '24'

 L. 491       118  LOAD_GLOBAL              isinstance
              120  LOAD_FAST                'old_value'
              122  LOAD_GLOBAL              AST
              124  CALL_FUNCTION_2       2  ''
              126  POP_JUMP_IF_FALSE     8  'to 8'

 L. 492       128  LOAD_FAST                'self'
              130  LOAD_METHOD              visit
              132  LOAD_FAST                'old_value'
              134  CALL_METHOD_1         1  ''
              136  STORE_FAST               'new_node'

 L. 493       138  LOAD_FAST                'new_node'
              140  LOAD_CONST               None
              142  <117>                 0  ''
              144  POP_JUMP_IF_FALSE   158  'to 158'

 L. 494       146  LOAD_GLOBAL              delattr
              148  LOAD_FAST                'node'
              150  LOAD_FAST                'field'
              152  CALL_FUNCTION_2       2  ''
              154  POP_TOP          
              156  JUMP_BACK             8  'to 8'
            158_0  COME_FROM           144  '144'

 L. 496       158  LOAD_GLOBAL              setattr
              160  LOAD_FAST                'node'
              162  LOAD_FAST                'field'
              164  LOAD_FAST                'new_node'
              166  CALL_FUNCTION_3       3  ''
              168  POP_TOP          
              170  JUMP_BACK             8  'to 8'

 L. 497       172  LOAD_FAST                'node'
              174  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<117>' instruction at offset 62


if not hasattr(Constant, 'n'):

    def _getter(self):
        """Deprecated. Use value instead."""
        return self.value


    def _setter(self, value):
        self.value = value


    Constant.n = property(_getter, _setter)
    Constant.s = property(_getter, _setter)

class _ABC(type):

    def __init__(cls, *args):
        cls.__doc__ = 'Deprecated AST node class. Use ast.Constant instead'

    def __instancecheck__--- This code section failed: ---

 L. 521         0  LOAD_GLOBAL              isinstance
                2  LOAD_FAST                'inst'
                4  LOAD_GLOBAL              Constant
                6  CALL_FUNCTION_2       2  ''
                8  POP_JUMP_IF_TRUE     14  'to 14'

 L. 522        10  LOAD_CONST               False
               12  RETURN_VALUE     
             14_0  COME_FROM             8  '8'

 L. 523        14  LOAD_FAST                'cls'
               16  LOAD_GLOBAL              _const_types
               18  <118>                 0  ''
               20  POP_JUMP_IF_FALSE    88  'to 88'

 L. 524        22  SETUP_FINALLY        34  'to 34'

 L. 525        24  LOAD_FAST                'inst'
               26  LOAD_ATTR                value
               28  STORE_FAST               'value'
               30  POP_BLOCK        
               32  JUMP_FORWARD         54  'to 54'
             34_0  COME_FROM_FINALLY    22  '22'

 L. 526        34  DUP_TOP          
               36  LOAD_GLOBAL              AttributeError
               38  <121>                52  ''
               40  POP_TOP          
               42  POP_TOP          
               44  POP_TOP          

 L. 527        46  POP_EXCEPT       
               48  LOAD_CONST               False
               50  RETURN_VALUE     
               52  <48>             
             54_0  COME_FROM            32  '32'

 L. 530        54  LOAD_GLOBAL              isinstance
               56  LOAD_FAST                'value'
               58  LOAD_GLOBAL              _const_types
               60  LOAD_FAST                'cls'
               62  BINARY_SUBSCR    
               64  CALL_FUNCTION_2       2  ''
               66  JUMP_IF_FALSE_OR_POP    86  'to 86'

 L. 531        68  LOAD_GLOBAL              isinstance
               70  LOAD_FAST                'value'
               72  LOAD_GLOBAL              _const_types_not
               74  LOAD_METHOD              get
               76  LOAD_FAST                'cls'
               78  LOAD_CONST               ()
               80  CALL_METHOD_2         2  ''
               82  CALL_FUNCTION_2       2  ''
               84  UNARY_NOT        
             86_0  COME_FROM            66  '66'

 L. 529        86  RETURN_VALUE     
             88_0  COME_FROM            20  '20'

 L. 533        88  LOAD_GLOBAL              type
               90  LOAD_METHOD              __instancecheck__
               92  LOAD_FAST                'cls'
               94  LOAD_FAST                'inst'
               96  CALL_METHOD_2         2  ''
               98  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<118>' instruction at offset 18


def _new--- This code section failed: ---

 L. 536         0  LOAD_FAST                'kwargs'
                2  GET_ITER         
              4_0  COME_FROM            42  '42'
                4  FOR_ITER             66  'to 66'
                6  STORE_FAST               'key'

 L. 537         8  LOAD_FAST                'key'
               10  LOAD_FAST                'cls'
               12  LOAD_ATTR                _fields
               14  <118>                 1  ''
               16  POP_JUMP_IF_FALSE    20  'to 20'

 L. 539        18  JUMP_BACK             4  'to 4'
             20_0  COME_FROM            16  '16'

 L. 540        20  LOAD_FAST                'cls'
               22  LOAD_ATTR                _fields
               24  LOAD_METHOD              index
               26  LOAD_FAST                'key'
               28  CALL_METHOD_1         1  ''
               30  STORE_FAST               'pos'

 L. 541        32  LOAD_FAST                'pos'
               34  LOAD_GLOBAL              len
               36  LOAD_FAST                'args'
               38  CALL_FUNCTION_1       1  ''
               40  COMPARE_OP               <
               42  POP_JUMP_IF_FALSE     4  'to 4'

 L. 542        44  LOAD_GLOBAL              TypeError
               46  LOAD_FAST                'cls'
               48  LOAD_ATTR                __name__
               50  FORMAT_VALUE          0  ''
               52  LOAD_STR                 ' got multiple values for argument '
               54  LOAD_FAST                'key'
               56  FORMAT_VALUE          2  '!r'
               58  BUILD_STRING_3        3 
               60  CALL_FUNCTION_1       1  ''
               62  RAISE_VARARGS_1       1  'exception instance'
               64  JUMP_BACK             4  'to 4'

 L. 543        66  LOAD_FAST                'cls'
               68  LOAD_GLOBAL              _const_types
               70  <118>                 0  ''
               72  POP_JUMP_IF_FALSE    88  'to 88'

 L. 544        74  LOAD_GLOBAL              Constant
               76  LOAD_FAST                'args'
               78  BUILD_MAP_0           0 
               80  LOAD_FAST                'kwargs'
               82  <164>                 1  ''
               84  CALL_FUNCTION_EX_KW     1  'keyword and positional arguments'
               86  RETURN_VALUE     
             88_0  COME_FROM            72  '72'

 L. 545        88  LOAD_GLOBAL              Constant
               90  LOAD_ATTR                __new__
               92  LOAD_FAST                'cls'
               94  BUILD_LIST_1          1 
               96  LOAD_FAST                'args'
               98  CALL_FINALLY        101  'to 101'
              100  WITH_CLEANUP_FINISH
              102  BUILD_MAP_0           0 
              104  LOAD_FAST                'kwargs'
              106  <164>                 1  ''
              108  CALL_FUNCTION_EX_KW     1  'keyword and positional arguments'
              110  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `<118>' instruction at offset 14


class Num(Constant, metaclass=_ABC):
    _fields = ('n', )
    __new__ = _new


class Str(Constant, metaclass=_ABC):
    _fields = ('s', )
    __new__ = _new


class Bytes(Constant, metaclass=_ABC):
    _fields = ('s', )
    __new__ = _new


class NameConstant(Constant, metaclass=_ABC):
    __new__ = _new


class Ellipsis(Constant, metaclass=_ABC):
    _fields = ()

    def __new__--- This code section failed: ---

 L. 566         0  LOAD_FAST                'cls'
                2  LOAD_GLOBAL              Ellipsis
                4  <117>                 0  ''
                6  POP_JUMP_IF_FALSE    30  'to 30'

 L. 567         8  LOAD_GLOBAL              Constant
               10  LOAD_CONST               Ellipsis
               12  BUILD_LIST_1          1 
               14  LOAD_FAST                'args'
               16  CALL_FINALLY         19  'to 19'
               18  WITH_CLEANUP_FINISH
               20  BUILD_MAP_0           0 
               22  LOAD_FAST                'kwargs'
               24  <164>                 1  ''
               26  CALL_FUNCTION_EX_KW     1  'keyword and positional arguments'
               28  RETURN_VALUE     
             30_0  COME_FROM             6  '6'

 L. 568        30  LOAD_GLOBAL              Constant
               32  LOAD_ATTR                __new__
               34  LOAD_FAST                'cls'
               36  BUILD_LIST_1          1 
               38  LOAD_FAST                'args'
               40  CALL_FINALLY         43  'to 43'
               42  WITH_CLEANUP_FINISH
               44  BUILD_MAP_0           0 
               46  LOAD_FAST                'kwargs'
               48  <164>                 1  ''
               50  CALL_FUNCTION_EX_KW     1  'keyword and positional arguments'
               52  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `None' instruction at offset -1


_const_types = {Num: (int, float, complex), 
 Str: (str,), 
 Bytes: (bytes,), 
 NameConstant: (type(None), bool), 
 Ellipsis: (type(...),)}
_const_types_not = {Num: (bool,)}
_const_node_type_names = {bool: 'NameConstant', 
 type(None): 'NameConstant', 
 int: 'Num', 
 float: 'Num', 
 complex: 'Num', 
 str: 'Str', 
 bytes: 'Bytes', 
 type(...): 'Ellipsis'}

class slice(AST):
    __doc__ = 'Deprecated AST node class.'


class Index(slice):
    __doc__ = 'Deprecated AST node class. Use the index value directly instead.'

    def __new__(cls, value, **kwargs):
        return value


class ExtSlice(slice):
    __doc__ = 'Deprecated AST node class. Use ast.Tuple instead.'

    def __new__--- This code section failed: ---

 L. 603         0  LOAD_GLOBAL              Tuple
                2  LOAD_GLOBAL              list
                4  LOAD_FAST                'dims'
                6  CALL_FUNCTION_1       1  ''
                8  LOAD_GLOBAL              Load
               10  CALL_FUNCTION_0       0  ''
               12  BUILD_TUPLE_2         2 
               14  BUILD_MAP_0           0 
               16  LOAD_FAST                'kwargs'
               18  <164>                 1  ''
               20  CALL_FUNCTION_EX_KW     1  'keyword and positional arguments'
               22  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `None' instruction at offset -1


if not hasattr(Tuple, 'dims'):

    def _dims_getter(self):
        """Deprecated. Use elts instead."""
        return self.elts


    def _dims_setter(self, value):
        self.elts = value


    Tuple.dims = property(_dims_getter, _dims_setter)

class Suite(mod):
    __doc__ = 'Deprecated AST node class.  Unused in Python 3.'


class AugLoad(expr_context):
    __doc__ = 'Deprecated AST node class.  Unused in Python 3.'


class AugStore(expr_context):
    __doc__ = 'Deprecated AST node class.  Unused in Python 3.'


class Param(expr_context):
    __doc__ = 'Deprecated AST node class.  Unused in Python 3.'


_INFSTR = '1e' + repr(sys.float_info.max_10_exp + 1)

class _Precedence(IntEnum):
    __doc__ = 'Precedence table that originated from python grammar.'
    TUPLE = auto()
    YIELD = auto()
    TEST = auto()
    OR = auto()
    AND = auto()
    NOT = auto()
    CMP = auto()
    EXPR = auto()
    BOR = EXPR
    BXOR = auto()
    BAND = auto()
    SHIFT = auto()
    ARITH = auto()
    TERM = auto()
    FACTOR = auto()
    POWER = auto()
    AWAIT = auto()
    ATOM = auto()

    def next--- This code section failed: ---

 L. 660         0  SETUP_FINALLY        18  'to 18'

 L. 661         2  LOAD_FAST                'self'
                4  LOAD_METHOD              __class__
                6  LOAD_FAST                'self'
                8  LOAD_CONST               1
               10  BINARY_ADD       
               12  CALL_METHOD_1         1  ''
               14  POP_BLOCK        
               16  RETURN_VALUE     
             18_0  COME_FROM_FINALLY     0  '0'

 L. 662        18  DUP_TOP          
               20  LOAD_GLOBAL              ValueError
               22  <121>                38  ''
               24  POP_TOP          
               26  POP_TOP          
               28  POP_TOP          

 L. 663        30  LOAD_FAST                'self'
               32  ROT_FOUR         
               34  POP_EXCEPT       
               36  RETURN_VALUE     
               38  <48>             

Parse error at or near `<121>' instruction at offset 22


class _Unparser(NodeVisitor):
    __doc__ = 'Methods in this class recursively traverse an AST and\n    output source code for the abstract syntax; original formatting\n    is disregarded.'

    def __init__(self):
        self._source = []
        self._buffer = []
        self._precedences = {}
        self._type_ignores = {}
        self._indent = 0

    def interleave--- This code section failed: ---

 L. 679         0  LOAD_GLOBAL              iter
                2  LOAD_FAST                'seq'
                4  CALL_FUNCTION_1       1  ''
                6  STORE_FAST               'seq'

 L. 680         8  SETUP_FINALLY        26  'to 26'

 L. 681        10  LOAD_FAST                'f'
               12  LOAD_GLOBAL              next
               14  LOAD_FAST                'seq'
               16  CALL_FUNCTION_1       1  ''
               18  CALL_FUNCTION_1       1  ''
               20  POP_TOP          
               22  POP_BLOCK        
               24  JUMP_FORWARD         44  'to 44'
             26_0  COME_FROM_FINALLY     8  '8'

 L. 682        26  DUP_TOP          
               28  LOAD_GLOBAL              StopIteration
               30  <121>                42  ''
               32  POP_TOP          
               34  POP_TOP          
               36  POP_TOP          

 L. 683        38  POP_EXCEPT       
               40  JUMP_FORWARD         68  'to 68'
               42  <48>             
             44_0  COME_FROM            24  '24'

 L. 685        44  LOAD_FAST                'seq'
               46  GET_ITER         
               48  FOR_ITER             68  'to 68'
               50  STORE_FAST               'x'

 L. 686        52  LOAD_FAST                'inter'
               54  CALL_FUNCTION_0       0  ''
               56  POP_TOP          

 L. 687        58  LOAD_FAST                'f'
               60  LOAD_FAST                'x'
               62  CALL_FUNCTION_1       1  ''
               64  POP_TOP          
               66  JUMP_BACK            48  'to 48'
             68_0  COME_FROM            40  '40'

Parse error at or near `<121>' instruction at offset 30

    def items_view(self, traverser, items):
        """Traverse and separate the given *items* with a comma and append it to
        the buffer. If *items* is a single item sequence, a trailing comma
        will be added."""
        if len(items) == 1:
            traverser(items[0])
            self.write','
        else:
            self.interleave(lambda : self.write', ')traverseritems

    def maybe_newline(self):
        """Adds a newline if it isn't the start of generated source"""
        if self._source:
            self.write'\n'

    def fill(self, text=''):
        """Indent a piece of text and append it, according to the current
        indentation level"""
        self.maybe_newline
        self.write('    ' * self._indent + text)

    def write(self, text):
        """Append a piece of text"""
        self._source.appendtext

    def buffer_writer(self, text):
        self._buffer.appendtext

    @property
    def buffer(self):
        value = ''.joinself._buffer
        self._buffer.clear
        return value

    @contextmanager
    def block(self, *, extra=None):
        """A context manager for preparing the source for blocks. It adds
        the character':', increases the indentation on enter and decreases
        the indentation on exit. If *extra* is given, it will be directly
        appended after the colon character.
        """
        self.write':'
        if extra:
            self.writeextra
        self._indent += 1
        (yield)
        self._indent -= 1

    @contextmanager
    def delimit(self, start, end):
        """A context manager for preparing the source for expressions. It adds
        *start* to the buffer and enters, after exit it adds *end*."""
        self.writestart
        (yield)
        self.writeend

    def delimit_if(self, start, end, condition):
        if condition:
            return self.delimitstartend
        return nullcontext()

    def require_parens(self, precedence, node):
        """Shortcut to adding precedence related parens"""
        return self.delimit_if'('')'(self.get_precedencenode > precedence)

    def get_precedence(self, node):
        return self._precedences.getnode_Precedence.TEST

    def set_precedence(self, precedence, *nodes):
        for node in nodes:
            self._precedences[node] = precedence

    def get_raw_docstring(self, node):
        """If a docstring node is found in the body of the *node* parameter,
        return that docstring node, None otherwise.

        Logic mirrored from ``_PyAST_GetDocString``."""
        if not isinstance(node, (AsyncFunctionDef, FunctionDef, ClassDef, Module)) or len(node.body) < 1:
            return
        else:
            node = node.body[0]
            if not isinstance(node, Expr):
                return
            node = node.value
            if isinstance(node, Constant) and isinstance(node.value, str):
                return node

    def get_type_comment--- This code section failed: ---

 L. 780         0  LOAD_FAST                'self'
                2  LOAD_ATTR                _type_ignores
                4  LOAD_METHOD              get
                6  LOAD_FAST                'node'
                8  LOAD_ATTR                lineno
               10  CALL_METHOD_1         1  ''
               12  JUMP_IF_TRUE_OR_POP    18  'to 18'
               14  LOAD_FAST                'node'
               16  LOAD_ATTR                type_comment
             18_0  COME_FROM            12  '12'
               18  STORE_FAST               'comment'

 L. 781        20  LOAD_FAST                'comment'
               22  LOAD_CONST               None
               24  <117>                 1  ''
               26  POP_JUMP_IF_FALSE    38  'to 38'

 L. 782        28  LOAD_STR                 ' # type: '
               30  LOAD_FAST                'comment'
               32  FORMAT_VALUE          0  ''
               34  BUILD_STRING_2        2 
               36  RETURN_VALUE     
             38_0  COME_FROM            26  '26'

Parse error at or near `<117>' instruction at offset 24

    def traverse(self, node):
        if isinstance(node, list):
            for item in node:
                self.traverseitem

        else:
            super().visitnode

    def visit(self, node):
        """Outputs a source code string that, if converted back to an ast
        (using ast.parse) will generate an AST equivalent to *node*"""
        self._source = []
        self.traversenode
        return ''.joinself._source

    def _write_docstring_and_traverse_body(self, node):
        if (docstring := self.get_raw_docstringnode):
            self._write_docstringdocstring
            self.traversenode.body[1:]
        else:
            self.traversenode.body

    def visit_Module(self, node):
        self._type_ignores = {f"ignore{ignore.tag}":ignore.lineno for ignore in node.type_ignores}
        self._write_docstring_and_traverse_bodynode
        self._type_ignores.clear

    def visit_FunctionType--- This code section failed: ---

 L. 814         0  LOAD_DEREF               'self'
                2  LOAD_METHOD              delimit
                4  LOAD_STR                 '('
                6  LOAD_STR                 ')'
                8  CALL_METHOD_2         2  ''
               10  SETUP_WITH           54  'to 54'
               12  POP_TOP          

 L. 815        14  LOAD_DEREF               'self'
               16  LOAD_METHOD              interleave

 L. 816        18  LOAD_CLOSURE             'self'
               20  BUILD_TUPLE_1         1 
               22  LOAD_LAMBDA              '<code_object <lambda>>'
               24  LOAD_STR                 '_Unparser.visit_FunctionType.<locals>.<lambda>'
               26  MAKE_FUNCTION_8          'closure'
               28  LOAD_DEREF               'self'
               30  LOAD_ATTR                traverse
               32  LOAD_FAST                'node'
               34  LOAD_ATTR                argtypes

 L. 815        36  CALL_METHOD_3         3  ''
               38  POP_TOP          
               40  POP_BLOCK        
               42  LOAD_CONST               None
               44  DUP_TOP          
               46  DUP_TOP          
               48  CALL_FUNCTION_3       3  ''
               50  POP_TOP          
               52  JUMP_FORWARD         70  'to 70'
             54_0  COME_FROM_WITH       10  '10'
               54  <49>             
               56  POP_JUMP_IF_TRUE     60  'to 60'
               58  <48>             
             60_0  COME_FROM            56  '56'
               60  POP_TOP          
               62  POP_TOP          
               64  POP_TOP          
               66  POP_EXCEPT       
               68  POP_TOP          
             70_0  COME_FROM            52  '52'

 L. 819        70  LOAD_DEREF               'self'
               72  LOAD_METHOD              write
               74  LOAD_STR                 ' -> '
               76  CALL_METHOD_1         1  ''
               78  POP_TOP          

 L. 820        80  LOAD_DEREF               'self'
               82  LOAD_METHOD              traverse
               84  LOAD_FAST                'node'
               86  LOAD_ATTR                returns
               88  CALL_METHOD_1         1  ''
               90  POP_TOP          

Parse error at or near `DUP_TOP' instruction at offset 44

    def visit_Expr(self, node):
        self.fill
        self.set_precedence_Precedence.YIELDnode.value
        self.traversenode.value

    def visit_NamedExpr--- This code section failed: ---

 L. 828         0  LOAD_FAST                'self'
                2  LOAD_METHOD              require_parens
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                TUPLE
                8  LOAD_FAST                'node'
               10  CALL_METHOD_2         2  ''
               12  SETUP_WITH           84  'to 84'
               14  POP_TOP          

 L. 829        16  LOAD_FAST                'self'
               18  LOAD_METHOD              set_precedence
               20  LOAD_GLOBAL              _Precedence
               22  LOAD_ATTR                ATOM
               24  LOAD_FAST                'node'
               26  LOAD_ATTR                target
               28  LOAD_FAST                'node'
               30  LOAD_ATTR                value
               32  CALL_METHOD_3         3  ''
               34  POP_TOP          

 L. 830        36  LOAD_FAST                'self'
               38  LOAD_METHOD              traverse
               40  LOAD_FAST                'node'
               42  LOAD_ATTR                target
               44  CALL_METHOD_1         1  ''
               46  POP_TOP          

 L. 831        48  LOAD_FAST                'self'
               50  LOAD_METHOD              write
               52  LOAD_STR                 ' := '
               54  CALL_METHOD_1         1  ''
               56  POP_TOP          

 L. 832        58  LOAD_FAST                'self'
               60  LOAD_METHOD              traverse
               62  LOAD_FAST                'node'
               64  LOAD_ATTR                value
               66  CALL_METHOD_1         1  ''
               68  POP_TOP          
               70  POP_BLOCK        
               72  LOAD_CONST               None
               74  DUP_TOP          
               76  DUP_TOP          
               78  CALL_FUNCTION_3       3  ''
               80  POP_TOP          
               82  JUMP_FORWARD        100  'to 100'
             84_0  COME_FROM_WITH       12  '12'
               84  <49>             
               86  POP_JUMP_IF_TRUE     90  'to 90'
               88  <48>             
             90_0  COME_FROM            86  '86'
               90  POP_TOP          
               92  POP_TOP          
               94  POP_TOP          
               96  POP_EXCEPT       
               98  POP_TOP          
            100_0  COME_FROM            82  '82'

Parse error at or near `DUP_TOP' instruction at offset 74

    def visit_Import(self, node):
        self.fill'import '
        self.interleave(lambda : self.write', ')self.traversenode.names

    def visit_ImportFrom(self, node):
        self.fill'from '
        self.write('.' * node.level)
        if node.module:
            self.writenode.module
        self.write' import '
        self.interleave(lambda : self.write', ')self.traversenode.names

    def visit_Assign(self, node):
        self.fill
        for target in node.targets:
            self.traversetarget
            self.write' = '
        else:
            self.traversenode.value
            if (type_comment := self.get_type_commentnode):
                self.writetype_comment

    def visit_AugAssign(self, node):
        self.fill
        self.traversenode.target
        self.write(' ' + self.binop[node.op.__class__.__name__] + '= ')
        self.traversenode.value

    def visit_AnnAssign--- This code section failed: ---

 L. 862         0  LOAD_FAST                'self'
                2  LOAD_METHOD              fill
                4  CALL_METHOD_0         0  ''
                6  POP_TOP          

 L. 863         8  LOAD_FAST                'self'
               10  LOAD_METHOD              delimit_if
               12  LOAD_STR                 '('
               14  LOAD_STR                 ')'
               16  LOAD_FAST                'node'
               18  LOAD_ATTR                simple
               20  UNARY_NOT        
               22  JUMP_IF_FALSE_OR_POP    34  'to 34'
               24  LOAD_GLOBAL              isinstance
               26  LOAD_FAST                'node'
               28  LOAD_ATTR                target
               30  LOAD_GLOBAL              Name
               32  CALL_FUNCTION_2       2  ''
             34_0  COME_FROM            22  '22'
               34  CALL_METHOD_3         3  ''
               36  SETUP_WITH           66  'to 66'
               38  POP_TOP          

 L. 864        40  LOAD_FAST                'self'
               42  LOAD_METHOD              traverse
               44  LOAD_FAST                'node'
               46  LOAD_ATTR                target
               48  CALL_METHOD_1         1  ''
               50  POP_TOP          
               52  POP_BLOCK        
               54  LOAD_CONST               None
               56  DUP_TOP          
               58  DUP_TOP          
               60  CALL_FUNCTION_3       3  ''
               62  POP_TOP          
               64  JUMP_FORWARD         82  'to 82'
             66_0  COME_FROM_WITH       36  '36'
               66  <49>             
               68  POP_JUMP_IF_TRUE     72  'to 72'
               70  <48>             
             72_0  COME_FROM            68  '68'
               72  POP_TOP          
               74  POP_TOP          
               76  POP_TOP          
               78  POP_EXCEPT       
               80  POP_TOP          
             82_0  COME_FROM            64  '64'

 L. 865        82  LOAD_FAST                'self'
               84  LOAD_METHOD              write
               86  LOAD_STR                 ': '
               88  CALL_METHOD_1         1  ''
               90  POP_TOP          

 L. 866        92  LOAD_FAST                'self'
               94  LOAD_METHOD              traverse
               96  LOAD_FAST                'node'
               98  LOAD_ATTR                annotation
              100  CALL_METHOD_1         1  ''
              102  POP_TOP          

 L. 867       104  LOAD_FAST                'node'
              106  LOAD_ATTR                value
              108  POP_JUMP_IF_FALSE   132  'to 132'

 L. 868       110  LOAD_FAST                'self'
              112  LOAD_METHOD              write
              114  LOAD_STR                 ' = '
              116  CALL_METHOD_1         1  ''
              118  POP_TOP          

 L. 869       120  LOAD_FAST                'self'
              122  LOAD_METHOD              traverse
              124  LOAD_FAST                'node'
              126  LOAD_ATTR                value
              128  CALL_METHOD_1         1  ''
              130  POP_TOP          
            132_0  COME_FROM           108  '108'

Parse error at or near `DUP_TOP' instruction at offset 56

    def visit_Return(self, node):
        self.fill'return'
        if node.value:
            self.write' '
            self.traversenode.value

    def visit_Pass(self, node):
        self.fill'pass'

    def visit_Break(self, node):
        self.fill'break'

    def visit_Continue(self, node):
        self.fill'continue'

    def visit_Delete(self, node):
        self.fill'del '
        self.interleave(lambda : self.write', ')self.traversenode.targets

    def visit_Assert(self, node):
        self.fill'assert '
        self.traversenode.test
        if node.msg:
            self.write', '
            self.traversenode.msg

    def visit_Global(self, node):
        self.fill'global '
        self.interleave(lambda : self.write', ')self.writenode.names

    def visit_Nonlocal(self, node):
        self.fill'nonlocal '
        self.interleave(lambda : self.write', ')self.writenode.names

    def visit_Await--- This code section failed: ---

 L. 906         0  LOAD_FAST                'self'
                2  LOAD_METHOD              require_parens
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                AWAIT
                8  LOAD_FAST                'node'
               10  CALL_METHOD_2         2  ''
               12  SETUP_WITH           84  'to 84'
               14  POP_TOP          

 L. 907        16  LOAD_FAST                'self'
               18  LOAD_METHOD              write
               20  LOAD_STR                 'await'
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L. 908        26  LOAD_FAST                'node'
               28  LOAD_ATTR                value
               30  POP_JUMP_IF_FALSE    70  'to 70'

 L. 909        32  LOAD_FAST                'self'
               34  LOAD_METHOD              write
               36  LOAD_STR                 ' '
               38  CALL_METHOD_1         1  ''
               40  POP_TOP          

 L. 910        42  LOAD_FAST                'self'
               44  LOAD_METHOD              set_precedence
               46  LOAD_GLOBAL              _Precedence
               48  LOAD_ATTR                ATOM
               50  LOAD_FAST                'node'
               52  LOAD_ATTR                value
               54  CALL_METHOD_2         2  ''
               56  POP_TOP          

 L. 911        58  LOAD_FAST                'self'
               60  LOAD_METHOD              traverse
               62  LOAD_FAST                'node'
               64  LOAD_ATTR                value
               66  CALL_METHOD_1         1  ''
               68  POP_TOP          
             70_0  COME_FROM            30  '30'
               70  POP_BLOCK        
               72  LOAD_CONST               None
               74  DUP_TOP          
               76  DUP_TOP          
               78  CALL_FUNCTION_3       3  ''
               80  POP_TOP          
               82  JUMP_FORWARD        100  'to 100'
             84_0  COME_FROM_WITH       12  '12'
               84  <49>             
               86  POP_JUMP_IF_TRUE     90  'to 90'
               88  <48>             
             90_0  COME_FROM            86  '86'
               90  POP_TOP          
               92  POP_TOP          
               94  POP_TOP          
               96  POP_EXCEPT       
               98  POP_TOP          
            100_0  COME_FROM            82  '82'

Parse error at or near `DUP_TOP' instruction at offset 74

    def visit_Yield--- This code section failed: ---

 L. 914         0  LOAD_FAST                'self'
                2  LOAD_METHOD              require_parens
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                YIELD
                8  LOAD_FAST                'node'
               10  CALL_METHOD_2         2  ''
               12  SETUP_WITH           84  'to 84'
               14  POP_TOP          

 L. 915        16  LOAD_FAST                'self'
               18  LOAD_METHOD              write
               20  LOAD_STR                 'yield'
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L. 916        26  LOAD_FAST                'node'
               28  LOAD_ATTR                value
               30  POP_JUMP_IF_FALSE    70  'to 70'

 L. 917        32  LOAD_FAST                'self'
               34  LOAD_METHOD              write
               36  LOAD_STR                 ' '
               38  CALL_METHOD_1         1  ''
               40  POP_TOP          

 L. 918        42  LOAD_FAST                'self'
               44  LOAD_METHOD              set_precedence
               46  LOAD_GLOBAL              _Precedence
               48  LOAD_ATTR                ATOM
               50  LOAD_FAST                'node'
               52  LOAD_ATTR                value
               54  CALL_METHOD_2         2  ''
               56  POP_TOP          

 L. 919        58  LOAD_FAST                'self'
               60  LOAD_METHOD              traverse
               62  LOAD_FAST                'node'
               64  LOAD_ATTR                value
               66  CALL_METHOD_1         1  ''
               68  POP_TOP          
             70_0  COME_FROM            30  '30'
               70  POP_BLOCK        
               72  LOAD_CONST               None
               74  DUP_TOP          
               76  DUP_TOP          
               78  CALL_FUNCTION_3       3  ''
               80  POP_TOP          
               82  JUMP_FORWARD        100  'to 100'
             84_0  COME_FROM_WITH       12  '12'
               84  <49>             
               86  POP_JUMP_IF_TRUE     90  'to 90'
               88  <48>             
             90_0  COME_FROM            86  '86'
               90  POP_TOP          
               92  POP_TOP          
               94  POP_TOP          
               96  POP_EXCEPT       
               98  POP_TOP          
            100_0  COME_FROM            82  '82'

Parse error at or near `DUP_TOP' instruction at offset 74

    def visit_YieldFrom--- This code section failed: ---

 L. 922         0  LOAD_FAST                'self'
                2  LOAD_METHOD              require_parens
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                YIELD
                8  LOAD_FAST                'node'
               10  CALL_METHOD_2         2  ''
               12  SETUP_WITH           82  'to 82'
               14  POP_TOP          

 L. 923        16  LOAD_FAST                'self'
               18  LOAD_METHOD              write
               20  LOAD_STR                 'yield from '
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L. 924        26  LOAD_FAST                'node'
               28  LOAD_ATTR                value
               30  POP_JUMP_IF_TRUE     40  'to 40'

 L. 925        32  LOAD_GLOBAL              ValueError
               34  LOAD_STR                 "Node can't be used without a value attribute."
               36  CALL_FUNCTION_1       1  ''
               38  RAISE_VARARGS_1       1  'exception instance'
             40_0  COME_FROM            30  '30'

 L. 926        40  LOAD_FAST                'self'
               42  LOAD_METHOD              set_precedence
               44  LOAD_GLOBAL              _Precedence
               46  LOAD_ATTR                ATOM
               48  LOAD_FAST                'node'
               50  LOAD_ATTR                value
               52  CALL_METHOD_2         2  ''
               54  POP_TOP          

 L. 927        56  LOAD_FAST                'self'
               58  LOAD_METHOD              traverse
               60  LOAD_FAST                'node'
               62  LOAD_ATTR                value
               64  CALL_METHOD_1         1  ''
               66  POP_TOP          
               68  POP_BLOCK        
               70  LOAD_CONST               None
               72  DUP_TOP          
               74  DUP_TOP          
               76  CALL_FUNCTION_3       3  ''
               78  POP_TOP          
               80  JUMP_FORWARD         98  'to 98'
             82_0  COME_FROM_WITH       12  '12'
               82  <49>             
               84  POP_JUMP_IF_TRUE     88  'to 88'
               86  <48>             
             88_0  COME_FROM            84  '84'
               88  POP_TOP          
               90  POP_TOP          
               92  POP_TOP          
               94  POP_EXCEPT       
               96  POP_TOP          
             98_0  COME_FROM            80  '80'

Parse error at or near `DUP_TOP' instruction at offset 72

    def visit_Raise(self, node):
        self.fill'raise'
        if not node.exc:
            if node.cause:
                raise ValueError("Node can't use cause without an exception.")
            return
        self.write' '
        self.traversenode.exc
        if node.cause:
            self.write' from '
            self.traversenode.cause

    def visit_Try--- This code section failed: ---

 L. 942         0  LOAD_FAST                'self'
                2  LOAD_METHOD              fill
                4  LOAD_STR                 'try'
                6  CALL_METHOD_1         1  ''
                8  POP_TOP          

 L. 943        10  LOAD_FAST                'self'
               12  LOAD_METHOD              block
               14  CALL_METHOD_0         0  ''
               16  SETUP_WITH           46  'to 46'
               18  POP_TOP          

 L. 944        20  LOAD_FAST                'self'
               22  LOAD_METHOD              traverse
               24  LOAD_FAST                'node'
               26  LOAD_ATTR                body
               28  CALL_METHOD_1         1  ''
               30  POP_TOP          
               32  POP_BLOCK        
               34  LOAD_CONST               None
               36  DUP_TOP          
               38  DUP_TOP          
               40  CALL_FUNCTION_3       3  ''
               42  POP_TOP          
               44  JUMP_FORWARD         62  'to 62'
             46_0  COME_FROM_WITH       16  '16'
               46  <49>             
               48  POP_JUMP_IF_TRUE     52  'to 52'
               50  <48>             
             52_0  COME_FROM            48  '48'
               52  POP_TOP          
               54  POP_TOP          
               56  POP_TOP          
               58  POP_EXCEPT       
               60  POP_TOP          
             62_0  COME_FROM            44  '44'

 L. 945        62  LOAD_FAST                'node'
               64  LOAD_ATTR                handlers
               66  GET_ITER         
               68  FOR_ITER             84  'to 84'
               70  STORE_FAST               'ex'

 L. 946        72  LOAD_FAST                'self'
               74  LOAD_METHOD              traverse
               76  LOAD_FAST                'ex'
               78  CALL_METHOD_1         1  ''
               80  POP_TOP          
               82  JUMP_BACK            68  'to 68'

 L. 947        84  LOAD_FAST                'node'
               86  LOAD_ATTR                orelse
               88  POP_JUMP_IF_FALSE   152  'to 152'

 L. 948        90  LOAD_FAST                'self'
               92  LOAD_METHOD              fill
               94  LOAD_STR                 'else'
               96  CALL_METHOD_1         1  ''
               98  POP_TOP          

 L. 949       100  LOAD_FAST                'self'
              102  LOAD_METHOD              block
              104  CALL_METHOD_0         0  ''
              106  SETUP_WITH          136  'to 136'
              108  POP_TOP          

 L. 950       110  LOAD_FAST                'self'
              112  LOAD_METHOD              traverse
              114  LOAD_FAST                'node'
              116  LOAD_ATTR                orelse
              118  CALL_METHOD_1         1  ''
              120  POP_TOP          
              122  POP_BLOCK        
              124  LOAD_CONST               None
              126  DUP_TOP          
              128  DUP_TOP          
              130  CALL_FUNCTION_3       3  ''
              132  POP_TOP          
              134  JUMP_FORWARD        152  'to 152'
            136_0  COME_FROM_WITH      106  '106'
              136  <49>             
              138  POP_JUMP_IF_TRUE    142  'to 142'
              140  <48>             
            142_0  COME_FROM           138  '138'
              142  POP_TOP          
              144  POP_TOP          
              146  POP_TOP          
              148  POP_EXCEPT       
              150  POP_TOP          
            152_0  COME_FROM           134  '134'
            152_1  COME_FROM            88  '88'

 L. 951       152  LOAD_FAST                'node'
              154  LOAD_ATTR                finalbody
              156  POP_JUMP_IF_FALSE   220  'to 220'

 L. 952       158  LOAD_FAST                'self'
              160  LOAD_METHOD              fill
              162  LOAD_STR                 'finally'
              164  CALL_METHOD_1         1  ''
              166  POP_TOP          

 L. 953       168  LOAD_FAST                'self'
              170  LOAD_METHOD              block
              172  CALL_METHOD_0         0  ''
              174  SETUP_WITH          204  'to 204'
              176  POP_TOP          

 L. 954       178  LOAD_FAST                'self'
              180  LOAD_METHOD              traverse
              182  LOAD_FAST                'node'
              184  LOAD_ATTR                finalbody
              186  CALL_METHOD_1         1  ''
              188  POP_TOP          
              190  POP_BLOCK        
              192  LOAD_CONST               None
              194  DUP_TOP          
              196  DUP_TOP          
              198  CALL_FUNCTION_3       3  ''
              200  POP_TOP          
              202  JUMP_FORWARD        220  'to 220'
            204_0  COME_FROM_WITH      174  '174'
              204  <49>             
              206  POP_JUMP_IF_TRUE    210  'to 210'
              208  <48>             
            210_0  COME_FROM           206  '206'
              210  POP_TOP          
              212  POP_TOP          
              214  POP_TOP          
              216  POP_EXCEPT       
              218  POP_TOP          
            220_0  COME_FROM           202  '202'
            220_1  COME_FROM           156  '156'

Parse error at or near `DUP_TOP' instruction at offset 36

    def visit_ExceptHandler--- This code section failed: ---

 L. 957         0  LOAD_FAST                'self'
                2  LOAD_METHOD              fill
                4  LOAD_STR                 'except'
                6  CALL_METHOD_1         1  ''
                8  POP_TOP          

 L. 958        10  LOAD_FAST                'node'
               12  LOAD_ATTR                type
               14  POP_JUMP_IF_FALSE    38  'to 38'

 L. 959        16  LOAD_FAST                'self'
               18  LOAD_METHOD              write
               20  LOAD_STR                 ' '
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L. 960        26  LOAD_FAST                'self'
               28  LOAD_METHOD              traverse
               30  LOAD_FAST                'node'
               32  LOAD_ATTR                type
               34  CALL_METHOD_1         1  ''
               36  POP_TOP          
             38_0  COME_FROM            14  '14'

 L. 961        38  LOAD_FAST                'node'
               40  LOAD_ATTR                name
               42  POP_JUMP_IF_FALSE    66  'to 66'

 L. 962        44  LOAD_FAST                'self'
               46  LOAD_METHOD              write
               48  LOAD_STR                 ' as '
               50  CALL_METHOD_1         1  ''
               52  POP_TOP          

 L. 963        54  LOAD_FAST                'self'
               56  LOAD_METHOD              write
               58  LOAD_FAST                'node'
               60  LOAD_ATTR                name
               62  CALL_METHOD_1         1  ''
               64  POP_TOP          
             66_0  COME_FROM            42  '42'

 L. 964        66  LOAD_FAST                'self'
               68  LOAD_METHOD              block
               70  CALL_METHOD_0         0  ''
               72  SETUP_WITH          102  'to 102'
               74  POP_TOP          

 L. 965        76  LOAD_FAST                'self'
               78  LOAD_METHOD              traverse
               80  LOAD_FAST                'node'
               82  LOAD_ATTR                body
               84  CALL_METHOD_1         1  ''
               86  POP_TOP          
               88  POP_BLOCK        
               90  LOAD_CONST               None
               92  DUP_TOP          
               94  DUP_TOP          
               96  CALL_FUNCTION_3       3  ''
               98  POP_TOP          
              100  JUMP_FORWARD        118  'to 118'
            102_0  COME_FROM_WITH       72  '72'
              102  <49>             
              104  POP_JUMP_IF_TRUE    108  'to 108'
              106  <48>             
            108_0  COME_FROM           104  '104'
              108  POP_TOP          
              110  POP_TOP          
              112  POP_TOP          
              114  POP_EXCEPT       
              116  POP_TOP          
            118_0  COME_FROM           100  '100'

Parse error at or near `DUP_TOP' instruction at offset 92

    def visit_ClassDef--- This code section failed: ---

 L. 968         0  LOAD_FAST                'self'
                2  LOAD_METHOD              maybe_newline
                4  CALL_METHOD_0         0  ''
                6  POP_TOP          

 L. 969         8  LOAD_FAST                'node'
               10  LOAD_ATTR                decorator_list
               12  GET_ITER         
               14  FOR_ITER             40  'to 40'
               16  STORE_FAST               'deco'

 L. 970        18  LOAD_FAST                'self'
               20  LOAD_METHOD              fill
               22  LOAD_STR                 '@'
               24  CALL_METHOD_1         1  ''
               26  POP_TOP          

 L. 971        28  LOAD_FAST                'self'
               30  LOAD_METHOD              traverse
               32  LOAD_FAST                'deco'
               34  CALL_METHOD_1         1  ''
               36  POP_TOP          
               38  JUMP_BACK            14  'to 14'

 L. 972        40  LOAD_FAST                'self'
               42  LOAD_METHOD              fill
               44  LOAD_STR                 'class '
               46  LOAD_FAST                'node'
               48  LOAD_ATTR                name
               50  BINARY_ADD       
               52  CALL_METHOD_1         1  ''
               54  POP_TOP          

 L. 973        56  LOAD_FAST                'self'
               58  LOAD_ATTR                delimit_if
               60  LOAD_STR                 '('
               62  LOAD_STR                 ')'
               64  LOAD_FAST                'node'
               66  LOAD_ATTR                bases
               68  JUMP_IF_TRUE_OR_POP    74  'to 74'
               70  LOAD_FAST                'node'
               72  LOAD_ATTR                keywords
             74_0  COME_FROM            68  '68'
               74  LOAD_CONST               ('condition',)
               76  CALL_FUNCTION_KW_3     3  '3 total positional and keyword args'
               78  SETUP_WITH          184  'to 184'
               80  POP_TOP          

 L. 974        82  LOAD_CONST               False
               84  STORE_FAST               'comma'

 L. 975        86  LOAD_FAST                'node'
               88  LOAD_ATTR                bases
               90  GET_ITER         
               92  FOR_ITER            128  'to 128'
               94  STORE_FAST               'e'

 L. 976        96  LOAD_FAST                'comma'
               98  POP_JUMP_IF_FALSE   112  'to 112'

 L. 977       100  LOAD_FAST                'self'
              102  LOAD_METHOD              write
              104  LOAD_STR                 ', '
              106  CALL_METHOD_1         1  ''
              108  POP_TOP          
              110  JUMP_FORWARD        116  'to 116'
            112_0  COME_FROM            98  '98'

 L. 979       112  LOAD_CONST               True
              114  STORE_FAST               'comma'
            116_0  COME_FROM           110  '110'

 L. 980       116  LOAD_FAST                'self'
              118  LOAD_METHOD              traverse
              120  LOAD_FAST                'e'
              122  CALL_METHOD_1         1  ''
              124  POP_TOP          
              126  JUMP_BACK            92  'to 92'

 L. 981       128  LOAD_FAST                'node'
              130  LOAD_ATTR                keywords
              132  GET_ITER         
              134  FOR_ITER            170  'to 170'
              136  STORE_FAST               'e'

 L. 982       138  LOAD_FAST                'comma'
              140  POP_JUMP_IF_FALSE   154  'to 154'

 L. 983       142  LOAD_FAST                'self'
              144  LOAD_METHOD              write
              146  LOAD_STR                 ', '
              148  CALL_METHOD_1         1  ''
              150  POP_TOP          
              152  JUMP_FORWARD        158  'to 158'
            154_0  COME_FROM           140  '140'

 L. 985       154  LOAD_CONST               True
              156  STORE_FAST               'comma'
            158_0  COME_FROM           152  '152'

 L. 986       158  LOAD_FAST                'self'
              160  LOAD_METHOD              traverse
              162  LOAD_FAST                'e'
              164  CALL_METHOD_1         1  ''
              166  POP_TOP          
              168  JUMP_BACK           134  'to 134'
              170  POP_BLOCK        
              172  LOAD_CONST               None
              174  DUP_TOP          
              176  DUP_TOP          
              178  CALL_FUNCTION_3       3  ''
              180  POP_TOP          
              182  JUMP_FORWARD        200  'to 200'
            184_0  COME_FROM_WITH       78  '78'
              184  <49>             
              186  POP_JUMP_IF_TRUE    190  'to 190'
              188  <48>             
            190_0  COME_FROM           186  '186'
              190  POP_TOP          
              192  POP_TOP          
              194  POP_TOP          
              196  POP_EXCEPT       
              198  POP_TOP          
            200_0  COME_FROM           182  '182'

 L. 988       200  LOAD_FAST                'self'
              202  LOAD_METHOD              block
              204  CALL_METHOD_0         0  ''
              206  SETUP_WITH          234  'to 234'
              208  POP_TOP          

 L. 989       210  LOAD_FAST                'self'
              212  LOAD_METHOD              _write_docstring_and_traverse_body
              214  LOAD_FAST                'node'
              216  CALL_METHOD_1         1  ''
              218  POP_TOP          
              220  POP_BLOCK        
              222  LOAD_CONST               None
              224  DUP_TOP          
              226  DUP_TOP          
              228  CALL_FUNCTION_3       3  ''
              230  POP_TOP          
              232  JUMP_FORWARD        250  'to 250'
            234_0  COME_FROM_WITH      206  '206'
              234  <49>             
              236  POP_JUMP_IF_TRUE    240  'to 240'
              238  <48>             
            240_0  COME_FROM           236  '236'
              240  POP_TOP          
              242  POP_TOP          
              244  POP_TOP          
              246  POP_EXCEPT       
              248  POP_TOP          
            250_0  COME_FROM           232  '232'

Parse error at or near `DUP_TOP' instruction at offset 176

    def visit_FunctionDef(self, node):
        self._function_helpernode'def'

    def visit_AsyncFunctionDef(self, node):
        self._function_helpernode'async def'

    def _function_helper--- This code section failed: ---

 L. 998         0  LOAD_FAST                'self'
                2  LOAD_METHOD              maybe_newline
                4  CALL_METHOD_0         0  ''
                6  POP_TOP          

 L. 999         8  LOAD_FAST                'node'
               10  LOAD_ATTR                decorator_list
               12  GET_ITER         
               14  FOR_ITER             40  'to 40'
               16  STORE_FAST               'deco'

 L.1000        18  LOAD_FAST                'self'
               20  LOAD_METHOD              fill
               22  LOAD_STR                 '@'
               24  CALL_METHOD_1         1  ''
               26  POP_TOP          

 L.1001        28  LOAD_FAST                'self'
               30  LOAD_METHOD              traverse
               32  LOAD_FAST                'deco'
               34  CALL_METHOD_1         1  ''
               36  POP_TOP          
               38  JUMP_BACK            14  'to 14'

 L.1002        40  LOAD_FAST                'fill_suffix'
               42  LOAD_STR                 ' '
               44  BINARY_ADD       
               46  LOAD_FAST                'node'
               48  LOAD_ATTR                name
               50  BINARY_ADD       
               52  STORE_FAST               'def_str'

 L.1003        54  LOAD_FAST                'self'
               56  LOAD_METHOD              fill
               58  LOAD_FAST                'def_str'
               60  CALL_METHOD_1         1  ''
               62  POP_TOP          

 L.1004        64  LOAD_FAST                'self'
               66  LOAD_METHOD              delimit
               68  LOAD_STR                 '('
               70  LOAD_STR                 ')'
               72  CALL_METHOD_2         2  ''
               74  SETUP_WITH          104  'to 104'
               76  POP_TOP          

 L.1005        78  LOAD_FAST                'self'
               80  LOAD_METHOD              traverse
               82  LOAD_FAST                'node'
               84  LOAD_ATTR                args
               86  CALL_METHOD_1         1  ''
               88  POP_TOP          
               90  POP_BLOCK        
               92  LOAD_CONST               None
               94  DUP_TOP          
               96  DUP_TOP          
               98  CALL_FUNCTION_3       3  ''
              100  POP_TOP          
              102  JUMP_FORWARD        120  'to 120'
            104_0  COME_FROM_WITH       74  '74'
              104  <49>             
              106  POP_JUMP_IF_TRUE    110  'to 110'
              108  <48>             
            110_0  COME_FROM           106  '106'
              110  POP_TOP          
              112  POP_TOP          
              114  POP_TOP          
              116  POP_EXCEPT       
              118  POP_TOP          
            120_0  COME_FROM           102  '102'

 L.1006       120  LOAD_FAST                'node'
              122  LOAD_ATTR                returns
              124  POP_JUMP_IF_FALSE   148  'to 148'

 L.1007       126  LOAD_FAST                'self'
              128  LOAD_METHOD              write
              130  LOAD_STR                 ' -> '
              132  CALL_METHOD_1         1  ''
              134  POP_TOP          

 L.1008       136  LOAD_FAST                'self'
              138  LOAD_METHOD              traverse
              140  LOAD_FAST                'node'
              142  LOAD_ATTR                returns
              144  CALL_METHOD_1         1  ''
              146  POP_TOP          
            148_0  COME_FROM           124  '124'

 L.1009       148  LOAD_FAST                'self'
              150  LOAD_ATTR                block
              152  LOAD_FAST                'self'
              154  LOAD_METHOD              get_type_comment
              156  LOAD_FAST                'node'
              158  CALL_METHOD_1         1  ''
              160  LOAD_CONST               ('extra',)
              162  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
              164  SETUP_WITH          192  'to 192'
              166  POP_TOP          

 L.1010       168  LOAD_FAST                'self'
              170  LOAD_METHOD              _write_docstring_and_traverse_body
              172  LOAD_FAST                'node'
              174  CALL_METHOD_1         1  ''
              176  POP_TOP          
              178  POP_BLOCK        
              180  LOAD_CONST               None
              182  DUP_TOP          
              184  DUP_TOP          
              186  CALL_FUNCTION_3       3  ''
              188  POP_TOP          
              190  JUMP_FORWARD        208  'to 208'
            192_0  COME_FROM_WITH      164  '164'
              192  <49>             
              194  POP_JUMP_IF_TRUE    198  'to 198'
              196  <48>             
            198_0  COME_FROM           194  '194'
              198  POP_TOP          
              200  POP_TOP          
              202  POP_TOP          
              204  POP_EXCEPT       
              206  POP_TOP          
            208_0  COME_FROM           190  '190'

Parse error at or near `DUP_TOP' instruction at offset 94

    def visit_For(self, node):
        self._for_helper'for 'node

    def visit_AsyncFor(self, node):
        self._for_helper'async for 'node

    def _for_helper--- This code section failed: ---

 L.1019         0  LOAD_FAST                'self'
                2  LOAD_METHOD              fill
                4  LOAD_FAST                'fill'
                6  CALL_METHOD_1         1  ''
                8  POP_TOP          

 L.1020        10  LOAD_FAST                'self'
               12  LOAD_METHOD              traverse
               14  LOAD_FAST                'node'
               16  LOAD_ATTR                target
               18  CALL_METHOD_1         1  ''
               20  POP_TOP          

 L.1021        22  LOAD_FAST                'self'
               24  LOAD_METHOD              write
               26  LOAD_STR                 ' in '
               28  CALL_METHOD_1         1  ''
               30  POP_TOP          

 L.1022        32  LOAD_FAST                'self'
               34  LOAD_METHOD              traverse
               36  LOAD_FAST                'node'
               38  LOAD_ATTR                iter
               40  CALL_METHOD_1         1  ''
               42  POP_TOP          

 L.1023        44  LOAD_FAST                'self'
               46  LOAD_ATTR                block
               48  LOAD_FAST                'self'
               50  LOAD_METHOD              get_type_comment
               52  LOAD_FAST                'node'
               54  CALL_METHOD_1         1  ''
               56  LOAD_CONST               ('extra',)
               58  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
               60  SETUP_WITH           90  'to 90'
               62  POP_TOP          

 L.1024        64  LOAD_FAST                'self'
               66  LOAD_METHOD              traverse
               68  LOAD_FAST                'node'
               70  LOAD_ATTR                body
               72  CALL_METHOD_1         1  ''
               74  POP_TOP          
               76  POP_BLOCK        
               78  LOAD_CONST               None
               80  DUP_TOP          
               82  DUP_TOP          
               84  CALL_FUNCTION_3       3  ''
               86  POP_TOP          
               88  JUMP_FORWARD        106  'to 106'
             90_0  COME_FROM_WITH       60  '60'
               90  <49>             
               92  POP_JUMP_IF_TRUE     96  'to 96'
               94  <48>             
             96_0  COME_FROM            92  '92'
               96  POP_TOP          
               98  POP_TOP          
              100  POP_TOP          
              102  POP_EXCEPT       
              104  POP_TOP          
            106_0  COME_FROM            88  '88'

 L.1025       106  LOAD_FAST                'node'
              108  LOAD_ATTR                orelse
              110  POP_JUMP_IF_FALSE   174  'to 174'

 L.1026       112  LOAD_FAST                'self'
              114  LOAD_METHOD              fill
              116  LOAD_STR                 'else'
              118  CALL_METHOD_1         1  ''
              120  POP_TOP          

 L.1027       122  LOAD_FAST                'self'
              124  LOAD_METHOD              block
              126  CALL_METHOD_0         0  ''
              128  SETUP_WITH          158  'to 158'
              130  POP_TOP          

 L.1028       132  LOAD_FAST                'self'
              134  LOAD_METHOD              traverse
              136  LOAD_FAST                'node'
              138  LOAD_ATTR                orelse
              140  CALL_METHOD_1         1  ''
              142  POP_TOP          
              144  POP_BLOCK        
              146  LOAD_CONST               None
              148  DUP_TOP          
              150  DUP_TOP          
              152  CALL_FUNCTION_3       3  ''
              154  POP_TOP          
              156  JUMP_FORWARD        174  'to 174'
            158_0  COME_FROM_WITH      128  '128'
              158  <49>             
              160  POP_JUMP_IF_TRUE    164  'to 164'
              162  <48>             
            164_0  COME_FROM           160  '160'
              164  POP_TOP          
              166  POP_TOP          
              168  POP_TOP          
              170  POP_EXCEPT       
              172  POP_TOP          
            174_0  COME_FROM           156  '156'
            174_1  COME_FROM           110  '110'

Parse error at or near `DUP_TOP' instruction at offset 80

    def visit_If--- This code section failed: ---

 L.1031         0  LOAD_FAST                'self'
                2  LOAD_METHOD              fill
                4  LOAD_STR                 'if '
                6  CALL_METHOD_1         1  ''
                8  POP_TOP          

 L.1032        10  LOAD_FAST                'self'
               12  LOAD_METHOD              traverse
               14  LOAD_FAST                'node'
               16  LOAD_ATTR                test
               18  CALL_METHOD_1         1  ''
               20  POP_TOP          

 L.1033        22  LOAD_FAST                'self'
               24  LOAD_METHOD              block
               26  CALL_METHOD_0         0  ''
               28  SETUP_WITH           58  'to 58'
               30  POP_TOP          

 L.1034        32  LOAD_FAST                'self'
               34  LOAD_METHOD              traverse
               36  LOAD_FAST                'node'
               38  LOAD_ATTR                body
               40  CALL_METHOD_1         1  ''
               42  POP_TOP          
               44  POP_BLOCK        
               46  LOAD_CONST               None
               48  DUP_TOP          
               50  DUP_TOP          
               52  CALL_FUNCTION_3       3  ''
               54  POP_TOP          
               56  JUMP_FORWARD         74  'to 74'
             58_0  COME_FROM_WITH       28  '28'
               58  <49>             
               60  POP_JUMP_IF_TRUE     64  'to 64'
               62  <48>             
             64_0  COME_FROM            60  '60'
               64  POP_TOP          
               66  POP_TOP          
               68  POP_TOP          
               70  POP_EXCEPT       
               72  POP_TOP          
             74_0  COME_FROM            56  '56'

 L.1036        74  LOAD_FAST                'node'
               76  LOAD_ATTR                orelse
               78  POP_JUMP_IF_FALSE   196  'to 196'
               80  LOAD_GLOBAL              len
               82  LOAD_FAST                'node'
               84  LOAD_ATTR                orelse
               86  CALL_FUNCTION_1       1  ''
               88  LOAD_CONST               1
               90  COMPARE_OP               ==
               92  POP_JUMP_IF_FALSE   196  'to 196'
               94  LOAD_GLOBAL              isinstance
               96  LOAD_FAST                'node'
               98  LOAD_ATTR                orelse
              100  LOAD_CONST               0
              102  BINARY_SUBSCR    
              104  LOAD_GLOBAL              If
              106  CALL_FUNCTION_2       2  ''
              108  POP_JUMP_IF_FALSE   196  'to 196'

 L.1037       110  LOAD_FAST                'node'
              112  LOAD_ATTR                orelse
              114  LOAD_CONST               0
              116  BINARY_SUBSCR    
              118  STORE_FAST               'node'

 L.1038       120  LOAD_FAST                'self'
              122  LOAD_METHOD              fill
              124  LOAD_STR                 'elif '
              126  CALL_METHOD_1         1  ''
              128  POP_TOP          

 L.1039       130  LOAD_FAST                'self'
              132  LOAD_METHOD              traverse
              134  LOAD_FAST                'node'
              136  LOAD_ATTR                test
              138  CALL_METHOD_1         1  ''
              140  POP_TOP          

 L.1040       142  LOAD_FAST                'self'
              144  LOAD_METHOD              block
              146  CALL_METHOD_0         0  ''
              148  SETUP_WITH          178  'to 178'
              150  POP_TOP          

 L.1041       152  LOAD_FAST                'self'
              154  LOAD_METHOD              traverse
              156  LOAD_FAST                'node'
              158  LOAD_ATTR                body
              160  CALL_METHOD_1         1  ''
              162  POP_TOP          
              164  POP_BLOCK        
              166  LOAD_CONST               None
              168  DUP_TOP          
              170  DUP_TOP          
              172  CALL_FUNCTION_3       3  ''
              174  POP_TOP          
              176  JUMP_BACK            74  'to 74'
            178_0  COME_FROM_WITH      148  '148'
              178  <49>             
              180  POP_JUMP_IF_TRUE    184  'to 184'
              182  <48>             
            184_0  COME_FROM           180  '180'
              184  POP_TOP          
              186  POP_TOP          
              188  POP_TOP          
              190  POP_EXCEPT       
              192  POP_TOP          
              194  JUMP_BACK            74  'to 74'
            196_0  COME_FROM           108  '108'
            196_1  COME_FROM            92  '92'
            196_2  COME_FROM            78  '78'

 L.1043       196  LOAD_FAST                'node'
              198  LOAD_ATTR                orelse
          200_202  POP_JUMP_IF_FALSE   268  'to 268'

 L.1044       204  LOAD_FAST                'self'
              206  LOAD_METHOD              fill
              208  LOAD_STR                 'else'
              210  CALL_METHOD_1         1  ''
              212  POP_TOP          

 L.1045       214  LOAD_FAST                'self'
              216  LOAD_METHOD              block
              218  CALL_METHOD_0         0  ''
              220  SETUP_WITH          250  'to 250'
              222  POP_TOP          

 L.1046       224  LOAD_FAST                'self'
              226  LOAD_METHOD              traverse
              228  LOAD_FAST                'node'
              230  LOAD_ATTR                orelse
              232  CALL_METHOD_1         1  ''
              234  POP_TOP          
              236  POP_BLOCK        
              238  LOAD_CONST               None
              240  DUP_TOP          
              242  DUP_TOP          
              244  CALL_FUNCTION_3       3  ''
              246  POP_TOP          
              248  JUMP_FORWARD        268  'to 268'
            250_0  COME_FROM_WITH      220  '220'
              250  <49>             
          252_254  POP_JUMP_IF_TRUE    258  'to 258'
              256  <48>             
            258_0  COME_FROM           252  '252'
              258  POP_TOP          
              260  POP_TOP          
              262  POP_TOP          
              264  POP_EXCEPT       
              266  POP_TOP          
            268_0  COME_FROM           248  '248'
            268_1  COME_FROM           200  '200'

Parse error at or near `DUP_TOP' instruction at offset 48

    def visit_While--- This code section failed: ---

 L.1049         0  LOAD_FAST                'self'
                2  LOAD_METHOD              fill
                4  LOAD_STR                 'while '
                6  CALL_METHOD_1         1  ''
                8  POP_TOP          

 L.1050        10  LOAD_FAST                'self'
               12  LOAD_METHOD              traverse
               14  LOAD_FAST                'node'
               16  LOAD_ATTR                test
               18  CALL_METHOD_1         1  ''
               20  POP_TOP          

 L.1051        22  LOAD_FAST                'self'
               24  LOAD_METHOD              block
               26  CALL_METHOD_0         0  ''
               28  SETUP_WITH           58  'to 58'
               30  POP_TOP          

 L.1052        32  LOAD_FAST                'self'
               34  LOAD_METHOD              traverse
               36  LOAD_FAST                'node'
               38  LOAD_ATTR                body
               40  CALL_METHOD_1         1  ''
               42  POP_TOP          
               44  POP_BLOCK        
               46  LOAD_CONST               None
               48  DUP_TOP          
               50  DUP_TOP          
               52  CALL_FUNCTION_3       3  ''
               54  POP_TOP          
               56  JUMP_FORWARD         74  'to 74'
             58_0  COME_FROM_WITH       28  '28'
               58  <49>             
               60  POP_JUMP_IF_TRUE     64  'to 64'
               62  <48>             
             64_0  COME_FROM            60  '60'
               64  POP_TOP          
               66  POP_TOP          
               68  POP_TOP          
               70  POP_EXCEPT       
               72  POP_TOP          
             74_0  COME_FROM            56  '56'

 L.1053        74  LOAD_FAST                'node'
               76  LOAD_ATTR                orelse
               78  POP_JUMP_IF_FALSE   142  'to 142'

 L.1054        80  LOAD_FAST                'self'
               82  LOAD_METHOD              fill
               84  LOAD_STR                 'else'
               86  CALL_METHOD_1         1  ''
               88  POP_TOP          

 L.1055        90  LOAD_FAST                'self'
               92  LOAD_METHOD              block
               94  CALL_METHOD_0         0  ''
               96  SETUP_WITH          126  'to 126'
               98  POP_TOP          

 L.1056       100  LOAD_FAST                'self'
              102  LOAD_METHOD              traverse
              104  LOAD_FAST                'node'
              106  LOAD_ATTR                orelse
              108  CALL_METHOD_1         1  ''
              110  POP_TOP          
              112  POP_BLOCK        
              114  LOAD_CONST               None
              116  DUP_TOP          
              118  DUP_TOP          
              120  CALL_FUNCTION_3       3  ''
              122  POP_TOP          
              124  JUMP_FORWARD        142  'to 142'
            126_0  COME_FROM_WITH       96  '96'
              126  <49>             
              128  POP_JUMP_IF_TRUE    132  'to 132'
              130  <48>             
            132_0  COME_FROM           128  '128'
              132  POP_TOP          
              134  POP_TOP          
              136  POP_TOP          
              138  POP_EXCEPT       
              140  POP_TOP          
            142_0  COME_FROM           124  '124'
            142_1  COME_FROM            78  '78'

Parse error at or near `DUP_TOP' instruction at offset 48

    def visit_With--- This code section failed: ---

 L.1059         0  LOAD_DEREF               'self'
                2  LOAD_METHOD              fill
                4  LOAD_STR                 'with '
                6  CALL_METHOD_1         1  ''
                8  POP_TOP          

 L.1060        10  LOAD_DEREF               'self'
               12  LOAD_METHOD              interleave
               14  LOAD_CLOSURE             'self'
               16  BUILD_TUPLE_1         1 
               18  LOAD_LAMBDA              '<code_object <lambda>>'
               20  LOAD_STR                 '_Unparser.visit_With.<locals>.<lambda>'
               22  MAKE_FUNCTION_8          'closure'
               24  LOAD_DEREF               'self'
               26  LOAD_ATTR                traverse
               28  LOAD_FAST                'node'
               30  LOAD_ATTR                items
               32  CALL_METHOD_3         3  ''
               34  POP_TOP          

 L.1061        36  LOAD_DEREF               'self'
               38  LOAD_ATTR                block
               40  LOAD_DEREF               'self'
               42  LOAD_METHOD              get_type_comment
               44  LOAD_FAST                'node'
               46  CALL_METHOD_1         1  ''
               48  LOAD_CONST               ('extra',)
               50  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
               52  SETUP_WITH           82  'to 82'
               54  POP_TOP          

 L.1062        56  LOAD_DEREF               'self'
               58  LOAD_METHOD              traverse
               60  LOAD_FAST                'node'
               62  LOAD_ATTR                body
               64  CALL_METHOD_1         1  ''
               66  POP_TOP          
               68  POP_BLOCK        
               70  LOAD_CONST               None
               72  DUP_TOP          
               74  DUP_TOP          
               76  CALL_FUNCTION_3       3  ''
               78  POP_TOP          
               80  JUMP_FORWARD         98  'to 98'
             82_0  COME_FROM_WITH       52  '52'
               82  <49>             
               84  POP_JUMP_IF_TRUE     88  'to 88'
               86  <48>             
             88_0  COME_FROM            84  '84'
               88  POP_TOP          
               90  POP_TOP          
               92  POP_TOP          
               94  POP_EXCEPT       
               96  POP_TOP          
             98_0  COME_FROM            80  '80'

Parse error at or near `DUP_TOP' instruction at offset 72

    def visit_AsyncWith--- This code section failed: ---

 L.1065         0  LOAD_DEREF               'self'
                2  LOAD_METHOD              fill
                4  LOAD_STR                 'async with '
                6  CALL_METHOD_1         1  ''
                8  POP_TOP          

 L.1066        10  LOAD_DEREF               'self'
               12  LOAD_METHOD              interleave
               14  LOAD_CLOSURE             'self'
               16  BUILD_TUPLE_1         1 
               18  LOAD_LAMBDA              '<code_object <lambda>>'
               20  LOAD_STR                 '_Unparser.visit_AsyncWith.<locals>.<lambda>'
               22  MAKE_FUNCTION_8          'closure'
               24  LOAD_DEREF               'self'
               26  LOAD_ATTR                traverse
               28  LOAD_FAST                'node'
               30  LOAD_ATTR                items
               32  CALL_METHOD_3         3  ''
               34  POP_TOP          

 L.1067        36  LOAD_DEREF               'self'
               38  LOAD_ATTR                block
               40  LOAD_DEREF               'self'
               42  LOAD_METHOD              get_type_comment
               44  LOAD_FAST                'node'
               46  CALL_METHOD_1         1  ''
               48  LOAD_CONST               ('extra',)
               50  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
               52  SETUP_WITH           82  'to 82'
               54  POP_TOP          

 L.1068        56  LOAD_DEREF               'self'
               58  LOAD_METHOD              traverse
               60  LOAD_FAST                'node'
               62  LOAD_ATTR                body
               64  CALL_METHOD_1         1  ''
               66  POP_TOP          
               68  POP_BLOCK        
               70  LOAD_CONST               None
               72  DUP_TOP          
               74  DUP_TOP          
               76  CALL_FUNCTION_3       3  ''
               78  POP_TOP          
               80  JUMP_FORWARD         98  'to 98'
             82_0  COME_FROM_WITH       52  '52'
               82  <49>             
               84  POP_JUMP_IF_TRUE     88  'to 88'
               86  <48>             
             88_0  COME_FROM            84  '84'
               88  POP_TOP          
               90  POP_TOP          
               92  POP_TOP          
               94  POP_EXCEPT       
               96  POP_TOP          
             98_0  COME_FROM            80  '80'

Parse error at or near `DUP_TOP' instruction at offset 72

    def visit_JoinedStr(self, node):
        self.write'f'
        self._fstring_JoinedStrnodeself.buffer_writer
        self.writerepr(self.buffer)

    def visit_FormattedValue(self, node):
        self.write'f'
        self._fstring_FormattedValuenodeself.buffer_writer
        self.writerepr(self.buffer)

    def _fstring_JoinedStr(self, node, write):
        for value in node.values:
            meth = getattr(self, '_fstring_' + type(value).__name__)
            meth(value, write)

    def _fstring_Constant(self, node, write):
        if not isinstance(node.value, str):
            raise ValueError('Constants inside JoinedStr should be a string.')
        value = node.value.replace'{''{{'.replace'}''}}'
        write(value)

    def _fstring_FormattedValue--- This code section failed: ---

 L.1092         0  LOAD_FAST                'write'
                2  LOAD_STR                 '{'
                4  CALL_FUNCTION_1       1  ''
                6  POP_TOP          

 L.1093         8  LOAD_GLOBAL              type
               10  LOAD_FAST                'self'
               12  CALL_FUNCTION_1       1  ''
               14  CALL_FUNCTION_0       0  ''
               16  STORE_FAST               'unparser'

 L.1094        18  LOAD_FAST                'unparser'
               20  LOAD_METHOD              set_precedence
               22  LOAD_GLOBAL              _Precedence
               24  LOAD_ATTR                TEST
               26  LOAD_METHOD              next
               28  CALL_METHOD_0         0  ''
               30  LOAD_FAST                'node'
               32  LOAD_ATTR                value
               34  CALL_METHOD_2         2  ''
               36  POP_TOP          

 L.1095        38  LOAD_FAST                'unparser'
               40  LOAD_METHOD              visit
               42  LOAD_FAST                'node'
               44  LOAD_ATTR                value
               46  CALL_METHOD_1         1  ''
               48  STORE_FAST               'expr'

 L.1096        50  LOAD_FAST                'expr'
               52  LOAD_METHOD              startswith
               54  LOAD_STR                 '{'
               56  CALL_METHOD_1         1  ''
               58  POP_JUMP_IF_FALSE    68  'to 68'

 L.1097        60  LOAD_FAST                'write'
               62  LOAD_STR                 ' '
               64  CALL_FUNCTION_1       1  ''
               66  POP_TOP          
             68_0  COME_FROM            58  '58'

 L.1098        68  LOAD_FAST                'write'
               70  LOAD_FAST                'expr'
               72  CALL_FUNCTION_1       1  ''
               74  POP_TOP          

 L.1099        76  LOAD_FAST                'node'
               78  LOAD_ATTR                conversion
               80  LOAD_CONST               -1
               82  COMPARE_OP               !=
               84  POP_JUMP_IF_FALSE   126  'to 126'

 L.1100        86  LOAD_GLOBAL              chr
               88  LOAD_FAST                'node'
               90  LOAD_ATTR                conversion
               92  CALL_FUNCTION_1       1  ''
               94  STORE_FAST               'conversion'

 L.1101        96  LOAD_FAST                'conversion'
               98  LOAD_STR                 'sra'
              100  <118>                 1  ''
              102  POP_JUMP_IF_FALSE   112  'to 112'

 L.1102       104  LOAD_GLOBAL              ValueError
              106  LOAD_STR                 'Unknown f-string conversion.'
              108  CALL_FUNCTION_1       1  ''
              110  RAISE_VARARGS_1       1  'exception instance'
            112_0  COME_FROM           102  '102'

 L.1103       112  LOAD_FAST                'write'
              114  LOAD_STR                 '!'
              116  LOAD_FAST                'conversion'
              118  FORMAT_VALUE          0  ''
              120  BUILD_STRING_2        2 
              122  CALL_FUNCTION_1       1  ''
              124  POP_TOP          
            126_0  COME_FROM            84  '84'

 L.1104       126  LOAD_FAST                'node'
              128  LOAD_ATTR                format_spec
              130  POP_JUMP_IF_FALSE   174  'to 174'

 L.1105       132  LOAD_FAST                'write'
              134  LOAD_STR                 ':'
              136  CALL_FUNCTION_1       1  ''
              138  POP_TOP          

 L.1106       140  LOAD_GLOBAL              getattr
              142  LOAD_FAST                'self'
              144  LOAD_STR                 '_fstring_'
              146  LOAD_GLOBAL              type
              148  LOAD_FAST                'node'
              150  LOAD_ATTR                format_spec
              152  CALL_FUNCTION_1       1  ''
              154  LOAD_ATTR                __name__
              156  BINARY_ADD       
              158  CALL_FUNCTION_2       2  ''
              160  STORE_FAST               'meth'

 L.1107       162  LOAD_FAST                'meth'
              164  LOAD_FAST                'node'
              166  LOAD_ATTR                format_spec
              168  LOAD_FAST                'write'
              170  CALL_FUNCTION_2       2  ''
              172  POP_TOP          
            174_0  COME_FROM           130  '130'

 L.1108       174  LOAD_FAST                'write'
              176  LOAD_STR                 '}'
              178  CALL_FUNCTION_1       1  ''
              180  POP_TOP          

Parse error at or near `<118>' instruction at offset 100

    def visit_Name(self, node):
        self.writenode.id

    def _write_docstring(self, node):

        def esc_char--- This code section failed: ---

 L.1115         0  LOAD_FAST                'c'
                2  LOAD_CONST               ('\n', '\t')
                4  <118>                 0  ''
                6  POP_JUMP_IF_FALSE    12  'to 12'

 L.1120         8  LOAD_FAST                'c'
               10  RETURN_VALUE     
             12_0  COME_FROM             6  '6'

 L.1121        12  LOAD_FAST                'c'
               14  LOAD_METHOD              encode
               16  LOAD_STR                 'unicode_escape'
               18  CALL_METHOD_1         1  ''
               20  LOAD_METHOD              decode
               22  LOAD_STR                 'ascii'
               24  CALL_METHOD_1         1  ''
               26  RETURN_VALUE     
               -1  RETURN_LAST      

Parse error at or near `None' instruction at offset -1

        self.fill
        if node.kind == 'u':
            self.write'u'
        value = node.value
        if value:
            value = ''.joinmap(esc_char, value)
            if value[(-1)] == '"':
                value = value.replace'"''\\"'(-1)
            value = value.replace'"""''""\\"'
        self.writef'"""{value}"""'

    def _write_constant(self, value):
        if isinstance(value, (float, complex)):
            self.writerepr(value).replace'inf'_INFSTR
        else:
            self.writerepr(value)

    def visit_Constant--- This code section failed: ---

 L.1145         0  LOAD_FAST                'node'
                2  LOAD_ATTR                value
                4  STORE_FAST               'value'

 L.1146         6  LOAD_GLOBAL              isinstance
                8  LOAD_FAST                'value'
               10  LOAD_GLOBAL              tuple
               12  CALL_FUNCTION_2       2  ''
               14  POP_JUMP_IF_FALSE    76  'to 76'

 L.1147        16  LOAD_FAST                'self'
               18  LOAD_METHOD              delimit
               20  LOAD_STR                 '('
               22  LOAD_STR                 ')'
               24  CALL_METHOD_2         2  ''
               26  SETUP_WITH           58  'to 58'
               28  POP_TOP          

 L.1148        30  LOAD_FAST                'self'
               32  LOAD_METHOD              items_view
               34  LOAD_FAST                'self'
               36  LOAD_ATTR                _write_constant
               38  LOAD_FAST                'value'
               40  CALL_METHOD_2         2  ''
               42  POP_TOP          
               44  POP_BLOCK        
               46  LOAD_CONST               None
               48  DUP_TOP          
               50  DUP_TOP          
               52  CALL_FUNCTION_3       3  ''
               54  POP_TOP          
               56  JUMP_ABSOLUTE       128  'to 128'
             58_0  COME_FROM_WITH       26  '26'
               58  <49>             
               60  POP_JUMP_IF_TRUE     64  'to 64'
               62  <48>             
             64_0  COME_FROM            60  '60'
               64  POP_TOP          
               66  POP_TOP          
               68  POP_TOP          
               70  POP_EXCEPT       
               72  POP_TOP          
               74  JUMP_FORWARD        128  'to 128'
             76_0  COME_FROM            14  '14'

 L.1149        76  LOAD_FAST                'value'
               78  LOAD_CONST               Ellipsis
               80  <117>                 0  ''
               82  POP_JUMP_IF_FALSE    96  'to 96'

 L.1150        84  LOAD_FAST                'self'
               86  LOAD_METHOD              write
               88  LOAD_STR                 '...'
               90  CALL_METHOD_1         1  ''
               92  POP_TOP          
               94  JUMP_FORWARD        128  'to 128'
             96_0  COME_FROM            82  '82'

 L.1152        96  LOAD_FAST                'node'
               98  LOAD_ATTR                kind
              100  LOAD_STR                 'u'
              102  COMPARE_OP               ==
              104  POP_JUMP_IF_FALSE   116  'to 116'

 L.1153       106  LOAD_FAST                'self'
              108  LOAD_METHOD              write
              110  LOAD_STR                 'u'
              112  CALL_METHOD_1         1  ''
              114  POP_TOP          
            116_0  COME_FROM           104  '104'

 L.1154       116  LOAD_FAST                'self'
              118  LOAD_METHOD              _write_constant
              120  LOAD_FAST                'node'
              122  LOAD_ATTR                value
              124  CALL_METHOD_1         1  ''
              126  POP_TOP          
            128_0  COME_FROM            94  '94'
            128_1  COME_FROM            74  '74'

Parse error at or near `DUP_TOP' instruction at offset 48

    def visit_List--- This code section failed: ---

 L.1157         0  LOAD_DEREF               'self'
                2  LOAD_METHOD              delimit
                4  LOAD_STR                 '['
                6  LOAD_STR                 ']'
                8  CALL_METHOD_2         2  ''
               10  SETUP_WITH           54  'to 54'
               12  POP_TOP          

 L.1158        14  LOAD_DEREF               'self'
               16  LOAD_METHOD              interleave
               18  LOAD_CLOSURE             'self'
               20  BUILD_TUPLE_1         1 
               22  LOAD_LAMBDA              '<code_object <lambda>>'
               24  LOAD_STR                 '_Unparser.visit_List.<locals>.<lambda>'
               26  MAKE_FUNCTION_8          'closure'
               28  LOAD_DEREF               'self'
               30  LOAD_ATTR                traverse
               32  LOAD_FAST                'node'
               34  LOAD_ATTR                elts
               36  CALL_METHOD_3         3  ''
               38  POP_TOP          
               40  POP_BLOCK        
               42  LOAD_CONST               None
               44  DUP_TOP          
               46  DUP_TOP          
               48  CALL_FUNCTION_3       3  ''
               50  POP_TOP          
               52  JUMP_FORWARD         70  'to 70'
             54_0  COME_FROM_WITH       10  '10'
               54  <49>             
               56  POP_JUMP_IF_TRUE     60  'to 60'
               58  <48>             
             60_0  COME_FROM            56  '56'
               60  POP_TOP          
               62  POP_TOP          
               64  POP_TOP          
               66  POP_EXCEPT       
               68  POP_TOP          
             70_0  COME_FROM            52  '52'

Parse error at or near `DUP_TOP' instruction at offset 44

    def visit_ListComp--- This code section failed: ---

 L.1161         0  LOAD_FAST                'self'
                2  LOAD_METHOD              delimit
                4  LOAD_STR                 '['
                6  LOAD_STR                 ']'
                8  CALL_METHOD_2         2  ''
               10  SETUP_WITH           62  'to 62'
               12  POP_TOP          

 L.1162        14  LOAD_FAST                'self'
               16  LOAD_METHOD              traverse
               18  LOAD_FAST                'node'
               20  LOAD_ATTR                elt
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L.1163        26  LOAD_FAST                'node'
               28  LOAD_ATTR                generators
               30  GET_ITER         
               32  FOR_ITER             48  'to 48'
               34  STORE_FAST               'gen'

 L.1164        36  LOAD_FAST                'self'
               38  LOAD_METHOD              traverse
               40  LOAD_FAST                'gen'
               42  CALL_METHOD_1         1  ''
               44  POP_TOP          
               46  JUMP_BACK            32  'to 32'
               48  POP_BLOCK        
               50  LOAD_CONST               None
               52  DUP_TOP          
               54  DUP_TOP          
               56  CALL_FUNCTION_3       3  ''
               58  POP_TOP          
               60  JUMP_FORWARD         78  'to 78'
             62_0  COME_FROM_WITH       10  '10'
               62  <49>             
               64  POP_JUMP_IF_TRUE     68  'to 68'
               66  <48>             
             68_0  COME_FROM            64  '64'
               68  POP_TOP          
               70  POP_TOP          
               72  POP_TOP          
               74  POP_EXCEPT       
               76  POP_TOP          
             78_0  COME_FROM            60  '60'

Parse error at or near `DUP_TOP' instruction at offset 54

    def visit_GeneratorExp--- This code section failed: ---

 L.1167         0  LOAD_FAST                'self'
                2  LOAD_METHOD              delimit
                4  LOAD_STR                 '('
                6  LOAD_STR                 ')'
                8  CALL_METHOD_2         2  ''
               10  SETUP_WITH           62  'to 62'
               12  POP_TOP          

 L.1168        14  LOAD_FAST                'self'
               16  LOAD_METHOD              traverse
               18  LOAD_FAST                'node'
               20  LOAD_ATTR                elt
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L.1169        26  LOAD_FAST                'node'
               28  LOAD_ATTR                generators
               30  GET_ITER         
               32  FOR_ITER             48  'to 48'
               34  STORE_FAST               'gen'

 L.1170        36  LOAD_FAST                'self'
               38  LOAD_METHOD              traverse
               40  LOAD_FAST                'gen'
               42  CALL_METHOD_1         1  ''
               44  POP_TOP          
               46  JUMP_BACK            32  'to 32'
               48  POP_BLOCK        
               50  LOAD_CONST               None
               52  DUP_TOP          
               54  DUP_TOP          
               56  CALL_FUNCTION_3       3  ''
               58  POP_TOP          
               60  JUMP_FORWARD         78  'to 78'
             62_0  COME_FROM_WITH       10  '10'
               62  <49>             
               64  POP_JUMP_IF_TRUE     68  'to 68'
               66  <48>             
             68_0  COME_FROM            64  '64'
               68  POP_TOP          
               70  POP_TOP          
               72  POP_TOP          
               74  POP_EXCEPT       
               76  POP_TOP          
             78_0  COME_FROM            60  '60'

Parse error at or near `DUP_TOP' instruction at offset 54

    def visit_SetComp--- This code section failed: ---

 L.1173         0  LOAD_FAST                'self'
                2  LOAD_METHOD              delimit
                4  LOAD_STR                 '{'
                6  LOAD_STR                 '}'
                8  CALL_METHOD_2         2  ''
               10  SETUP_WITH           62  'to 62'
               12  POP_TOP          

 L.1174        14  LOAD_FAST                'self'
               16  LOAD_METHOD              traverse
               18  LOAD_FAST                'node'
               20  LOAD_ATTR                elt
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L.1175        26  LOAD_FAST                'node'
               28  LOAD_ATTR                generators
               30  GET_ITER         
               32  FOR_ITER             48  'to 48'
               34  STORE_FAST               'gen'

 L.1176        36  LOAD_FAST                'self'
               38  LOAD_METHOD              traverse
               40  LOAD_FAST                'gen'
               42  CALL_METHOD_1         1  ''
               44  POP_TOP          
               46  JUMP_BACK            32  'to 32'
               48  POP_BLOCK        
               50  LOAD_CONST               None
               52  DUP_TOP          
               54  DUP_TOP          
               56  CALL_FUNCTION_3       3  ''
               58  POP_TOP          
               60  JUMP_FORWARD         78  'to 78'
             62_0  COME_FROM_WITH       10  '10'
               62  <49>             
               64  POP_JUMP_IF_TRUE     68  'to 68'
               66  <48>             
             68_0  COME_FROM            64  '64'
               68  POP_TOP          
               70  POP_TOP          
               72  POP_TOP          
               74  POP_EXCEPT       
               76  POP_TOP          
             78_0  COME_FROM            60  '60'

Parse error at or near `DUP_TOP' instruction at offset 54

    def visit_DictComp--- This code section failed: ---

 L.1179         0  LOAD_FAST                'self'
                2  LOAD_METHOD              delimit
                4  LOAD_STR                 '{'
                6  LOAD_STR                 '}'
                8  CALL_METHOD_2         2  ''
               10  SETUP_WITH           84  'to 84'
               12  POP_TOP          

 L.1180        14  LOAD_FAST                'self'
               16  LOAD_METHOD              traverse
               18  LOAD_FAST                'node'
               20  LOAD_ATTR                key
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L.1181        26  LOAD_FAST                'self'
               28  LOAD_METHOD              write
               30  LOAD_STR                 ': '
               32  CALL_METHOD_1         1  ''
               34  POP_TOP          

 L.1182        36  LOAD_FAST                'self'
               38  LOAD_METHOD              traverse
               40  LOAD_FAST                'node'
               42  LOAD_ATTR                value
               44  CALL_METHOD_1         1  ''
               46  POP_TOP          

 L.1183        48  LOAD_FAST                'node'
               50  LOAD_ATTR                generators
               52  GET_ITER         
               54  FOR_ITER             70  'to 70'
               56  STORE_FAST               'gen'

 L.1184        58  LOAD_FAST                'self'
               60  LOAD_METHOD              traverse
               62  LOAD_FAST                'gen'
               64  CALL_METHOD_1         1  ''
               66  POP_TOP          
               68  JUMP_BACK            54  'to 54'
               70  POP_BLOCK        
               72  LOAD_CONST               None
               74  DUP_TOP          
               76  DUP_TOP          
               78  CALL_FUNCTION_3       3  ''
               80  POP_TOP          
               82  JUMP_FORWARD        100  'to 100'
             84_0  COME_FROM_WITH       10  '10'
               84  <49>             
               86  POP_JUMP_IF_TRUE     90  'to 90'
               88  <48>             
             90_0  COME_FROM            86  '86'
               90  POP_TOP          
               92  POP_TOP          
               94  POP_TOP          
               96  POP_EXCEPT       
               98  POP_TOP          
            100_0  COME_FROM            82  '82'

Parse error at or near `DUP_TOP' instruction at offset 76

    def visit_comprehension--- This code section failed: ---

 L.1187         0  LOAD_FAST                'node'
                2  LOAD_ATTR                is_async
                4  POP_JUMP_IF_FALSE    18  'to 18'

 L.1188         6  LOAD_FAST                'self'
                8  LOAD_METHOD              write
               10  LOAD_STR                 ' async for '
               12  CALL_METHOD_1         1  ''
               14  POP_TOP          
               16  JUMP_FORWARD         28  'to 28'
             18_0  COME_FROM             4  '4'

 L.1190        18  LOAD_FAST                'self'
               20  LOAD_METHOD              write
               22  LOAD_STR                 ' for '
               24  CALL_METHOD_1         1  ''
               26  POP_TOP          
             28_0  COME_FROM            16  '16'

 L.1191        28  LOAD_FAST                'self'
               30  LOAD_METHOD              set_precedence
               32  LOAD_GLOBAL              _Precedence
               34  LOAD_ATTR                TUPLE
               36  LOAD_FAST                'node'
               38  LOAD_ATTR                target
               40  CALL_METHOD_2         2  ''
               42  POP_TOP          

 L.1192        44  LOAD_FAST                'self'
               46  LOAD_METHOD              traverse
               48  LOAD_FAST                'node'
               50  LOAD_ATTR                target
               52  CALL_METHOD_1         1  ''
               54  POP_TOP          

 L.1193        56  LOAD_FAST                'self'
               58  LOAD_METHOD              write
               60  LOAD_STR                 ' in '
               62  CALL_METHOD_1         1  ''
               64  POP_TOP          

 L.1194        66  LOAD_FAST                'self'
               68  LOAD_ATTR                set_precedence
               70  LOAD_GLOBAL              _Precedence
               72  LOAD_ATTR                TEST
               74  LOAD_METHOD              next
               76  CALL_METHOD_0         0  ''
               78  LOAD_FAST                'node'
               80  LOAD_ATTR                iter
               82  BUILD_LIST_2          2 
               84  LOAD_FAST                'node'
               86  LOAD_ATTR                ifs
               88  CALL_FINALLY         91  'to 91'
               90  WITH_CLEANUP_FINISH
               92  CALL_FUNCTION_EX      0  'positional arguments only'
               94  POP_TOP          

 L.1195        96  LOAD_FAST                'self'
               98  LOAD_METHOD              traverse
              100  LOAD_FAST                'node'
              102  LOAD_ATTR                iter
              104  CALL_METHOD_1         1  ''
              106  POP_TOP          

 L.1196       108  LOAD_FAST                'node'
              110  LOAD_ATTR                ifs
              112  GET_ITER         
              114  FOR_ITER            140  'to 140'
              116  STORE_FAST               'if_clause'

 L.1197       118  LOAD_FAST                'self'
              120  LOAD_METHOD              write
              122  LOAD_STR                 ' if '
              124  CALL_METHOD_1         1  ''
              126  POP_TOP          

 L.1198       128  LOAD_FAST                'self'
              130  LOAD_METHOD              traverse
              132  LOAD_FAST                'if_clause'
              134  CALL_METHOD_1         1  ''
              136  POP_TOP          
              138  JUMP_BACK           114  'to 114'

Parse error at or near `CALL_FINALLY' instruction at offset 88

    def visit_IfExp--- This code section failed: ---

 L.1201         0  LOAD_FAST                'self'
                2  LOAD_METHOD              require_parens
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                TEST
                8  LOAD_FAST                'node'
               10  CALL_METHOD_2         2  ''
               12  SETUP_WITH          126  'to 126'
               14  POP_TOP          

 L.1202        16  LOAD_FAST                'self'
               18  LOAD_METHOD              set_precedence
               20  LOAD_GLOBAL              _Precedence
               22  LOAD_ATTR                TEST
               24  LOAD_METHOD              next
               26  CALL_METHOD_0         0  ''
               28  LOAD_FAST                'node'
               30  LOAD_ATTR                body
               32  LOAD_FAST                'node'
               34  LOAD_ATTR                test
               36  CALL_METHOD_3         3  ''
               38  POP_TOP          

 L.1203        40  LOAD_FAST                'self'
               42  LOAD_METHOD              traverse
               44  LOAD_FAST                'node'
               46  LOAD_ATTR                body
               48  CALL_METHOD_1         1  ''
               50  POP_TOP          

 L.1204        52  LOAD_FAST                'self'
               54  LOAD_METHOD              write
               56  LOAD_STR                 ' if '
               58  CALL_METHOD_1         1  ''
               60  POP_TOP          

 L.1205        62  LOAD_FAST                'self'
               64  LOAD_METHOD              traverse
               66  LOAD_FAST                'node'
               68  LOAD_ATTR                test
               70  CALL_METHOD_1         1  ''
               72  POP_TOP          

 L.1206        74  LOAD_FAST                'self'
               76  LOAD_METHOD              write
               78  LOAD_STR                 ' else '
               80  CALL_METHOD_1         1  ''
               82  POP_TOP          

 L.1207        84  LOAD_FAST                'self'
               86  LOAD_METHOD              set_precedence
               88  LOAD_GLOBAL              _Precedence
               90  LOAD_ATTR                TEST
               92  LOAD_FAST                'node'
               94  LOAD_ATTR                orelse
               96  CALL_METHOD_2         2  ''
               98  POP_TOP          

 L.1208       100  LOAD_FAST                'self'
              102  LOAD_METHOD              traverse
              104  LOAD_FAST                'node'
              106  LOAD_ATTR                orelse
              108  CALL_METHOD_1         1  ''
              110  POP_TOP          
              112  POP_BLOCK        
              114  LOAD_CONST               None
              116  DUP_TOP          
              118  DUP_TOP          
              120  CALL_FUNCTION_3       3  ''
              122  POP_TOP          
              124  JUMP_FORWARD        142  'to 142'
            126_0  COME_FROM_WITH       12  '12'
              126  <49>             
              128  POP_JUMP_IF_TRUE    132  'to 132'
              130  <48>             
            132_0  COME_FROM           128  '128'
              132  POP_TOP          
              134  POP_TOP          
              136  POP_TOP          
              138  POP_EXCEPT       
              140  POP_TOP          
            142_0  COME_FROM           124  '124'

Parse error at or near `DUP_TOP' instruction at offset 116

    def visit_Set--- This code section failed: ---

 L.1211         0  LOAD_FAST                'node'
                2  LOAD_ATTR                elts
                4  POP_JUMP_IF_TRUE     14  'to 14'

 L.1212         6  LOAD_GLOBAL              ValueError
                8  LOAD_STR                 'Set node should have at least one item'
               10  CALL_FUNCTION_1       1  ''
               12  RAISE_VARARGS_1       1  'exception instance'
             14_0  COME_FROM             4  '4'

 L.1213        14  LOAD_DEREF               'self'
               16  LOAD_METHOD              delimit
               18  LOAD_STR                 '{'
               20  LOAD_STR                 '}'
               22  CALL_METHOD_2         2  ''
               24  SETUP_WITH           68  'to 68'
               26  POP_TOP          

 L.1214        28  LOAD_DEREF               'self'
               30  LOAD_METHOD              interleave
               32  LOAD_CLOSURE             'self'
               34  BUILD_TUPLE_1         1 
               36  LOAD_LAMBDA              '<code_object <lambda>>'
               38  LOAD_STR                 '_Unparser.visit_Set.<locals>.<lambda>'
               40  MAKE_FUNCTION_8          'closure'
               42  LOAD_DEREF               'self'
               44  LOAD_ATTR                traverse
               46  LOAD_FAST                'node'
               48  LOAD_ATTR                elts
               50  CALL_METHOD_3         3  ''
               52  POP_TOP          
               54  POP_BLOCK        
               56  LOAD_CONST               None
               58  DUP_TOP          
               60  DUP_TOP          
               62  CALL_FUNCTION_3       3  ''
               64  POP_TOP          
               66  JUMP_FORWARD         84  'to 84'
             68_0  COME_FROM_WITH       24  '24'
               68  <49>             
               70  POP_JUMP_IF_TRUE     74  'to 74'
               72  <48>             
             74_0  COME_FROM            70  '70'
               74  POP_TOP          
               76  POP_TOP          
               78  POP_TOP          
               80  POP_EXCEPT       
               82  POP_TOP          
             84_0  COME_FROM            66  '66'

Parse error at or near `DUP_TOP' instruction at offset 58

    def visit_Dict--- This code section failed: ---

 L.1217         0  LOAD_CLOSURE             'self'
                2  BUILD_TUPLE_1         1 
                4  LOAD_CODE                <code_object write_key_value_pair>
                6  LOAD_STR                 '_Unparser.visit_Dict.<locals>.write_key_value_pair'
                8  MAKE_FUNCTION_8          'closure'
               10  STORE_DEREF              'write_key_value_pair'

 L.1222        12  LOAD_CLOSURE             'self'
               14  LOAD_CLOSURE             'write_key_value_pair'
               16  BUILD_TUPLE_2         2 
               18  LOAD_CODE                <code_object write_item>
               20  LOAD_STR                 '_Unparser.visit_Dict.<locals>.write_item'
               22  MAKE_FUNCTION_8          'closure'
               24  STORE_FAST               'write_item'

 L.1233        26  LOAD_DEREF               'self'
               28  LOAD_METHOD              delimit
               30  LOAD_STR                 '{'
               32  LOAD_STR                 '}'
               34  CALL_METHOD_2         2  ''
               36  SETUP_WITH           86  'to 86'
               38  POP_TOP          

 L.1234        40  LOAD_DEREF               'self'
               42  LOAD_METHOD              interleave

 L.1235        44  LOAD_CLOSURE             'self'
               46  BUILD_TUPLE_1         1 
               48  LOAD_LAMBDA              '<code_object <lambda>>'
               50  LOAD_STR                 '_Unparser.visit_Dict.<locals>.<lambda>'
               52  MAKE_FUNCTION_8          'closure'
               54  LOAD_FAST                'write_item'
               56  LOAD_GLOBAL              zip
               58  LOAD_FAST                'node'
               60  LOAD_ATTR                keys
               62  LOAD_FAST                'node'
               64  LOAD_ATTR                values
               66  CALL_FUNCTION_2       2  ''

 L.1234        68  CALL_METHOD_3         3  ''
               70  POP_TOP          
               72  POP_BLOCK        
               74  LOAD_CONST               None
               76  DUP_TOP          
               78  DUP_TOP          
               80  CALL_FUNCTION_3       3  ''
               82  POP_TOP          
               84  JUMP_FORWARD        102  'to 102'
             86_0  COME_FROM_WITH       36  '36'
               86  <49>             
               88  POP_JUMP_IF_TRUE     92  'to 92'
               90  <48>             
             92_0  COME_FROM            88  '88'
               92  POP_TOP          
               94  POP_TOP          
               96  POP_TOP          
               98  POP_EXCEPT       
              100  POP_TOP          
            102_0  COME_FROM            84  '84'

Parse error at or near `DUP_TOP' instruction at offset 76

    def visit_Tuple--- This code section failed: ---

 L.1239         0  LOAD_FAST                'self'
                2  LOAD_METHOD              delimit
                4  LOAD_STR                 '('
                6  LOAD_STR                 ')'
                8  CALL_METHOD_2         2  ''
               10  SETUP_WITH           44  'to 44'
               12  POP_TOP          

 L.1240        14  LOAD_FAST                'self'
               16  LOAD_METHOD              items_view
               18  LOAD_FAST                'self'
               20  LOAD_ATTR                traverse
               22  LOAD_FAST                'node'
               24  LOAD_ATTR                elts
               26  CALL_METHOD_2         2  ''
               28  POP_TOP          
               30  POP_BLOCK        
               32  LOAD_CONST               None
               34  DUP_TOP          
               36  DUP_TOP          
               38  CALL_FUNCTION_3       3  ''
               40  POP_TOP          
               42  JUMP_FORWARD         60  'to 60'
             44_0  COME_FROM_WITH       10  '10'
               44  <49>             
               46  POP_JUMP_IF_TRUE     50  'to 50'
               48  <48>             
             50_0  COME_FROM            46  '46'
               50  POP_TOP          
               52  POP_TOP          
               54  POP_TOP          
               56  POP_EXCEPT       
               58  POP_TOP          
             60_0  COME_FROM            42  '42'

Parse error at or near `DUP_TOP' instruction at offset 34

    unop = {'Invert':'~', 
     'Not':'not',  'UAdd':'+',  'USub':'-'}
    unop_precedence = {'not':_Precedence.NOT, 
     '~':_Precedence.FACTOR, 
     '+':_Precedence.FACTOR, 
     '-':_Precedence.FACTOR}

    def visit_UnaryOp--- This code section failed: ---

 L.1251         0  LOAD_FAST                'self'
                2  LOAD_ATTR                unop
                4  LOAD_FAST                'node'
                6  LOAD_ATTR                op
                8  LOAD_ATTR                __class__
               10  LOAD_ATTR                __name__
               12  BINARY_SUBSCR    
               14  STORE_FAST               'operator'

 L.1252        16  LOAD_FAST                'self'
               18  LOAD_ATTR                unop_precedence
               20  LOAD_FAST                'operator'
               22  BINARY_SUBSCR    
               24  STORE_FAST               'operator_precedence'

 L.1253        26  LOAD_FAST                'self'
               28  LOAD_METHOD              require_parens
               30  LOAD_FAST                'operator_precedence'
               32  LOAD_FAST                'node'
               34  CALL_METHOD_2         2  ''
               36  SETUP_WITH          110  'to 110'
               38  POP_TOP          

 L.1254        40  LOAD_FAST                'self'
               42  LOAD_METHOD              write
               44  LOAD_FAST                'operator'
               46  CALL_METHOD_1         1  ''
               48  POP_TOP          

 L.1257        50  LOAD_FAST                'operator_precedence'
               52  LOAD_GLOBAL              _Precedence
               54  LOAD_ATTR                FACTOR
               56  <117>                 1  ''
               58  POP_JUMP_IF_FALSE    70  'to 70'

 L.1258        60  LOAD_FAST                'self'
               62  LOAD_METHOD              write
               64  LOAD_STR                 ' '
               66  CALL_METHOD_1         1  ''
               68  POP_TOP          
             70_0  COME_FROM            58  '58'

 L.1259        70  LOAD_FAST                'self'
               72  LOAD_METHOD              set_precedence
               74  LOAD_FAST                'operator_precedence'
               76  LOAD_FAST                'node'
               78  LOAD_ATTR                operand
               80  CALL_METHOD_2         2  ''
               82  POP_TOP          

 L.1260        84  LOAD_FAST                'self'
               86  LOAD_METHOD              traverse
               88  LOAD_FAST                'node'
               90  LOAD_ATTR                operand
               92  CALL_METHOD_1         1  ''
               94  POP_TOP          
               96  POP_BLOCK        
               98  LOAD_CONST               None
              100  DUP_TOP          
              102  DUP_TOP          
              104  CALL_FUNCTION_3       3  ''
              106  POP_TOP          
              108  JUMP_FORWARD        126  'to 126'
            110_0  COME_FROM_WITH       36  '36'
              110  <49>             
              112  POP_JUMP_IF_TRUE    116  'to 116'
              114  <48>             
            116_0  COME_FROM           112  '112'
              116  POP_TOP          
              118  POP_TOP          
              120  POP_TOP          
              122  POP_EXCEPT       
              124  POP_TOP          
            126_0  COME_FROM           108  '108'

Parse error at or near `<117>' instruction at offset 56

    binop = {'Add':'+', 
     'Sub':'-', 
     'Mult':'*', 
     'MatMult':'@', 
     'Div':'/', 
     'Mod':'%', 
     'LShift':'<<', 
     'RShift':'>>', 
     'BitOr':'|', 
     'BitXor':'^', 
     'BitAnd':'&', 
     'FloorDiv':'//', 
     'Pow':'**'}
    binop_precedence = {'+':_Precedence.ARITH, 
     '-':_Precedence.ARITH, 
     '*':_Precedence.TERM, 
     '@':_Precedence.TERM, 
     '/':_Precedence.TERM, 
     '%':_Precedence.TERM, 
     '<<':_Precedence.SHIFT, 
     '>>':_Precedence.SHIFT, 
     '|':_Precedence.BOR, 
     '^':_Precedence.BXOR, 
     '&':_Precedence.BAND, 
     '//':_Precedence.TERM, 
     '**':_Precedence.POWER}
    binop_rassoc = frozenset(('**', ))

    def visit_BinOp--- This code section failed: ---

 L.1296         0  LOAD_FAST                'self'
                2  LOAD_ATTR                binop
                4  LOAD_FAST                'node'
                6  LOAD_ATTR                op
                8  LOAD_ATTR                __class__
               10  LOAD_ATTR                __name__
               12  BINARY_SUBSCR    
               14  STORE_FAST               'operator'

 L.1297        16  LOAD_FAST                'self'
               18  LOAD_ATTR                binop_precedence
               20  LOAD_FAST                'operator'
               22  BINARY_SUBSCR    
               24  STORE_FAST               'operator_precedence'

 L.1298        26  LOAD_FAST                'self'
               28  LOAD_METHOD              require_parens
               30  LOAD_FAST                'operator_precedence'
               32  LOAD_FAST                'node'
               34  CALL_METHOD_2         2  ''
               36  SETUP_WITH          160  'to 160'
               38  POP_TOP          

 L.1299        40  LOAD_FAST                'operator'
               42  LOAD_FAST                'self'
               44  LOAD_ATTR                binop_rassoc
               46  <118>                 0  ''
               48  POP_JUMP_IF_FALSE    64  'to 64'

 L.1300        50  LOAD_FAST                'operator_precedence'
               52  LOAD_METHOD              next
               54  CALL_METHOD_0         0  ''
               56  STORE_FAST               'left_precedence'

 L.1301        58  LOAD_FAST                'operator_precedence'
               60  STORE_FAST               'right_precedence'
               62  JUMP_FORWARD         76  'to 76'
             64_0  COME_FROM            48  '48'

 L.1303        64  LOAD_FAST                'operator_precedence'
               66  STORE_FAST               'left_precedence'

 L.1304        68  LOAD_FAST                'operator_precedence'
               70  LOAD_METHOD              next
               72  CALL_METHOD_0         0  ''
               74  STORE_FAST               'right_precedence'
             76_0  COME_FROM            62  '62'

 L.1306        76  LOAD_FAST                'self'
               78  LOAD_METHOD              set_precedence
               80  LOAD_FAST                'left_precedence'
               82  LOAD_FAST                'node'
               84  LOAD_ATTR                left
               86  CALL_METHOD_2         2  ''
               88  POP_TOP          

 L.1307        90  LOAD_FAST                'self'
               92  LOAD_METHOD              traverse
               94  LOAD_FAST                'node'
               96  LOAD_ATTR                left
               98  CALL_METHOD_1         1  ''
              100  POP_TOP          

 L.1308       102  LOAD_FAST                'self'
              104  LOAD_METHOD              write
              106  LOAD_STR                 ' '
              108  LOAD_FAST                'operator'
              110  FORMAT_VALUE          0  ''
              112  LOAD_STR                 ' '
              114  BUILD_STRING_3        3 
              116  CALL_METHOD_1         1  ''
              118  POP_TOP          

 L.1309       120  LOAD_FAST                'self'
              122  LOAD_METHOD              set_precedence
              124  LOAD_FAST                'right_precedence'
              126  LOAD_FAST                'node'
              128  LOAD_ATTR                right
              130  CALL_METHOD_2         2  ''
              132  POP_TOP          

 L.1310       134  LOAD_FAST                'self'
              136  LOAD_METHOD              traverse
              138  LOAD_FAST                'node'
              140  LOAD_ATTR                right
              142  CALL_METHOD_1         1  ''
              144  POP_TOP          
              146  POP_BLOCK        
              148  LOAD_CONST               None
              150  DUP_TOP          
              152  DUP_TOP          
              154  CALL_FUNCTION_3       3  ''
              156  POP_TOP          
              158  JUMP_FORWARD        176  'to 176'
            160_0  COME_FROM_WITH       36  '36'
              160  <49>             
              162  POP_JUMP_IF_TRUE    166  'to 166'
              164  <48>             
            166_0  COME_FROM           162  '162'
              166  POP_TOP          
              168  POP_TOP          
              170  POP_TOP          
              172  POP_EXCEPT       
              174  POP_TOP          
            176_0  COME_FROM           158  '158'

Parse error at or near `<118>' instruction at offset 46

    cmpops = {'Eq':'==', 
     'NotEq':'!=', 
     'Lt':'<', 
     'LtE':'<=', 
     'Gt':'>', 
     'GtE':'>=', 
     'Is':'is', 
     'IsNot':'is not', 
     'In':'in', 
     'NotIn':'not in'}

    def visit_Compare--- This code section failed: ---

 L.1326         0  LOAD_FAST                'self'
                2  LOAD_METHOD              require_parens
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                CMP
                8  LOAD_FAST                'node'
               10  CALL_METHOD_2         2  ''
               12  SETUP_WITH          134  'to 134'
               14  POP_TOP          

 L.1327        16  LOAD_FAST                'self'
               18  LOAD_ATTR                set_precedence
               20  LOAD_GLOBAL              _Precedence
               22  LOAD_ATTR                CMP
               24  LOAD_METHOD              next
               26  CALL_METHOD_0         0  ''
               28  LOAD_FAST                'node'
               30  LOAD_ATTR                left
               32  BUILD_LIST_2          2 
               34  LOAD_FAST                'node'
               36  LOAD_ATTR                comparators
               38  CALL_FINALLY         41  'to 41'
               40  WITH_CLEANUP_FINISH
               42  CALL_FUNCTION_EX      0  'positional arguments only'
               44  POP_TOP          

 L.1328        46  LOAD_FAST                'self'
               48  LOAD_METHOD              traverse
               50  LOAD_FAST                'node'
               52  LOAD_ATTR                left
               54  CALL_METHOD_1         1  ''
               56  POP_TOP          

 L.1329        58  LOAD_GLOBAL              zip
               60  LOAD_FAST                'node'
               62  LOAD_ATTR                ops
               64  LOAD_FAST                'node'
               66  LOAD_ATTR                comparators
               68  CALL_FUNCTION_2       2  ''
               70  GET_ITER         
               72  FOR_ITER            120  'to 120'
               74  UNPACK_SEQUENCE_2     2 
               76  STORE_FAST               'o'
               78  STORE_FAST               'e'

 L.1330        80  LOAD_FAST                'self'
               82  LOAD_METHOD              write
               84  LOAD_STR                 ' '
               86  LOAD_FAST                'self'
               88  LOAD_ATTR                cmpops
               90  LOAD_FAST                'o'
               92  LOAD_ATTR                __class__
               94  LOAD_ATTR                __name__
               96  BINARY_SUBSCR    
               98  BINARY_ADD       
              100  LOAD_STR                 ' '
              102  BINARY_ADD       
              104  CALL_METHOD_1         1  ''
              106  POP_TOP          

 L.1331       108  LOAD_FAST                'self'
              110  LOAD_METHOD              traverse
              112  LOAD_FAST                'e'
              114  CALL_METHOD_1         1  ''
              116  POP_TOP          
              118  JUMP_BACK            72  'to 72'
              120  POP_BLOCK        
              122  LOAD_CONST               None
              124  DUP_TOP          
              126  DUP_TOP          
              128  CALL_FUNCTION_3       3  ''
              130  POP_TOP          
              132  JUMP_FORWARD        150  'to 150'
            134_0  COME_FROM_WITH       12  '12'
              134  <49>             
              136  POP_JUMP_IF_TRUE    140  'to 140'
              138  <48>             
            140_0  COME_FROM           136  '136'
              140  POP_TOP          
              142  POP_TOP          
              144  POP_TOP          
              146  POP_EXCEPT       
              148  POP_TOP          
            150_0  COME_FROM           132  '132'

Parse error at or near `CALL_FINALLY' instruction at offset 38

    boolops = {'And':'and', 
     'Or':'or'}
    boolop_precedence = {'and':_Precedence.AND,  'or':_Precedence.OR}

    def visit_BoolOp--- This code section failed: ---

 L.1337         0  LOAD_DEREF               'self'
                2  LOAD_ATTR                boolops
                4  LOAD_FAST                'node'
                6  LOAD_ATTR                op
                8  LOAD_ATTR                __class__
               10  LOAD_ATTR                __name__
               12  BINARY_SUBSCR    
               14  STORE_FAST               'operator'

 L.1338        16  LOAD_DEREF               'self'
               18  LOAD_ATTR                boolop_precedence
               20  LOAD_FAST                'operator'
               22  BINARY_SUBSCR    
               24  STORE_DEREF              'operator_precedence'

 L.1340        26  LOAD_CLOSURE             'operator_precedence'
               28  LOAD_CLOSURE             'self'
               30  BUILD_TUPLE_2         2 
               32  LOAD_CODE                <code_object increasing_level_traverse>
               34  LOAD_STR                 '_Unparser.visit_BoolOp.<locals>.increasing_level_traverse'
               36  MAKE_FUNCTION_8          'closure'
               38  STORE_FAST               'increasing_level_traverse'

 L.1346        40  LOAD_DEREF               'self'
               42  LOAD_METHOD              require_parens
               44  LOAD_DEREF               'operator_precedence'
               46  LOAD_FAST                'node'
               48  CALL_METHOD_2         2  ''
               50  SETUP_WITH          106  'to 106'
               52  POP_TOP          

 L.1347        54  LOAD_STR                 ' '
               56  LOAD_FAST                'operator'
               58  FORMAT_VALUE          0  ''
               60  LOAD_STR                 ' '
               62  BUILD_STRING_3        3 
               64  STORE_DEREF              's'

 L.1348        66  LOAD_DEREF               'self'
               68  LOAD_METHOD              interleave
               70  LOAD_CLOSURE             's'
               72  LOAD_CLOSURE             'self'
               74  BUILD_TUPLE_2         2 
               76  LOAD_LAMBDA              '<code_object <lambda>>'
               78  LOAD_STR                 '_Unparser.visit_BoolOp.<locals>.<lambda>'
               80  MAKE_FUNCTION_8          'closure'
               82  LOAD_FAST                'increasing_level_traverse'
               84  LOAD_FAST                'node'
               86  LOAD_ATTR                values
               88  CALL_METHOD_3         3  ''
               90  POP_TOP          
               92  POP_BLOCK        
               94  LOAD_CONST               None
               96  DUP_TOP          
               98  DUP_TOP          
              100  CALL_FUNCTION_3       3  ''
              102  POP_TOP          
              104  JUMP_FORWARD        122  'to 122'
            106_0  COME_FROM_WITH       50  '50'
              106  <49>             
              108  POP_JUMP_IF_TRUE    112  'to 112'
              110  <48>             
            112_0  COME_FROM           108  '108'
              112  POP_TOP          
              114  POP_TOP          
              116  POP_TOP          
              118  POP_EXCEPT       
              120  POP_TOP          
            122_0  COME_FROM           104  '104'

Parse error at or near `DUP_TOP' instruction at offset 96

    def visit_Attribute(self, node):
        self.set_precedence_Precedence.ATOMnode.value
        self.traversenode.value
        if isinstance(node.value, Constant):
            if isinstance(node.value.value, int):
                self.write' '
        self.write'.'
        self.writenode.attr

    def visit_Call--- This code section failed: ---

 L.1362         0  LOAD_FAST                'self'
                2  LOAD_METHOD              set_precedence
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                ATOM
                8  LOAD_FAST                'node'
               10  LOAD_ATTR                func
               12  CALL_METHOD_2         2  ''
               14  POP_TOP          

 L.1363        16  LOAD_FAST                'self'
               18  LOAD_METHOD              traverse
               20  LOAD_FAST                'node'
               22  LOAD_ATTR                func
               24  CALL_METHOD_1         1  ''
               26  POP_TOP          

 L.1364        28  LOAD_FAST                'self'
               30  LOAD_METHOD              delimit
               32  LOAD_STR                 '('
               34  LOAD_STR                 ')'
               36  CALL_METHOD_2         2  ''
               38  SETUP_WITH          144  'to 144'
               40  POP_TOP          

 L.1365        42  LOAD_CONST               False
               44  STORE_FAST               'comma'

 L.1366        46  LOAD_FAST                'node'
               48  LOAD_ATTR                args
               50  GET_ITER         
               52  FOR_ITER             88  'to 88'
               54  STORE_FAST               'e'

 L.1367        56  LOAD_FAST                'comma'
               58  POP_JUMP_IF_FALSE    72  'to 72'

 L.1368        60  LOAD_FAST                'self'
               62  LOAD_METHOD              write
               64  LOAD_STR                 ', '
               66  CALL_METHOD_1         1  ''
               68  POP_TOP          
               70  JUMP_FORWARD         76  'to 76'
             72_0  COME_FROM            58  '58'

 L.1370        72  LOAD_CONST               True
               74  STORE_FAST               'comma'
             76_0  COME_FROM            70  '70'

 L.1371        76  LOAD_FAST                'self'
               78  LOAD_METHOD              traverse
               80  LOAD_FAST                'e'
               82  CALL_METHOD_1         1  ''
               84  POP_TOP          
               86  JUMP_BACK            52  'to 52'

 L.1372        88  LOAD_FAST                'node'
               90  LOAD_ATTR                keywords
               92  GET_ITER         
               94  FOR_ITER            130  'to 130'
               96  STORE_FAST               'e'

 L.1373        98  LOAD_FAST                'comma'
              100  POP_JUMP_IF_FALSE   114  'to 114'

 L.1374       102  LOAD_FAST                'self'
              104  LOAD_METHOD              write
              106  LOAD_STR                 ', '
              108  CALL_METHOD_1         1  ''
              110  POP_TOP          
              112  JUMP_FORWARD        118  'to 118'
            114_0  COME_FROM           100  '100'

 L.1376       114  LOAD_CONST               True
              116  STORE_FAST               'comma'
            118_0  COME_FROM           112  '112'

 L.1377       118  LOAD_FAST                'self'
              120  LOAD_METHOD              traverse
              122  LOAD_FAST                'e'
              124  CALL_METHOD_1         1  ''
              126  POP_TOP          
              128  JUMP_BACK            94  'to 94'
              130  POP_BLOCK        
              132  LOAD_CONST               None
              134  DUP_TOP          
              136  DUP_TOP          
              138  CALL_FUNCTION_3       3  ''
              140  POP_TOP          
              142  JUMP_FORWARD        160  'to 160'
            144_0  COME_FROM_WITH       38  '38'
              144  <49>             
              146  POP_JUMP_IF_TRUE    150  'to 150'
              148  <48>             
            150_0  COME_FROM           146  '146'
              150  POP_TOP          
              152  POP_TOP          
              154  POP_TOP          
              156  POP_EXCEPT       
              158  POP_TOP          
            160_0  COME_FROM           142  '142'

Parse error at or near `DUP_TOP' instruction at offset 136

    def visit_Subscript--- This code section failed: ---

 L.1380         0  LOAD_CODE                <code_object is_simple_tuple>
                2  LOAD_STR                 '_Unparser.visit_Subscript.<locals>.is_simple_tuple'
                4  MAKE_FUNCTION_0          'Neither defaults, keyword-only args, annotations, nor closures'
                6  STORE_FAST               'is_simple_tuple'

 L.1390         8  LOAD_FAST                'self'
               10  LOAD_METHOD              set_precedence
               12  LOAD_GLOBAL              _Precedence
               14  LOAD_ATTR                ATOM
               16  LOAD_FAST                'node'
               18  LOAD_ATTR                value
               20  CALL_METHOD_2         2  ''
               22  POP_TOP          

 L.1391        24  LOAD_FAST                'self'
               26  LOAD_METHOD              traverse
               28  LOAD_FAST                'node'
               30  LOAD_ATTR                value
               32  CALL_METHOD_1         1  ''
               34  POP_TOP          

 L.1392        36  LOAD_FAST                'self'
               38  LOAD_METHOD              delimit
               40  LOAD_STR                 '['
               42  LOAD_STR                 ']'
               44  CALL_METHOD_2         2  ''
               46  SETUP_WITH          106  'to 106'
               48  POP_TOP          

 L.1393        50  LOAD_FAST                'is_simple_tuple'
               52  LOAD_FAST                'node'
               54  LOAD_ATTR                slice
               56  CALL_FUNCTION_1       1  ''
               58  POP_JUMP_IF_FALSE    80  'to 80'

 L.1394        60  LOAD_FAST                'self'
               62  LOAD_METHOD              items_view
               64  LOAD_FAST                'self'
               66  LOAD_ATTR                traverse
               68  LOAD_FAST                'node'
               70  LOAD_ATTR                slice
               72  LOAD_ATTR                elts
               74  CALL_METHOD_2         2  ''
               76  POP_TOP          
               78  JUMP_FORWARD         92  'to 92'
             80_0  COME_FROM            58  '58'

 L.1396        80  LOAD_FAST                'self'
               82  LOAD_METHOD              traverse
               84  LOAD_FAST                'node'
               86  LOAD_ATTR                slice
               88  CALL_METHOD_1         1  ''
               90  POP_TOP          
             92_0  COME_FROM            78  '78'
               92  POP_BLOCK        
               94  LOAD_CONST               None
               96  DUP_TOP          
               98  DUP_TOP          
              100  CALL_FUNCTION_3       3  ''
              102  POP_TOP          
              104  JUMP_FORWARD        122  'to 122'
            106_0  COME_FROM_WITH       46  '46'
              106  <49>             
              108  POP_JUMP_IF_TRUE    112  'to 112'
              110  <48>             
            112_0  COME_FROM           108  '108'
              112  POP_TOP          
              114  POP_TOP          
              116  POP_TOP          
              118  POP_EXCEPT       
              120  POP_TOP          
            122_0  COME_FROM           104  '104'

Parse error at or near `DUP_TOP' instruction at offset 96

    def visit_Starred(self, node):
        self.write'*'
        self.set_precedence_Precedence.EXPRnode.value
        self.traversenode.value

    def visit_Ellipsis(self, node):
        self.write'...'

    def visit_Slice(self, node):
        if node.lower:
            self.traversenode.lower
        self.write':'
        if node.upper:
            self.traversenode.upper
        if node.step:
            self.write':'
            self.traversenode.step

    def visit_arg(self, node):
        self.writenode.arg
        if node.annotation:
            self.write': '
            self.traversenode.annotation

    def visit_arguments(self, node):
        first = True
        all_args = node.posonlyargs + node.args
        defaults = [None] * (len(all_args) - len(node.defaults)) + node.defaults
        for index, elements in enumerate(zip(all_args, defaults), 1):
            a, d = elements
            if first:
                first = False
            else:
                self.write', '
            self.traversea
            if d:
                self.write'='
                self.traversed
            else:
                if index == len(node.posonlyargs):
                    self.write', /'
                if node.vararg or node.kwonlyargs:
                    if first:
                        first = False
                    else:
                        self.write', '
                    self.write'*'
                    if node.vararg:
                        self.writenode.vararg.arg
                        if node.vararg.annotation:
                            self.write': '
                            self.traversenode.vararg.annotation
            if node.kwonlyargs:
                for a, d in zip(node.kwonlyargs, node.kw_defaults):
                    self.write', '
                    self.traversea

                if d:
                    self.write'='
                    self.traversed
        else:
            if node.kwarg:
                if first:
                    first = False
                else:
                    self.write', '
                self.write('**' + node.kwarg.arg)
                if node.kwarg.annotation:
                    self.write': '
                    self.traversenode.kwarg.annotation

    def visit_keyword--- This code section failed: ---

 L.1474         0  LOAD_FAST                'node'
                2  LOAD_ATTR                arg
                4  LOAD_CONST               None
                6  <117>                 0  ''
                8  POP_JUMP_IF_FALSE    22  'to 22'

 L.1475        10  LOAD_FAST                'self'
               12  LOAD_METHOD              write
               14  LOAD_STR                 '**'
               16  CALL_METHOD_1         1  ''
               18  POP_TOP          
               20  JUMP_FORWARD         44  'to 44'
             22_0  COME_FROM             8  '8'

 L.1477        22  LOAD_FAST                'self'
               24  LOAD_METHOD              write
               26  LOAD_FAST                'node'
               28  LOAD_ATTR                arg
               30  CALL_METHOD_1         1  ''
               32  POP_TOP          

 L.1478        34  LOAD_FAST                'self'
               36  LOAD_METHOD              write
               38  LOAD_STR                 '='
               40  CALL_METHOD_1         1  ''
               42  POP_TOP          
             44_0  COME_FROM            20  '20'

 L.1479        44  LOAD_FAST                'self'
               46  LOAD_METHOD              traverse
               48  LOAD_FAST                'node'
               50  LOAD_ATTR                value
               52  CALL_METHOD_1         1  ''
               54  POP_TOP          

Parse error at or near `None' instruction at offset -1

    def visit_Lambda--- This code section failed: ---

 L.1482         0  LOAD_FAST                'self'
                2  LOAD_METHOD              require_parens
                4  LOAD_GLOBAL              _Precedence
                6  LOAD_ATTR                TEST
                8  LOAD_FAST                'node'
               10  CALL_METHOD_2         2  ''
               12  SETUP_WITH           90  'to 90'
               14  POP_TOP          

 L.1483        16  LOAD_FAST                'self'
               18  LOAD_METHOD              write
               20  LOAD_STR                 'lambda '
               22  CALL_METHOD_1         1  ''
               24  POP_TOP          

 L.1484        26  LOAD_FAST                'self'
               28  LOAD_METHOD              traverse
               30  LOAD_FAST                'node'
               32  LOAD_ATTR                args
               34  CALL_METHOD_1         1  ''
               36  POP_TOP          

 L.1485        38  LOAD_FAST                'self'
               40  LOAD_METHOD              write
               42  LOAD_STR                 ': '
               44  CALL_METHOD_1         1  ''
               46  POP_TOP          

 L.1486        48  LOAD_FAST                'self'
               50  LOAD_METHOD              set_precedence
               52  LOAD_GLOBAL              _Precedence
               54  LOAD_ATTR                TEST
               56  LOAD_FAST                'node'
               58  LOAD_ATTR                body
               60  CALL_METHOD_2         2  ''
               62  POP_TOP          

 L.1487        64  LOAD_FAST                'self'
               66  LOAD_METHOD              traverse
               68  LOAD_FAST                'node'
               70  LOAD_ATTR                body
               72  CALL_METHOD_1         1  ''
               74  POP_TOP          
               76  POP_BLOCK        
               78  LOAD_CONST               None
               80  DUP_TOP          
               82  DUP_TOP          
               84  CALL_FUNCTION_3       3  ''
               86  POP_TOP          
               88  JUMP_FORWARD        106  'to 106'
             90_0  COME_FROM_WITH       12  '12'
               90  <49>             
               92  POP_JUMP_IF_TRUE     96  'to 96'
               94  <48>             
             96_0  COME_FROM            92  '92'
               96  POP_TOP          
               98  POP_TOP          
              100  POP_TOP          
              102  POP_EXCEPT       
              104  POP_TOP          
            106_0  COME_FROM            88  '88'

Parse error at or near `DUP_TOP' instruction at offset 80

    def visit_alias(self, node):
        self.writenode.name
        if node.asname:
            self.write(' as ' + node.asname)

    def visit_withitem(self, node):
        self.traversenode.context_expr
        if node.optional_vars:
            self.write' as '
            self.traversenode.optional_vars


def unparse(ast_obj):
    unparser = _Unparser()
    return unparser.visitast_obj


def main--- This code section failed: ---

 L.1506         0  LOAD_CONST               0
                2  LOAD_CONST               None
                4  IMPORT_NAME              argparse
                6  STORE_FAST               'argparse'

 L.1508         8  LOAD_FAST                'argparse'
               10  LOAD_ATTR                ArgumentParser
               12  LOAD_STR                 'python -m ast'
               14  LOAD_CONST               ('prog',)
               16  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
               18  STORE_FAST               'parser'

 L.1509        20  LOAD_FAST                'parser'
               22  LOAD_ATTR                add_argument
               24  LOAD_STR                 'infile'
               26  LOAD_FAST                'argparse'
               28  LOAD_ATTR                FileType
               30  LOAD_STR                 'rb'
               32  LOAD_CONST               ('mode',)
               34  CALL_FUNCTION_KW_1     1  '1 total positional and keyword args'
               36  LOAD_STR                 '?'

 L.1510        38  LOAD_STR                 '-'

 L.1511        40  LOAD_STR                 'the file to parse; defaults to stdin'

 L.1509        42  LOAD_CONST               ('type', 'nargs', 'default', 'help')
               44  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
               46  POP_TOP          

 L.1512        48  LOAD_FAST                'parser'
               50  LOAD_ATTR                add_argument
               52  LOAD_STR                 '-m'
               54  LOAD_STR                 '--mode'
               56  LOAD_STR                 'exec'

 L.1513        58  LOAD_CONST               ('exec', 'single', 'eval', 'func_type')

 L.1514        60  LOAD_STR                 'specify what kind of code must be parsed'

 L.1512        62  LOAD_CONST               ('default', 'choices', 'help')
               64  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
               66  POP_TOP          

 L.1515        68  LOAD_FAST                'parser'
               70  LOAD_ATTR                add_argument
               72  LOAD_STR                 '--no-type-comments'
               74  LOAD_CONST               True
               76  LOAD_STR                 'store_false'

 L.1516        78  LOAD_STR                 "don't add information about type comments"

 L.1515        80  LOAD_CONST               ('default', 'action', 'help')
               82  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
               84  POP_TOP          

 L.1517        86  LOAD_FAST                'parser'
               88  LOAD_ATTR                add_argument
               90  LOAD_STR                 '-a'
               92  LOAD_STR                 '--include-attributes'
               94  LOAD_STR                 'store_true'

 L.1518        96  LOAD_STR                 'include attributes such as line numbers and column offsets'

 L.1517        98  LOAD_CONST               ('action', 'help')
              100  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              102  POP_TOP          

 L.1520       104  LOAD_FAST                'parser'
              106  LOAD_ATTR                add_argument
              108  LOAD_STR                 '-i'
              110  LOAD_STR                 '--indent'
              112  LOAD_GLOBAL              int
              114  LOAD_CONST               3

 L.1521       116  LOAD_STR                 'indentation of nodes (number of spaces)'

 L.1520       118  LOAD_CONST               ('type', 'default', 'help')
              120  CALL_FUNCTION_KW_5     5  '5 total positional and keyword args'
              122  POP_TOP          

 L.1522       124  LOAD_FAST                'parser'
              126  LOAD_METHOD              parse_args
              128  CALL_METHOD_0         0  ''
              130  STORE_FAST               'args'

 L.1524       132  LOAD_FAST                'args'
              134  LOAD_ATTR                infile
              136  SETUP_WITH          162  'to 162'
              138  STORE_FAST               'infile'

 L.1525       140  LOAD_FAST                'infile'
              142  LOAD_METHOD              read
              144  CALL_METHOD_0         0  ''
              146  STORE_FAST               'source'
              148  POP_BLOCK        
              150  LOAD_CONST               None
              152  DUP_TOP          
              154  DUP_TOP          
              156  CALL_FUNCTION_3       3  ''
              158  POP_TOP          
              160  JUMP_FORWARD        178  'to 178'
            162_0  COME_FROM_WITH      136  '136'
              162  <49>             
              164  POP_JUMP_IF_TRUE    168  'to 168'
              166  <48>             
            168_0  COME_FROM           164  '164'
              168  POP_TOP          
              170  POP_TOP          
              172  POP_TOP          
              174  POP_EXCEPT       
              176  POP_TOP          
            178_0  COME_FROM           160  '160'

 L.1526       178  LOAD_GLOBAL              parse
              180  LOAD_FAST                'source'
              182  LOAD_FAST                'args'
              184  LOAD_ATTR                infile
              186  LOAD_ATTR                name
              188  LOAD_FAST                'args'
              190  LOAD_ATTR                mode
              192  LOAD_FAST                'args'
              194  LOAD_ATTR                no_type_comments
              196  LOAD_CONST               ('type_comments',)
              198  CALL_FUNCTION_KW_4     4  '4 total positional and keyword args'
              200  STORE_FAST               'tree'

 L.1527       202  LOAD_GLOBAL              print
              204  LOAD_GLOBAL              dump
              206  LOAD_FAST                'tree'
              208  LOAD_FAST                'args'
              210  LOAD_ATTR                include_attributes
              212  LOAD_FAST                'args'
              214  LOAD_ATTR                indent
              216  LOAD_CONST               ('include_attributes', 'indent')
              218  CALL_FUNCTION_KW_3     3  '3 total positional and keyword args'
              220  CALL_FUNCTION_1       1  ''
              222  POP_TOP          

Parse error at or near `DUP_TOP' instruction at offset 152


if __name__ == '__main__':
    main()